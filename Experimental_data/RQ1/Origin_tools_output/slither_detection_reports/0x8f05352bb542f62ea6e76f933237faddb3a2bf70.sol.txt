INFO:Slither:Compilation warnings/errors on /sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol:
Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> /sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol


INFO:Detectors:[93m
AntiPaypalSale.startSale (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#156-158) uses a dangerous strict equality:
	- require(bool)(msg.sender == owner && startDate == 0)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
AntiPaypalSale.fallback (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#91-111) does not use the value returned by external calls:
	-Token.transfer(msg.sender,amount) (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#111)
AntiPaypalSale.contribute (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#113-134) does not use the value returned by external calls:
	-Token.transfer(msg.sender,amount) (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#133-134)
AntiPaypalSale.burn (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#146-153) does not use the value returned by external calls:
	-Token.transfer(address(0),Token.balanceOf(address(this))) (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#151-153)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in AntiPaypalSale.contribute (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#113-134):
	External calls:
	- require(bool)(Token.balanceOf(address(this)) > 0) (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#115-117)
	State variables written after the call(s):
	- amount (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#122-123)
	- amount (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#124-125)
Reentrancy in AntiPaypalSale.contribute (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#113-134):
	External calls:
	- require(bool)(Token.balanceOf(address(this)) > 0) (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#115-117)
	- require(bool)(amount <= Token.balanceOf(address(this))) (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#126-127)
	State variables written after the call(s):
	- collectedETH (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#131)
	- totalSold (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#128-131)
Reentrancy in AntiPaypalSale.fallback (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#91-111):
	External calls:
	- require(bool)(Token.balanceOf(address(this)) > 0) (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#93-94)
	State variables written after the call(s):
	- amount (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#99-102)
	- amount (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#103-104)
Reentrancy in AntiPaypalSale.fallback (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#91-111):
	External calls:
	- require(bool)(Token.balanceOf(address(this)) > 0) (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#93-94)
	- require(bool)(amount <= Token.balanceOf(address(this))) (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#104-105)
	State variables written after the call(s):
	- collectedETH (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#107-110)
	- totalSold (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#106-107)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
AntiPaypalSale.withdrawETH (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#135-143) should be declared external
AntiPaypalSale.endPresale (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#143-145) should be declared external
AntiPaypalSale.burn (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#146-153) should be declared external
AntiPaypalSale.startSale (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#156-158) should be declared external
AntiPaypalSale.availableTokens (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol:
	- pragma solidity0.6.8 (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#5-7): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_wallet' of AntiPaypalSale. (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#85-87) is not in mixedCase
Variable 'AntiPaypalSale.Token' (/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol#78-79) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0x8f05352bb542f62ea6e76f933237faddb3a2bf70.sol analyzed (3 contracts), 16 result(s) found
