INFO:Slither:Compilation warnings/errors on /sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol:
/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol:225:31: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );
                              ^--------------------------------------------^
/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol:300:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 digest = keccak256(challenge_number,msg.sender,nonce);
                         ^------------------------------------------^
/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol:305:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
          bytes32 digest = keccak256(challenge_number,msg.sender,nonce);
                           ^------------------------------------------^
/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol:255:25: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
      challengeNumber = block.blockhash(block.number - 1);
                        ^-------------^
/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol:299:43: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {
                                          ^----------------------^

INFO:Detectors:[93m
SkorchToken._claimTokens (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#377-391) uses a dangerous strict equality:
	- timer[target] == 0
	- timer[target] == now
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Contract locking ether found in /sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol:
	Contract SkorchToken has payable functions:
	 - fallback (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#365-366)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
SkorchToken._claimTokens (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#377-391) does not use the value returned by external calls:
	-_totalSupply.add(totalTkn) (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#388)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
SkorchToken._BLOCKS_PER_READJUSTMENT should be constant (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#158-160)
SkorchToken._MAXIMUM_TARGET should be constant (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#160-162)
SkorchToken._MINIMUM_TARGET should be constant (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#160)
SkorchToken.doubleUnit should be constant (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#194-196)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#260-261:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ERC20Interface.totalSupply (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#94-95) should be declared external
SkorchToken.totalSupply (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#318-320) should be declared external
SkorchToken.balanceOf (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#320-324) should be declared external
ERC20Interface.balanceOf (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#95) should be declared external
ERC20Interface.allowance (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#95-97) should be declared external
SkorchToken.allowance (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#358-365) should be declared external
ERC20Interface.transfer (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#97-98) should be declared external
SkorchToken.transfer (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#325-334) should be declared external
SkorchToken.approve (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#334-339) should be declared external
ERC20Interface.approve (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#98) should be declared external
ERC20Interface.transferFrom (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#99-100) should be declared external
SkorchToken.transferFrom (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#339-350) should be declared external
ApproveAndCallFallBack.receiveApproval (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#107-113) should be declared external
Owned.transferOwnership (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#130-132) should be declared external
Owned.acceptOwnership (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#133-143) should be declared external
SkorchToken.setPosTokens (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#220-226) should be declared external
SkorchToken.mint (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#227-249) should be declared external
SkorchToken.getChallengeNumber (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#291-295) should be declared external
SkorchToken.getMiningDifficulty (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#296-299) should be declared external
SkorchToken.getMiningTarget (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#299-300) should be declared external
SkorchToken.getMintDigest (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#304-307) should be declared external
SkorchToken.checkMintSolution (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#307-318) should be declared external
SkorchToken.approveAndCall (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#350-358) should be declared external
SkorchToken.fallback (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#365-366) should be declared external
SkorchToken.transferAnyERC20Token (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#366-372) should be declared external
SkorchToken.claimTokens (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#372-376) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol:
	- pragma solidity^0.4.18 (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_newOwner' of Owned.transferOwnership (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#131) is not in mixedCase
Parameter 'challenge_digest' of SkorchToken.mint (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#227-228) is not in mixedCase
Function 'SkorchToken._startNewMiningEpoch' (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#249-261) is not in mixedCase
Function 'SkorchToken._reAdjustDifficulty' (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#261-291) is not in mixedCase
Parameter 'challenge_digest' of SkorchToken.getMintDigest (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#304) is not in mixedCase
Parameter 'challenge_number' of SkorchToken.getMintDigest (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#304) is not in mixedCase
Parameter 'challenge_digest' of SkorchToken.checkMintSolution (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#310) is not in mixedCase
Parameter 'challenge_number' of SkorchToken.checkMintSolution (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#310-311) is not in mixedCase
Function 'SkorchToken._claimTokens' (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#377-391) is not in mixedCase
Function 'SkorchToken._getPoS' (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#391-403) is not in mixedCase
Variable 'SkorchToken._totalSupply' (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#152-154) is not in mixedCase
Variable 'SkorchToken._BLOCKS_PER_READJUSTMENT' (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#158-160) is not in mixedCase
Variable 'SkorchToken._MINIMUM_TARGET' (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#160) is not in mixedCase
Variable 'SkorchToken._MAXIMUM_TARGET' (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#160-162) is not in mixedCase
Variable 'SkorchToken.MinimumPoStokens' (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#162-165) is not in mixedCase
Constant 'SkorchToken.ln2' (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#403-404) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SkorchToken.ln2_64dot5' (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#405-406) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SkorchToken.one' (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#406-407) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SkorchToken.c2' (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#407-408) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SkorchToken.c4' (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#408-410) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SkorchToken.c6' (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#410-411) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SkorchToken.c8' (/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol#411-412) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0xd83caa129d9d7080a15d26499733f783eb14e667.sol analyzed (6 contracts), 54 result(s) found
