INFO:Slither:Compilation warnings/errors on /sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:51:21: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!assertion) throw;
                    ^---^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:129:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Excalibur() {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:141:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != admin) throw;
                                 ^---^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:151:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!tradeState) throw;
                         ^---^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:205:41: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (tokens[0][msg.sender] < amount) throw;
                                        ^---^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:209:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!msg.sender.call.value(amount)()) throw;
                                          ^---^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:221:19: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (token==0) throw;
                  ^---^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:223:63: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!Token(token).transferFrom(msg.sender, this, amount)) throw;
                                                              ^---^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:235:19: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (token==0) throw;
                  ^---^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:237:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (tokens[token][msg.sender] < amount) throw;
                                            ^---^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:241:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!Token(token).transfer(msg.sender, amount)) throw;
                                                    ^---^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:275:193: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
 ... throw ... 
     ^---^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:305:119: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!(orders[msg.sender][hash] || ecrecover(sha3("\x19Ethereum Signed Message:\n32", hash),v,r,s) == msg.sender)) throw;
                                                                                                                      ^---^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:49:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:175:26: Warning: This declaration shadows a builtin symbol.
  function systemMessage(string msg) onlyAdmin {
                         ^--------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:197:5: Warning: Invoking events without "emit" prefix is deprecated.
    Deposit(0, msg.sender, msg.value, tokens[0][msg.sender]);
    ^------------------------------------------------------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:211:5: Warning: Invoking events without "emit" prefix is deprecated.
    Withdraw(0x0000000000000000000000000000000000000000, msg.sender, amount, tokens[0][msg.sender]);
    ^---------------------------------------------------------------------------------------------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:227:5: Warning: Invoking events without "emit" prefix is deprecated.
    Deposit(token, msg.sender, amount, tokens[token][msg.sender]);
    ^-----------------------------------------------------------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:243:5: Warning: Invoking events without "emit" prefix is deprecated.
    Withdraw(token, msg.sender, amount, tokens[token][msg.sender]);
    ^------------------------------------------------------------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:259:20: Warning: "sha3" has been deprecated in favour of "keccak256"
    bytes32 hash = sha3(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^--------------------------------------------------------------------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:259:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha3(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^--------------------------------------------------------------------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:263:5: Warning: Invoking events without "emit" prefix is deprecated.
    Order(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, msg.sender, hash);
    ^---------------------------------------------------------------------------------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:273:20: Warning: "sha3" has been deprecated in favour of "keccak256"
    bytes32 hash = sha3(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^--------------------------------------------------------------------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:273:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha3(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^--------------------------------------------------------------------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:275:45: Warning: "sha3" has been deprecated in favour of "keccak256"
 ... sha3("\x19Ethereum Signed Message:\n32", hash) ... 
     ^--------------------------------------------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:275:45: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... sha3("\x19Ethereum Signed Message:\n32", hash) ... 
     ^--------------------------------------------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:281:5: Warning: Invoking events without "emit" prefix is deprecated.
    Trade(tokenGet, amount, tokenGive, amountGive * amount / amountGet, user, msg.sender, hash, pair);
    ^-----------------------------------------------------------------------------------------------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:303:20: Warning: "sha3" has been deprecated in favour of "keccak256"
    bytes32 hash = sha3(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^--------------------------------------------------------------------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:303:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha3(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^--------------------------------------------------------------------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:305:49: Warning: "sha3" has been deprecated in favour of "keccak256"
    if (!(orders[msg.sender][hash] || ecrecover(sha3("\x19Ethereum Signed Message:\n32", hash),v,r,s) == msg.sender)) throw;
                                                ^--------------------------------------------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:305:49: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    if (!(orders[msg.sender][hash] || ecrecover(sha3("\x19Ethereum Signed Message:\n32", hash),v,r,s) == msg.sender)) throw;
                                                ^--------------------------------------------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:309:5: Warning: Invoking events without "emit" prefix is deprecated.
    Cancel(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, msg.sender, v, r, s, hash, pair);
    ^-------------------------------------------------------------------------------------------------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:71:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint256 _value) returns (bool success) {}
  ^----------------------------------------------------------------------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:71:21: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transfer(address _to, uint256 _value) returns (bool success) {}
                    ^---------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:71:34: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transfer(address _to, uint256 _value) returns (bool success) {}
                                 ^------------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:71:59: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transfer(address _to, uint256 _value) returns (bool success) {}
                                                          ^----------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:85:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}
  ^-----------------------------------------------------------------------------------------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:85:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}
                        ^-----------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:85:40: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}
                                       ^---------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:85:53: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}
                                                    ^------------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:85:78: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}
                                                                             ^----------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:129:3: Warning: No visibility specified. Defaulting to "public". 
  function Excalibur() {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:159:3: Warning: No visibility specified. Defaulting to "public". 
  function checkAdmin() onlyAdmin constant returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:167:3: Warning: No visibility specified. Defaulting to "public". 
  function transferOwnership(address newAdmin) onlyAdmin {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:175:3: Warning: No visibility specified. Defaulting to "public". 
  function systemMessage(string msg) onlyAdmin {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:183:3: Warning: No visibility specified. Defaulting to "public". 
  function changeTradeState(bool state_) onlyAdmin {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:191:3: Warning: No visibility specified. Defaulting to "public". 
  function deposit() payable tradeIsOpen {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:203:3: Warning: No visibility specified. Defaulting to "public". 
  function withdraw(uint amount) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:217:3: Warning: No visibility specified. Defaulting to "public". 
  function depositToken(address token, uint amount) tradeIsOpen {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:233:3: Warning: No visibility specified. Defaulting to "public". 
  function withdrawToken(address token, uint amount) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:249:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address token, address user) constant returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:257:3: Warning: No visibility specified. Defaulting to "public". 
  function order(address tokenGet, uint amountGet, address tokenGive, uint amountGive, uint expires, uint nonce) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:269:3: Warning: No visibility specified. Defaulting to "public". 
  function trade(address tokenGet, uint amountGet, address tokenGive, uint amountGive, uint expires, uint nonce, address user, uint8 v, bytes32 r, bytes32 s, uint amount, string pair) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:301:3: Warning: No visibility specified. Defaulting to "public". 
  function cancelOrder(address tokenGet, uint amountGet, address tokenGive, uint amountGive, uint expires, uint nonce, uint8 v, bytes32 r, bytes32 s, string pair) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:49:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:71:3: Warning: Function state mutability can be restricted to pure
  function transfer(address _to, uint256 _value) returns (bool success) {}
  ^----------------------------------------------------------------------^
/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:85:3: Warning: Function state mutability can be restricted to pure
  function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {}
  ^-----------------------------------------------------------------------------------------^

INFO:Detectors:[92m
SafeMath.assert (function @ /sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#51-63) shadows built-in symbol "assert"
Excalibur.systemMessage.msg (local variable @ /sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#191-193) shadows built-in symbol "msg"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Excalibur.depositToken (/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#221-241):
	External calls:
	- ! Token(token).transferFrom(msg.sender,this,amount) (/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#233-235)
	State variables written after the call(s):
	- tokens (/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#235-239)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Deprecated standard detected @ /sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#63:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#211:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#219:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#227-229:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#235:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#243:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#249:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#257:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#269:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#275-277:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#279-287:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#287:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#309-313:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#159:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#167:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Token.transfer (/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#71-75) should be declared external
Token.transferFrom (/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#85-99) should be declared external
Excalibur.checkAdmin (/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#169-177) should be declared external
Excalibur.transferOwnership (/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#183-191) should be declared external
Excalibur.systemMessage (/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#191-193) should be declared external
Excalibur.changeTradeState (/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#195-197) should be declared external
Excalibur.deposit (/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#197-209) should be declared external
Excalibur.withdraw (/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#211-221) should be declared external
Excalibur.depositToken (/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#221-241) should be declared external
Excalibur.withdrawToken (/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#241-259) should be declared external
Excalibur.balanceOf (/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#259-263) should be declared external
Excalibur.order (/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#263-273) should be declared external
Excalibur.trade (/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#273-291) should be declared external
Excalibur.cancelOrder (/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#305-313) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol:
	- pragma solidity^0.4.9 (/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#9-13): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in Excalibur.withdraw (/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#211-221):
	-! msg.sender.call.value(amount)() /sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#217-219
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'Excalibur.Excalibur' (/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol#141-151) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0x9419fbecfa0a9e38a96be2d818daa13dca72396e.sol analyzed (3 contracts), 37 result(s) found
