INFO:Slither:Compilation warnings/errors on /sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:108:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function CelebrityToken() public {

  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:544:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function CelebrityBreederToken() public { 

  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:591:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    Person person;

    ^-----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:611:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    Person person;

    ^-----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:789:6: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
     Person person; //@Artyom reference

     ^-----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:818:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    Person person; //@Artyom reference

    ^-----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:872:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    Person person; //@Artyom reference

    ^-----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:927:8: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
       Person person; //@Artyom reference

       ^-----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:954:5: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
    Person withperson; //@Artyom reference

    ^---------------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1093:7: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
      Person person;

      ^-----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1113:10: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
         Person person; 

         ^-----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1139:10: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
         Person person; 

         ^-----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1162:10: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
         Person person;

         ^-----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1177:10: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
         Person person;

         ^-----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:128:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _to, _tokenId);

    ^---------------------------------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:236:5: Warning: Invoking events without "emit" prefix is deprecated.
    TokenSold(_tokenId, sellingPrice, personIndexToPrice[_tokenId], oldOwner, newOwner, persons[_tokenId].name);

    ^---------------------------------------------------------------------------------------------------------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:367:5: Warning: Invoking events without "emit" prefix is deprecated.
    Birth(newPersonId, _name, _owner);

    ^-------------------------------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:384:27: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      ceoAddress.transfer(this.balance);

                          ^----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:386:20: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
      _to.transfer(this.balance);

                   ^----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:405:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _tokenId);

    ^----------------------------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:470:64: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xDAb64Dc4A02225F76FccCe35aB9bA53B3735C684'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
  CelebrityBreederToken private CelBetta=CelebrityBreederToken(0xdab64dc4a02225f76fccce35ab9ba53b3735c684); //@Artyom Pointing to betta 

                                                               ^----------------------------------------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:582:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _to, _tokenId);

    ^---------------------------------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:591:5: Warning: Uninitialized storage pointer. Did you mean '<type> memory person'?
    Person person;

    ^-----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:611:5: Warning: Uninitialized storage pointer. Did you mean '<type> memory person'?
    Person person;

    ^-----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:670:5: Warning: Invoking events without "emit" prefix is deprecated.
    TokenSold(_tokenId, sellingPrice, personIndexToPriceGen1[_tokenId], oldOwner, newOwner, PersonsGen1[_tokenId].name);

    ^-----------------------------------------------------------------------------------------------------------------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:696:5: Warning: Invoking events without "emit" prefix is deprecated.
    SellingPriceEvent(msg.sender,_tokenId,true,_price);

    ^------------------------------------------------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:789:6: Warning: Uninitialized storage pointer. Did you mean '<type> memory person'?
     Person person; //@Artyom reference

     ^-----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:810:5: Warning: Invoking events without "emit" prefix is deprecated.
    GenesInitialisedEvent(msg.sender,tokenId,generation,newgene);

    ^----------------------------------------------------------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:818:5: Warning: Uninitialized storage pointer. Did you mean '<type> memory person'?
    Person person; //@Artyom reference

    ^-----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:872:5: Warning: Uninitialized storage pointer. Did you mean '<type> memory person'?
    Person person; //@Artyom reference

    ^-----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:927:8: Warning: Uninitialized storage pointer. Did you mean '<type> memory person'?
       Person person; //@Artyom reference

       ^-----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:942:8: Warning: Invoking events without "emit" prefix is deprecated.
       SiringPriceEvent(msg.sender,_mypersonid,_mypersongeneration,_siringprice);

       ^-----------------------------------------------------------------------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:954:5: Warning: Uninitialized storage pointer. Did you mean '<type> memory withperson'?
    Person withperson; //@Artyom reference

    ^---------------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1005:5: Warning: Invoking events without "emit" prefix is deprecated.
    Birth(newPersonId, _name, msg.sender);

    ^-----------------------------------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1021:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
           _rand=uint64(keccak256(block.blockhash(block.number), i, now,_mypersonid,_withpersonid))%10000;

                        ^------------------------------------------------------------------------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1055:58: Warning: The type of "int_const 11" was inferred as uint8. This is probably not desired. Use an explicit type to silence this warning.
      if(uint64(keccak256(block.blockhash(block.number), 11, now,_mypersonid,_withpersonid))%2>0)

                                                         ^^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1055:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      if(uint64(keccak256(block.blockhash(block.number), 11, now,_mypersonid,_withpersonid))%2>0)

                ^-------------------------------------------------------------------------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1070:26: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    DevAddress.transfer((this.balance/10)*3);

                         ^----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1071:26: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    CeoAddress.transfer((this.balance/10)*7); 

                         ^----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1090:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _tokenId);

    ^----------------------------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1093:7: Warning: Uninitialized storage pointer. Did you mean '<type> memory person'?
      Person person;

      ^-----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1113:10: Warning: Uninitialized storage pointer. Did you mean '<type> memory person'?
         Person person; 

         ^-----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1132:5: Warning: Invoking events without "emit" prefix is deprecated.
    Trained(msg.sender, personid, persongeneration);

    ^---------------------------------------------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1139:10: Warning: Uninitialized storage pointer. Did you mean '<type> memory person'?
         Person person; 

         ^-----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1157:5: Warning: Invoking events without "emit" prefix is deprecated.
    Beaten(msg.sender, personid, persongeneration);    

    ^--------------------------------------------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1162:10: Warning: Uninitialized storage pointer. Did you mean '<type> memory person'?
         Person person;

         ^-----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1177:10: Warning: Uninitialized storage pointer. Did you mean '<type> memory person'?
         Person person;

         ^-----------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1021:35: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
           _rand=uint64(keccak256(block.blockhash(block.number), i, now,_mypersonid,_withpersonid))%10000;

                                  ^-------------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1055:27: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
      if(uint64(keccak256(block.blockhash(block.number), 11, now,_mypersonid,_withpersonid))%2>0)

                          ^-------------^
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1161:5: Warning: No visibility specified. Defaulting to "public". 
    function checkTrainingPrice(uint256 personid, bool persongeneration) view returns (uint256) {

    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1176:5: Warning: No visibility specified. Defaulting to "public". 
    function checkBeatingPrice(uint256 personid, bool persongeneration) view returns (uint256) {

    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:1008:3: Warning: Function state mutability can be restricted to view
  function _generateGene(uint64 _genes1,uint64 _genes2,uint256 _mypersonid,uint256 _withpersonid) private returns(uint64,bool) {

  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
CelebrityToken.purchase (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#405-491) sends eth to arbitrary user
	Dangerous calls:
	- oldOwner.transfer(payment) (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#481)
CelebrityToken._payout (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#783-793) sends eth to arbitrary user
	Dangerous calls:
	- ceoAddress.transfer(this.balance) (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#789)
	- _to.transfer(this.balance) (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#793)
CelebrityBreederToken.purchase (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1315-1397) sends eth to arbitrary user
	Dangerous calls:
	- oldOwner.transfer(sellingPrice) (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1377-1379)
CelebrityBreederToken._payout (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2193-2201) sends eth to arbitrary user
	Dangerous calls:
	- DevAddress.transfer((this.balance / 10) * 3) (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2193-2199)
	- CeoAddress.transfer((this.balance / 10) * 7) (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2199-2201)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
ERC721 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#13-57) has incorrect ERC20 function interface(s):
	-approve (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#17-19)
	-transferFrom (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#29-31)
	-transfer (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#31-35)
CelebrityToken (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#57-849) has incorrect ERC20 function interface(s):
	-approve (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#247-265)
	-transferFrom (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#691-703)
	-transfer (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#657-663)
CelebrityBreederToken (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#921-2379) has incorrect ERC20 function interface(s):
	-approve (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1179-1191)
	-transferFrom (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1567-1577)
	-transfer (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1557-1565)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
Reentrancy in CelebrityBreederToken.allowexternalContract (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1135-1179):
	External calls:
	- require(bool)(_owns(msg.sender,_tokenId,_tokengeneration)) (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1151)
	State variables written after the call(s):
	- ExternalAllowdContractGen0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1171)
	- ExternalAllowdContractGen0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1173-1179)
	- ExternalAllowdContractGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1155-1159)
	- ExternalAllowdContractGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1163-1167)
Reentrancy in CelebrityBreederToken.breed (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1663-1755):
	External calls:
	- require(bool)(_owns(msg.sender,_mypersonid,_mypersongeneration)) (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1679-1686)
	State variables written after the call(s):
	- ExternalAllowdContractGen0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1737-1739)
	- ExternalAllowdContractGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1737-1739)
	- personIndexToOwnerGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1737-1739)
Reentrancy in CelebrityBreederToken.breedOnAuction (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1755-1883):
	External calls:
	- require(bool)(_owns(msg.sender,_mypersonid,_mypersongeneration)) (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1773-1775)
	- owneroffather = CelGen0.ownerOf(_withpersonid) (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1823-1825)
	State variables written after the call(s):
	- ExternalAllowdContractGen0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1859-1865)
	- ExternalAllowdContractGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1859-1865)
	- PersonsGen0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1859-1865)
	- PersonsGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1859-1865)
	- PersonsGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1865-1869)
	- PersonsGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1871-1875)
	- PersonsGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1875-1879)
	- PersonsGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1879-1881)
	- personIndexToOwnerGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1859-1865)
	- personIndexToSiringPrice0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1859-1865)
Reentrancy in CelebrityBreederToken.transfer (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1557-1565):
	External calls:
	- require(bool)(_owns(msg.sender,_tokenId,true)) (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1559-1565)
	State variables written after the call(s):
	- ExternalAllowdContractGen0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1565)
	- ExternalAllowdContractGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1565)
	- personIndexToOwnerGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1565)
Reentrancy in CelebrityBreederToken.transferFrom (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1567-1577):
	External calls:
	- require(bool)(_owns(_from,_tokenId,true)) (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1571-1573)
	State variables written after the call(s):
	- ExternalAllowdContractGen0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1575-1577)
	- ExternalAllowdContractGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1575-1577)
	- personIndexToOwnerGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1575-1577)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
CelebrityBreederToken.masscreate.name (local variable @ /sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1101) shadows:
	- CelebrityBreederToken.name (function @ /sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1297-1303)
CelebrityBreederToken.getPerson.name (local variable @ /sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1211) shadows:
	- CelebrityBreederToken.name (function @ /sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1297-1303)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
CelebrityBreederToken.masscreate has external calls inside a loop:
	- (name,surname,genes,None,None,None,None,None,gender) = CelBetta.getPerson(i,false) (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1105-1111)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in CelebrityBreederToken.SetGene (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1625-1663):
	External calls:
	- require(bool)(_owns(msg.sender,tokenId,generation) || msg.sender == CeoAddress) (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1625)
	State variables written after the call(s):
	- PersonsGen0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1657-1661)
	- PersonsGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1657-1661)
Reentrancy in CelebrityBreederToken.approve (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1179-1191):
	External calls:
	- require(bool)(_owns(msg.sender,_tokenId,true)) (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1179-1183)
	State variables written after the call(s):
	- personIndexToApprovedGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1183-1185)
Reentrancy in CelebrityBreederToken.breed (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1663-1755):
	External calls:
	- require(bool)(_owns(msg.sender,_mypersonid,_mypersongeneration)) (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1679-1686)
	State variables written after the call(s):
	- PersonsGen0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1731)
	- PersonsGen0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1737-1739)
	- PersonsGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1731)
	- PersonsGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1737-1739)
	- PersonsGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1739)
	- PersonsGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1743-1745)
	- PersonsGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1747-1752)
	- PersonsGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1753-1755)
	- ownershipTokenCountGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1737-1739)
	- personIndexToApprovedGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1737-1739)
	- personIndexToPriceGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1737-1739)
	- personIndexToSiringPrice0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1737-1739)
	- personIndexToSiringPrice1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1737-1739)
Reentrancy in CelebrityBreederToken.breedOnAuction (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1755-1883):
	External calls:
	- require(bool)(_owns(msg.sender,_mypersonid,_mypersongeneration)) (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1773-1775)
	- owneroffather = CelGen0.ownerOf(_withpersonid) (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1823-1825)
	State variables written after the call(s):
	- ownershipTokenCountGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1859-1865)
	- personIndexToApprovedGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1859-1865)
	- personIndexToPriceGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1859-1865)
	- personIndexToSiringPrice1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1859-1865)
Reentrancy in CelebrityBreederToken.masscreate (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1095-1117):
	External calls:
	- (name,surname,genes,None,None,None,None,None,gender) = CelBetta.getPerson(i,false) (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1105-1111)
	State variables written after the call(s):
	- ExternalAllowdContractGen0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1113-1115)
	- ExternalAllowdContractGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1113-1115)
	- PersonsGen0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1113-1115)
	- PersonsGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1113-1115)
	- ownershipTokenCountGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1113-1115)
	- personIndexToApprovedGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1113-1115)
	- personIndexToOwnerGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1113-1115)
	- personIndexToPriceGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1113-1115)
	- personIndexToSiringPrice0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1113-1115)
	- personIndexToSiringPrice1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1113-1115)
Reentrancy in CelebrityBreederToken.prepareToBreed (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1885-1945):
	External calls:
	- require(bool)(_owns(msg.sender,_mypersonid,_mypersongeneration)) (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1895)
	State variables written after the call(s):
	- PersonsGen0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1927-1929)
	- PersonsGen0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1933-1945)
	- PersonsGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1927-1929)
	- PersonsGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1933-1945)
	- personIndexToSiringPrice0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1901-1907)
	- personIndexToSiringPrice1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1917-1925)
Reentrancy in CelebrityBreederToken.setprice (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1425-1445):
	External calls:
	- require(bool)(_owns(msg.sender,_tokenId,true)) (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1427-1429)
	State variables written after the call(s):
	- personIndexToPriceGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1433-1434)
	- personIndexToPriceGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1435-1439)
Reentrancy in CelebrityBreederToken.transfer (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1557-1565):
	External calls:
	- require(bool)(_owns(msg.sender,_tokenId,true)) (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1559-1565)
	State variables written after the call(s):
	- ownershipTokenCountGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1565)
	- personIndexToApprovedGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1565)
	- personIndexToSiringPrice0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1565)
	- personIndexToSiringPrice1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1565)
Reentrancy in CelebrityBreederToken.transferFrom (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1567-1577):
	External calls:
	- require(bool)(_owns(_from,_tokenId,true)) (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1571-1573)
	State variables written after the call(s):
	- ownershipTokenCountGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1575-1577)
	- personIndexToApprovedGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1575-1577)
	- personIndexToSiringPrice0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1575-1577)
	- personIndexToSiringPrice1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1575-1577)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
CelebrityBreederToken.initialBeating should be constant (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#971)
CelebrityBreederToken.initialTraining should be constant (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#969)
CelebrityToken.firstStepLimit should be constant (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#103)
CelebrityToken.secondStepLimit should be constant (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#106-111)
CelebrityToken.startingPrice should be constant (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#99)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2115-2119:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Deprecated standard detected @ /sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2163-2165:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
CelebrityBreederToken.approve (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1179-1191) should be declared external
ERC721.approve (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#17-19) should be declared external
CelebrityToken.approve (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#247-265) should be declared external
CelebrityToken.implementsERC721 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#355-365) should be declared external
CelebrityBreederToken.implementsERC721 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1291-1293) should be declared external
ERC721.implementsERC721 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#21-23) should be declared external
CelebrityToken.ownerOf (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#387-397) should be declared external
ERC721.ownerOf (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#23-25) should be declared external
CelebrityBreederToken.ownerOf (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1305-1315) should be declared external
CelebrityToken.takeOwnership (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#551-569) should be declared external
CelebrityBreederToken.takeOwnership (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1467-1497) should be declared external
ERC721.takeOwnership (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#25-27) should be declared external
ERC721.transferFrom (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#29-31) should be declared external
CelebrityToken.transferFrom (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#691-703) should be declared external
CelebrityBreederToken.transferFrom (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1567-1577) should be declared external
CelebrityToken.transfer (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#657-663) should be declared external
CelebrityBreederToken.transfer (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1557-1565) should be declared external
ERC721.transfer (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#31-35) should be declared external
CelebrityToken.createPromoPerson (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#279-313) should be declared external
CelebrityToken.createContractPerson (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#319-323) should be declared external
CelebrityToken.getPerson (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#333-355) should be declared external
CelebrityToken.name (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#367-371) should be declared external
CelebrityToken.payout (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#399-401) should be declared external
CelebrityToken.purchase (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#405-491) should be declared external
CelebrityToken.priceOf (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#491-499) should be declared external
CelebrityToken.setCEO (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#507-515) should be declared external
CelebrityToken.setCOO (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#531-533) should be declared external
CelebrityToken.symbol (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#535-539) should be declared external
CelebrityToken.tokensOfOwner (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#585-629) should be declared external
CelebrityBreederToken.allowexternalContract (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1135-1179) should be declared external
CelebrityBreederToken.getPerson (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1207-1251) should be declared external
CelebrityBreederToken.getPersonParents (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1251-1287) should be declared external
CelebrityBreederToken.name (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1297-1303) should be declared external
CelebrityBreederToken.purchase (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1315-1397) should be declared external
CelebrityBreederToken.priceOf (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1397-1409) should be declared external
CelebrityBreederToken.setprice (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1425-1445) should be declared external
CelebrityBreederToken.symbol (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1455-1461) should be declared external
CelebrityBreederToken.tokensOfOwner (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1499-1541) should be declared external
CelebrityBreederToken.SetGene (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1625-1663) should be declared external
CelebrityBreederToken.breed (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1663-1755) should be declared external
CelebrityBreederToken.breedOnAuction (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1755-1883) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol:
	- pragma solidity^0.4.18 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_to' of CelebrityToken.approve (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#247-251) is not in mixedCase
Parameter '_tokenId' of CelebrityToken.approve (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#251) is not in mixedCase
Parameter '_owner' of CelebrityToken.balanceOf (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#275) is not in mixedCase
Parameter '_tokenId' of CelebrityToken.ownerOf (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#387) is not in mixedCase
Parameter '_tokenId' of CelebrityToken.takeOwnership (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#551-553) is not in mixedCase
Parameter '_from' of CelebrityToken.transferFrom (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#691-693) is not in mixedCase
Parameter '_to' of CelebrityToken.transferFrom (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#693) is not in mixedCase
Parameter '_tokenId' of CelebrityToken.transferFrom (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#693) is not in mixedCase
Parameter '_to' of CelebrityToken.transfer (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#657) is not in mixedCase
Parameter '_tokenId' of CelebrityToken.transfer (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#659) is not in mixedCase
Function 'CelebrityToken.CelebrityToken' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#225-227) is not in mixedCase
Parameter '_owner' of CelebrityToken.createPromoPerson (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#283) is not in mixedCase
Parameter '_name' of CelebrityToken.createPromoPerson (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#283-285) is not in mixedCase
Parameter '_price' of CelebrityToken.createPromoPerson (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#285) is not in mixedCase
Parameter '_name' of CelebrityToken.createContractPerson (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#319) is not in mixedCase
Parameter '_tokenId' of CelebrityToken.getPerson (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#333-335) is not in mixedCase
Parameter '_to' of CelebrityToken.payout (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#399) is not in mixedCase
Parameter '_tokenId' of CelebrityToken.purchase (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#409) is not in mixedCase
Parameter '_tokenId' of CelebrityToken.priceOf (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#491-493) is not in mixedCase
Parameter '_newCEO' of CelebrityToken.setCEO (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#509) is not in mixedCase
Parameter '_newCOO' of CelebrityToken.setCOO (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#531) is not in mixedCase
Parameter '_owner' of CelebrityToken.tokensOfOwner (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#587) is not in mixedCase
Function 'CelebrityToken._addressNotNull' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#713-716) is not in mixedCase
Parameter '_to' of CelebrityToken._addressNotNull (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#713) is not in mixedCase
Function 'CelebrityToken._approved' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#721-727) is not in mixedCase
Parameter '_to' of CelebrityToken._approved (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#725) is not in mixedCase
Parameter '_tokenId' of CelebrityToken._approved (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#725) is not in mixedCase
Function 'CelebrityToken._createPerson' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#729-771) is not in mixedCase
Parameter '_name' of CelebrityToken._createPerson (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#729) is not in mixedCase
Parameter '_owner' of CelebrityToken._createPerson (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#729-733) is not in mixedCase
Parameter '_price' of CelebrityToken._createPerson (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#733) is not in mixedCase
Function 'CelebrityToken._owns' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#779-783) is not in mixedCase
Parameter '_tokenId' of CelebrityToken._owns (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#779) is not in mixedCase
Function 'CelebrityToken._payout' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#783-793) is not in mixedCase
Parameter '_to' of CelebrityToken._payout (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#785) is not in mixedCase
Function 'CelebrityToken._transfer' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#797-849) is not in mixedCase
Parameter '_from' of CelebrityToken._transfer (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#799) is not in mixedCase
Parameter '_to' of CelebrityToken._transfer (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#799) is not in mixedCase
Parameter '_tokenId' of CelebrityToken._transfer (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#799) is not in mixedCase
Parameter '_to' of CelebrityBreederToken.approve (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1179) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken.approve (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1179) is not in mixedCase
Parameter '_owner' of CelebrityBreederToken.balanceOf (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1201) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken.ownerOf (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1305-1309) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken.takeOwnership (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1469) is not in mixedCase
Parameter '_from' of CelebrityBreederToken.transferFrom (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1571) is not in mixedCase
Parameter '_to' of CelebrityBreederToken.transferFrom (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1571) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken.transferFrom (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1571) is not in mixedCase
Parameter '_to' of CelebrityBreederToken.transfer (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1557-1559) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken.transfer (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1559) is not in mixedCase
Function 'CelebrityBreederToken.CelebrityBreederToken' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1117-1127) is not in mixedCase
Parameter '_to' of CelebrityBreederToken.allowexternalContract (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1135) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken.allowexternalContract (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1135-1137) is not in mixedCase
Parameter '_tokengeneration' of CelebrityBreederToken.allowexternalContract (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1137-1147) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken.getPerson (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1207-1209) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken.getPersonParents (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1257) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken.purchase (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1315-1317) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken.priceOf (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1399) is not in mixedCase
Parameter '_newCEO' of CelebrityBreederToken.setCEO (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1411) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken.setprice (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1425) is not in mixedCase
Parameter '_price' of CelebrityBreederToken.setprice (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1425-1427) is not in mixedCase
Parameter '_newDEV' of CelebrityBreederToken.setDEV (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1445-1447) is not in mixedCase
Parameter '_owner' of CelebrityBreederToken.tokensOfOwner (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1501) is not in mixedCase
Function 'CelebrityBreederToken._addressNotNull' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1577-1587) is not in mixedCase
Parameter '_to' of CelebrityBreederToken._addressNotNull (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1579) is not in mixedCase
Function 'CelebrityBreederToken._approvedGen1' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1591-1607) is not in mixedCase
Parameter '_to' of CelebrityBreederToken._approvedGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1595) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken._approvedGen1 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1595-1597) is not in mixedCase
Parameter '_name' of CelebrityBreederToken.createPersonGen0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1611) is not in mixedCase
Parameter '_surname' of CelebrityBreederToken.createPersonGen0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1611-1613) is not in mixedCase
Parameter '_genes' of CelebrityBreederToken.createPersonGen0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1613) is not in mixedCase
Parameter '_gender' of CelebrityBreederToken.createPersonGen0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1613) is not in mixedCase
Function 'CelebrityBreederToken.SetGene' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1625-1663) is not in mixedCase
Parameter '_mypersonid' of CelebrityBreederToken.breed (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1667-1669) is not in mixedCase
Parameter '_mypersongeneration' of CelebrityBreederToken.breed (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1669) is not in mixedCase
Parameter '_withpersonid' of CelebrityBreederToken.breed (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1669-1673) is not in mixedCase
Parameter '_withpersongeneration' of CelebrityBreederToken.breed (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1673-1679) is not in mixedCase
Parameter '_boyname' of CelebrityBreederToken.breed (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1679) is not in mixedCase
Parameter '_girlname' of CelebrityBreederToken.breed (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1679) is not in mixedCase
Parameter '_mypersonid' of CelebrityBreederToken.breedOnAuction (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1757-1761) is not in mixedCase
Parameter '_mypersongeneration' of CelebrityBreederToken.breedOnAuction (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1761) is not in mixedCase
Parameter '_withpersonid' of CelebrityBreederToken.breedOnAuction (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1761-1763) is not in mixedCase
Parameter '_withpersongeneration' of CelebrityBreederToken.breedOnAuction (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1763-1765) is not in mixedCase
Parameter '_boyname' of CelebrityBreederToken.breedOnAuction (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1766-1767) is not in mixedCase
Parameter '_girlname' of CelebrityBreederToken.breedOnAuction (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1767-1769) is not in mixedCase
Parameter '_mypersonid' of CelebrityBreederToken.prepareToBreed (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1891) is not in mixedCase
Parameter '_mypersongeneration' of CelebrityBreederToken.prepareToBreed (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1891) is not in mixedCase
Parameter '_withpersonid' of CelebrityBreederToken.prepareToBreed (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1891) is not in mixedCase
Parameter '_withpersongeneration' of CelebrityBreederToken.prepareToBreed (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1891) is not in mixedCase
Parameter '_siringprice' of CelebrityBreederToken.prepareToBreed (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1891) is not in mixedCase
Parameter '_mypersonid' of CelebrityBreederToken.readyTobreed (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1945-1947) is not in mixedCase
Parameter '_mypersongeneration' of CelebrityBreederToken.readyTobreed (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1947) is not in mixedCase
Parameter '_withpersonid' of CelebrityBreederToken.readyTobreed (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1947-1949) is not in mixedCase
Parameter '_withpersongeneration' of CelebrityBreederToken.readyTobreed (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1949-1951) is not in mixedCase
Function 'CelebrityBreederToken._birthPerson' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1999-2081) is not in mixedCase
Parameter '_name' of CelebrityBreederToken._birthPerson (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1999-2000) is not in mixedCase
Parameter '_surname' of CelebrityBreederToken._birthPerson (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2001-2005) is not in mixedCase
Parameter '_genes' of CelebrityBreederToken._birthPerson (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2006-2009) is not in mixedCase
Parameter '_gender' of CelebrityBreederToken._birthPerson (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2009) is not in mixedCase
Parameter '_generation' of CelebrityBreederToken._birthPerson (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2009) is not in mixedCase
Function 'CelebrityBreederToken._generateGene' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2081-2169) is not in mixedCase
Parameter '_genes1' of CelebrityBreederToken._generateGene (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2083-2085) is not in mixedCase
Parameter '_genes2' of CelebrityBreederToken._generateGene (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2085) is not in mixedCase
Parameter '_mypersonid' of CelebrityBreederToken._generateGene (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2085-2087) is not in mixedCase
Parameter '_withpersonid' of CelebrityBreederToken._generateGene (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2087) is not in mixedCase
Function 'CelebrityBreederToken._owns' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2169-2193) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken._owns (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2169-2171) is not in mixedCase
Parameter '_tokengeneration' of CelebrityBreederToken._owns (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2171) is not in mixedCase
Function 'CelebrityBreederToken._payout' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2193-2201) is not in mixedCase
Function 'CelebrityBreederToken._transfer' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2205-2241) is not in mixedCase
Parameter '_from' of CelebrityBreederToken._transfer (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2205) is not in mixedCase
Parameter '_to' of CelebrityBreederToken._transfer (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2205-2207) is not in mixedCase
Parameter '_tokenId' of CelebrityBreederToken._transfer (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2207-2209) is not in mixedCase
Parameter '_personid' of CelebrityBreederToken.blankbreedingdata (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2243) is not in mixedCase
Parameter '_persongeneration' of CelebrityBreederToken.blankbreedingdata (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#2243) is not in mixedCase
Variable 'CelebrityBreederToken.CelGen0' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#951-955) is not in mixedCase
Variable 'CelebrityBreederToken.CelBetta' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#957-963) is not in mixedCase
Constant 'CelebrityBreederToken.CreationLimitGen0' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#971-973) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'CelebrityBreederToken.CreationLimitGen1' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#973-975) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'CelebrityBreederToken.MaxValue' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#975-977) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'CelebrityBreederToken.ExternalAllowdContractGen0' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#999-1003) is not in mixedCase
Variable 'CelebrityBreederToken.ExternalAllowdContractGen1' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1003-1009) is not in mixedCase
Variable 'CelebrityBreederToken.CeoAddress' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1023-1025) is not in mixedCase
Variable 'CelebrityBreederToken.DevAddress' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1025-1027) is not in mixedCase
Variable 'CelebrityBreederToken.PersonsGen0' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1061-1063) is not in mixedCase
Variable 'CelebrityBreederToken.PersonsGen1' (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#1065-1071) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
CelebrityToken (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#57-849) does not mark important ERC20 parameters as 'indexed':
	-Transfer (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#81-89) does not index parameter 'from'
	-Transfer (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#81-89) does not index parameter 'to'
CelebrityBreederToken (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#921-2379) does not mark important ERC20 parameters as 'indexed':
	-Transfer (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#933-937) does not index parameter 'from'
	-Transfer (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#933-937) does not index parameter 'to'
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unindexed-erc20-event-parameters[0m
INFO:Detectors:[92m
CelebrityBreederToken.CreationLimitGen0 (/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol#971-973) is never used in CelebrityBreederToken
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/sb/0xa33ab4b0c9905ebc4e0df5eb2f915bee728b8253.sol analyzed (4 contracts), 197 result(s) found
