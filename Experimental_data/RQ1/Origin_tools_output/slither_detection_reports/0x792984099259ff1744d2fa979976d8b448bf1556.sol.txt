INFO:Slither:Compilation warnings/errors on /sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:913:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        tierConfigs [keccak256(SaleState.Initial)] = TierConfig({
                     ^--------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:913:22: Warning: The provided argument of type enum TieredCrowdsale.SaleState is not implicitly convertible to expected type bytes memory.
        tierConfigs [keccak256(SaleState.Initial)] = TierConfig({
                     ^--------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:918:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        tierConfigs [keccak256(SaleState.PrivateSale)] = TierConfig({
                     ^------------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:918:22: Warning: The provided argument of type enum TieredCrowdsale.SaleState is not implicitly convertible to expected type bytes memory.
        tierConfigs [keccak256(SaleState.PrivateSale)] = TierConfig({
                     ^------------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:923:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        tierConfigs [keccak256(SaleState.FinalisedPrivateSale)] = TierConfig({
                     ^---------------------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:923:22: Warning: The provided argument of type enum TieredCrowdsale.SaleState is not implicitly convertible to expected type bytes memory.
        tierConfigs [keccak256(SaleState.FinalisedPrivateSale)] = TierConfig({
                     ^---------------------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:928:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        tierConfigs [keccak256(SaleState.PreSale)] = TierConfig({
                     ^--------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:928:22: Warning: The provided argument of type enum TieredCrowdsale.SaleState is not implicitly convertible to expected type bytes memory.
        tierConfigs [keccak256(SaleState.PreSale)] = TierConfig({
                     ^--------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:933:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        tierConfigs [keccak256(SaleState.FinalisedPreSale)] = TierConfig({
                     ^-----------------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:933:22: Warning: The provided argument of type enum TieredCrowdsale.SaleState is not implicitly convertible to expected type bytes memory.
        tierConfigs [keccak256(SaleState.FinalisedPreSale)] = TierConfig({
                     ^-----------------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:938:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        tierConfigs [keccak256(SaleState.PublicSaleTier1)] = TierConfig({
                     ^----------------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:938:22: Warning: The provided argument of type enum TieredCrowdsale.SaleState is not implicitly convertible to expected type bytes memory.
        tierConfigs [keccak256(SaleState.PublicSaleTier1)] = TierConfig({
                     ^----------------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:943:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        tierConfigs [keccak256(SaleState.PublicSaleTier2)] = TierConfig({
                     ^----------------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:943:22: Warning: The provided argument of type enum TieredCrowdsale.SaleState is not implicitly convertible to expected type bytes memory.
        tierConfigs [keccak256(SaleState.PublicSaleTier2)] = TierConfig({
                     ^----------------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:948:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        tierConfigs [keccak256(SaleState.PublicSaleTier3)] = TierConfig({
                     ^----------------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:948:22: Warning: The provided argument of type enum TieredCrowdsale.SaleState is not implicitly convertible to expected type bytes memory.
        tierConfigs [keccak256(SaleState.PublicSaleTier3)] = TierConfig({
                     ^----------------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:953:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        tierConfigs [keccak256(SaleState.PublicSaleTier4)] = TierConfig({
                     ^----------------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:953:22: Warning: The provided argument of type enum TieredCrowdsale.SaleState is not implicitly convertible to expected type bytes memory.
        tierConfigs [keccak256(SaleState.PublicSaleTier4)] = TierConfig({
                     ^----------------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:958:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        tierConfigs [keccak256(SaleState.FinalisedPublicSale)] = TierConfig({
                     ^--------------------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:958:22: Warning: The provided argument of type enum TieredCrowdsale.SaleState is not implicitly convertible to expected type bytes memory.
        tierConfigs [keccak256(SaleState.FinalisedPublicSale)] = TierConfig({
                     ^--------------------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:963:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        tierConfigs [keccak256(SaleState.Closed)] = TierConfig({
                     ^-------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:963:22: Warning: The provided argument of type enum TieredCrowdsale.SaleState is not implicitly convertible to expected type bytes memory.
        tierConfigs [keccak256(SaleState.Closed)] = TierConfig({
                     ^-------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:977:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return tierConfigs[keccak256(state)].tierRatePercentage;
                           ^--------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:977:28: Warning: The provided argument of type enum TieredCrowdsale.SaleState is not implicitly convertible to expected type bytes memory.
        return tierConfigs[keccak256(state)].tierRatePercentage;
                           ^--------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:985:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return tierConfigs[keccak256(state)].hardCap;
                           ^--------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:985:28: Warning: The provided argument of type enum TieredCrowdsale.SaleState is not implicitly convertible to expected type bytes memory.
        return tierConfigs[keccak256(state)].hardCap;
                           ^--------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:1003:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return tierConfigs[keccak256(state)].stateName;
                           ^--------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:1003:28: Warning: The provided argument of type enum TieredCrowdsale.SaleState is not implicitly convertible to expected type bytes memory.
        return tierConfigs[keccak256(state)].stateName;
                           ^--------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:1113:48: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint256 public constant companyTokens    = SafeMath.mul(150000000, (10 ** decimals));
                                               ^---------------------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:1114:48: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint256 public constant teamTokens       = SafeMath.mul(150000000, (10 ** decimals));
                                               ^---------------------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:1115:48: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint256 public constant projectTokens    = SafeMath.mul(150000000, (10 ** decimals));
                                               ^---------------------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:1116:48: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint256 public constant advisorTokens    = SafeMath.mul(100000000, (10 ** decimals));
                                               ^---------------------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:1117:48: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint256 public constant bountyTokens     = SafeMath.mul(30000000, (10 ** decimals));
                                               ^--------------------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:1118:48: Warning: Initial value for constant variable has to be compile-time constant. This will fail to compile with the next breaking version change.
    uint256 public constant airdropTokens    = SafeMath.mul(20000000, (10 ** decimals));
                                               ^--------------------------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:649:5: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    address _beneficiary,
    ^------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:650:5: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    uint256 _weiAmount
    ^----------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:691:5: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    address _beneficiary,
    ^------------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:692:5: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    uint256 _weiAmount
    ^----------------^
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:633:3: Warning: Function state mutability can be restricted to pure
  function _preValidatePurchase(
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:648:3: Warning: Function state mutability can be restricted to pure
  function _postValidatePurchase(
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:690:3: Warning: Function state mutability can be restricted to pure
  function _updatePurchasingState(
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol:1043:5: Warning: Function state mutability can be restricted to pure
    function crowdsaleClosed() internal {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Reentrancy in LittlePhilCrowdsale.mintForPrivateFiat (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol):
	External calls:
	- _processPurchase(_beneficiary,tokens) (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol)
	State variables written after the call(s):
	- state (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol)
	- tokenCap (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol)
	- tokensRaised (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol)
Reentrancy in TokenVesting.release (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1276-1282):
	External calls:
	- unreleased = releasableAmount(token) (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1276-1277)
	State variables written after the call(s):
	- released (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1278)
Reentrancy in TokenVesting.revoke (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1292-1303):
	External calls:
	- balance = token.balanceOf(this) (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1297-1298)
	- unreleased = releasableAmount(token) (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1298-1299)
	State variables written after the call(s):
	- revoked (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1301)
Reentrancy in InitialSupplyCrowdsale.setupInitialSupply (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1187-1205):
	External calls:
	- LittlePhilCoin(token).mint(companyWallet,companyTokens) (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1198-1199)
	- LittlePhilCoin(token).mint(projectWallet,projectTokens) (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1199-1200)
	- LittlePhilCoin(token).mint(advisorWallet,advisorTokens) (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1200-1201)
	- LittlePhilCoin(token).mint(bountyWallet,bountyTokens) (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1201-1202)
	- LittlePhilCoin(token).mint(airdropWallet,airdropTokens) (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1202-1203)
	- LittlePhilCoin(token).mint(address(teamTimeLock1),teamTokensSplit) (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1203-1204)
	- LittlePhilCoin(token).mint(address(teamTimeLock2),teamTokensSplit) (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1204-1205)
	State variables written after the call(s):
	- isInitialised (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1205)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
InitialSupplyCrowdsale.setupInitialSupply (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1187-1205) does not use the value returned by external calls:
	-LittlePhilCoin(token).mint(companyWallet,companyTokens) (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1198-1199)
	-LittlePhilCoin(token).mint(projectWallet,projectTokens) (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1199-1200)
	-LittlePhilCoin(token).mint(advisorWallet,advisorTokens) (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1200-1201)
	-LittlePhilCoin(token).mint(bountyWallet,bountyTokens) (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1201-1202)
	-LittlePhilCoin(token).mint(airdropWallet,airdropTokens) (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1202-1203)
	-LittlePhilCoin(token).mint(address(teamTimeLock1),teamTokensSplit) (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1203-1204)
	-LittlePhilCoin(token).mint(address(teamTimeLock2),teamTokensSplit) (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1204-1205)
TokenVestingCrowdsale.addBeneficiaryVestor (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1341-1356) does not use the value returned by external calls:
	-LittlePhilCoin(token).mint(address(newVault),tokenAmount) (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1355-1356)
LittlePhilCrowdsale.crowdsaleClosed (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1446-1455) does not use the value returned by external calls:
	-LittlePhilCoin(token).finishMinting() (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1454-1455)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
TokenTimelock.constructor (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1110-1115) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(_releaseTime > block.timestamp) (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1114)
TokenTimelock.release (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1116-1122) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(block.timestamp >= releaseTime) (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1117-1118)
TokenVesting.vestedAmount (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1324-1340) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp < cliff (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1331-1340)
	- block.timestamp >= start.add(duration) || revoked[token] (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1333-1340)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
LittlePhilCoin.decimals should be constant (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#530)
LittlePhilCoin.name should be constant (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#529-530)
LittlePhilCoin.symbol should be constant (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#530)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
ERC20Basic.totalSupply (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#62) should be declared external
BasicToken.totalSupply (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#180-183) should be declared external
ERC20Basic.balanceOf (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#62-63) should be declared external
BasicToken.balanceOf (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#209-211) should be declared external
Ownable.renounceOwnership (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#141-142) should be declared external
Ownable.transferOwnership (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#149-152) should be declared external
ERC20.allowance (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#216-218) should be declared external
StandardToken.allowance (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#296-299) should be declared external
MintableToken.mint (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#391-405) should be declared external
MintableToken.finishMinting (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#413-421) should be declared external
Pausable.unpause (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#465-472) should be declared external
CappedCrowdsale.capReached (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#798-799) should be declared external
TieredCrowdsale.setState (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1021-1028) should be declared external
TokenTimelock.release (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1116-1122) should be declared external
TokenVesting.release (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1276-1282) should be declared external
TokenVesting.revoke (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1292-1303) should be declared external
WhitelistedCrowdsale.addToWhitelist (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1381-1386) should be declared external
WhitelistedCrowdsale.addManyToWhitelist (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1386-1390) should be declared external
WhitelistedCrowdsale.removeFromWhitelist (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1391-1397) should be declared external
LittlePhilCrowdsale.setRate (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol) should be declared external
LittlePhilCrowdsale.mintForPrivateFiat (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Parameter '_newOwner' of Ownable.transferOwnership (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#150) is not in mixedCase
Function 'Ownable._transferOwnership' (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#155-165) is not in mixedCase
Parameter '_newOwner' of Ownable._transferOwnership (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#160-161) is not in mixedCase
Parameter '_owner' of BasicToken.balanceOf (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#209-210) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#187-188) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#188) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#296-297) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#297) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#255) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#255-256) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#256) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#279) is not in mixedCase
Parameter '_value' of StandardToken.approve (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#279) is not in mixedCase
Parameter '_spender' of StandardToken.increaseApproval (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#317) is not in mixedCase
Parameter '_addedValue' of StandardToken.increaseApproval (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#317) is not in mixedCase
Parameter '_spender' of StandardToken.decreaseApproval (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#338) is not in mixedCase
Parameter '_subtractedValue' of StandardToken.decreaseApproval (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#338) is not in mixedCase
Parameter '_to' of MintableToken.mint (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#391) is not in mixedCase
Parameter '_amount' of MintableToken.mint (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#391-393) is not in mixedCase
Parameter '_to' of PausableToken.transfer (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#484) is not in mixedCase
Parameter '_value' of PausableToken.transfer (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#484) is not in mixedCase
Parameter '_from' of PausableToken.transferFrom (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#494-495) is not in mixedCase
Parameter '_to' of PausableToken.transferFrom (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#495) is not in mixedCase
Parameter '_value' of PausableToken.transferFrom (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#495) is not in mixedCase
Parameter '_spender' of PausableToken.approve (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#504-506) is not in mixedCase
Parameter '_value' of PausableToken.approve (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#506) is not in mixedCase
Parameter '_spender' of PausableToken.increaseApproval (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#513) is not in mixedCase
Parameter '_addedValue' of PausableToken.increaseApproval (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#513-514) is not in mixedCase
Parameter '_spender' of PausableToken.decreaseApproval (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#526) is not in mixedCase
Parameter '_subtractedValue' of PausableToken.decreaseApproval (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#526) is not in mixedCase
Parameter '_rate' of Crowdsale. (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#597) is not in mixedCase
Parameter '_wallet' of Crowdsale. (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#597-598) is not in mixedCase
Parameter '_token' of Crowdsale. (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#599) is not in mixedCase
Parameter '_beneficiary' of Crowdsale.buyTokens (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#624-625) is not in mixedCase
Function 'Crowdsale._preValidatePurchase' (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#658-660) is not in mixedCase
Parameter '_beneficiary' of Crowdsale._preValidatePurchase (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#658) is not in mixedCase
Parameter '_weiAmount' of Crowdsale._preValidatePurchase (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#658) is not in mixedCase
Function 'Crowdsale._postValidatePurchase' (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#672-675) is not in mixedCase
Function 'Crowdsale._deliverTokens' (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#686-690) is not in mixedCase
Parameter '_beneficiary' of Crowdsale._deliverTokens (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#687) is not in mixedCase
Parameter '_tokenAmount' of Crowdsale._deliverTokens (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#687-688) is not in mixedCase
Function 'Crowdsale._processPurchase' (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#701-705) is not in mixedCase
Parameter '_beneficiary' of Crowdsale._processPurchase (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#702) is not in mixedCase
Parameter '_tokenAmount' of Crowdsale._processPurchase (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#702) is not in mixedCase
Function 'Crowdsale._updatePurchasingState' (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#721-722) is not in mixedCase
Function 'Crowdsale._getTokenAmount' (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#732-737) is not in mixedCase
Parameter '_weiAmount' of Crowdsale._getTokenAmount (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#732-733) is not in mixedCase
Function 'Crowdsale._forwardFunds' (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#744-747) is not in mixedCase
Function 'MintedCrowdsale._deliverTokens' (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#764-771) is not in mixedCase
Parameter '_beneficiary' of MintedCrowdsale._deliverTokens (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#765-769) is not in mixedCase
Parameter '_tokenAmount' of MintedCrowdsale._deliverTokens (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#769) is not in mixedCase
Function 'CappedCrowdsale._preValidatePurchase' (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#805-812) is not in mixedCase
Parameter '_beneficiary' of CappedCrowdsale._preValidatePurchase (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#806) is not in mixedCase
Parameter '_weiAmount' of CappedCrowdsale._preValidatePurchase (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#806-809) is not in mixedCase
Parameter '_cap' of CappedCrowdsale. (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#790) is not in mixedCase
Function 'TokenCappedCrowdsale._updatePurchasingState' (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#837-843) is not in mixedCase
Parameter '_beneficiary' of TokenCappedCrowdsale._updatePurchasingState (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#838) is not in mixedCase
Parameter '_weiAmount' of TokenCappedCrowdsale._updatePurchasingState (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#838) is not in mixedCase
Function 'TieredCrowdsale._preValidatePurchase' (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#889-899) is not in mixedCase
Parameter '_beneficiary' of TieredCrowdsale._preValidatePurchase (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#889) is not in mixedCase
Parameter '_weiAmount' of TieredCrowdsale._preValidatePurchase (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#890) is not in mixedCase
Function 'TieredCrowdsale._updatePurchasingState' (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1034-1083) is not in mixedCase
Parameter '_beneficiary' of TieredCrowdsale._updatePurchasingState (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1035-1036) is not in mixedCase
Parameter '_weiAmount' of TieredCrowdsale._updatePurchasingState (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1036-1040) is not in mixedCase
Function 'TieredCrowdsale._getTokenAmount' (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#918-930) is not in mixedCase
Parameter '_weiAmount' of TieredCrowdsale._getTokenAmount (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#918) is not in mixedCase
Parameter '_state' of TieredCrowdsale.setState (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1022) is not in mixedCase
Parameter '_token' of TokenTimelock. (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1110-1112) is not in mixedCase
Parameter '_beneficiary' of TokenTimelock. (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1112-1113) is not in mixedCase
Parameter '_releaseTime' of TokenTimelock. (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1113) is not in mixedCase
Parameter '_wallets' of InitialSupplyCrowdsale. (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1153) is not in mixedCase
Constant 'InitialSupplyCrowdsale.companyTokens' (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1136-1137) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'InitialSupplyCrowdsale.teamTokens' (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1139-1141) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'InitialSupplyCrowdsale.projectTokens' (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1141-1143) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'InitialSupplyCrowdsale.advisorTokens' (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1144-1147) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'InitialSupplyCrowdsale.bountyTokens' (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1147-1148) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'InitialSupplyCrowdsale.airdropTokens' (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1148-1149) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter '_beneficiary' of TokenVesting. (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1257-1259) is not in mixedCase
Parameter '_start' of TokenVesting. (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1259) is not in mixedCase
Parameter '_cliff' of TokenVesting. (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1261) is not in mixedCase
Parameter '_duration' of TokenVesting. (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1262-1265) is not in mixedCase
Parameter '_revocable' of TokenVesting. (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1265) is not in mixedCase
Function 'WhitelistedCrowdsale._preValidatePurchase' (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1397-1400) is not in mixedCase
Parameter '_beneficiary' of WhitelistedCrowdsale._preValidatePurchase (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1397-1398) is not in mixedCase
Parameter '_weiAmount' of WhitelistedCrowdsale._preValidatePurchase (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1398) is not in mixedCase
Parameter '_whitelister' of WhitelistedCrowdsale. (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1369) is not in mixedCase
Parameter '_beneficiary' of WhitelistedCrowdsale.addToWhitelist (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1381-1382) is not in mixedCase
Parameter '_beneficiaries' of WhitelistedCrowdsale.addManyToWhitelist (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1386-1387) is not in mixedCase
Parameter '_beneficiary' of WhitelistedCrowdsale.removeFromWhitelist (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1394-1395) is not in mixedCase
Function 'LittlePhilCrowdsale._preValidatePurchase' (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol) is not in mixedCase
Parameter '_beneficiary' of LittlePhilCrowdsale._preValidatePurchase (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol) is not in mixedCase
Parameter '_weiAmount' of LittlePhilCrowdsale._preValidatePurchase (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol) is not in mixedCase
Parameter '_newOwner' of LittlePhilCrowdsale.transferTokenOwnership (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol#1435) is not in mixedCase
Parameter '_rate' of LittlePhilCrowdsale.setRate (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol) is not in mixedCase
Parameter '_beneficiary' of LittlePhilCrowdsale.mintForPrivateFiat (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol) is not in mixedCase
Parameter '_weiAmount' of LittlePhilCrowdsale.mintForPrivateFiat (/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0x792984099259ff1744d2fa979976d8b448bf1556.sol analyzed (22 contracts), 128 result(s) found
