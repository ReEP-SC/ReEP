INFO:Slither:Compilation warnings/errors on /sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:134:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function MarketPlace(address admin_, address feeAccount_, uint feeTake_, uint freeUntilDate_, address predecessor_) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:193:5: Warning: Invoking events without "emit" prefix is deprecated.
    Deposit(0, msg.sender, msg.value, tokens[0][msg.sender]);
    ^------------------------------------------------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:206:5: Warning: Invoking events without "emit" prefix is deprecated.
    Withdraw(0, msg.sender, amount, tokens[0][msg.sender]);
    ^----------------------------------------------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:224:5: Warning: Invoking events without "emit" prefix is deprecated.
    Deposit(token, msg.sender, amount, tokens[token][msg.sender]);
    ^-----------------------------------------------------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:259:5: Warning: Invoking events without "emit" prefix is deprecated.
    Withdraw(token, msg.sender, amount, tokens[token][msg.sender]);
    ^------------------------------------------------------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:288:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^----------------------------------------------------------------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:290:5: Warning: Invoking events without "emit" prefix is deprecated.
    Order(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, msg.sender);
    ^---------------------------------------------------------------------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:314:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^----------------------------------------------------------------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:316:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      (orders[user][hash] || ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) == user) &&
                                       ^-------------------------------------------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:322:5: Warning: Invoking events without "emit" prefix is deprecated.
    Trade(tokenGet, amount, tokenGive, amountGive.mul(amount) / amountGet, user, msg.sender);
    ^--------------------------------------------------------------------------------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:399:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^----------------------------------------------------------------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:401:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      (orders[user][hash] || ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) == user) &&
                                       ^-------------------------------------------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:432:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^----------------------------------------------------------------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:454:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^----------------------------------------------------------------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:455:53: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    require ((orders[msg.sender][hash] || ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) == msg.sender));
                                                    ^-------------------------------------------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:457:5: Warning: Invoking events without "emit" prefix is deprecated.
    Cancel(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, msg.sender, v, r, s);
    ^-------------------------------------------------------------------------------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:498:5: Warning: Invoking events without "emit" prefix is deprecated.
    FundsMigrated(msg.sender, newContract);
    ^------------------------------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:11:51: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function totalSupply() public constant returns (uint256 supply) {}
                                                  ^------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:15:22: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function balanceOf(address _owner) public constant returns (uint256 balance) {}
                     ^------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:15:63: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function balanceOf(address _owner) public constant returns (uint256 balance) {}
                                                              ^-------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:21:21: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transfer(address _to, uint256 _value) public returns (bool success) {}
                    ^---------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:21:34: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transfer(address _to, uint256 _value) public returns (bool success) {}
                                 ^------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:21:66: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transfer(address _to, uint256 _value) public returns (bool success) {}
                                                                 ^----------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:28:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {}
                        ^-----------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:28:40: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {}
                                       ^---------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:28:53: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {}
                                                    ^------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:28:85: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {}
                                                                                    ^----------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:34:20: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function approve(address _spender, uint256 _value) public returns (bool success) {}
                   ^--------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:34:38: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function approve(address _spender, uint256 _value) public returns (bool success) {}
                                     ^------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:34:70: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function approve(address _spender, uint256 _value) public returns (bool success) {}
                                                                     ^----------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:39:22: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {}
                     ^------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:39:38: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {}
                                     ^--------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:39:81: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {}
                                                                                ^---------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:235:27: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function tokenFallback( address sender, uint amount, bytes data) public returns (bool ok) {
                          ^------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:235:43: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function tokenFallback( address sender, uint amount, bytes data) public returns (bool ok) {
                                          ^---------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:235:56: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function tokenFallback( address sender, uint amount, bytes data) public returns (bool ok) {
                                                       ^--------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:431:135: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
 ... uint8 v ... 
     ^-----^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:431:144: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
 ... bytes32 r ... 
     ^-------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:431:155: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
 ... bytes32 s ... 
     ^-------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:11:3: Warning: Function state mutability can be restricted to pure
  function totalSupply() public constant returns (uint256 supply) {}
  ^----------------------------------------------------------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:15:3: Warning: Function state mutability can be restricted to pure
  function balanceOf(address _owner) public constant returns (uint256 balance) {}
  ^-----------------------------------------------------------------------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:21:3: Warning: Function state mutability can be restricted to pure
  function transfer(address _to, uint256 _value) public returns (bool success) {}
  ^-----------------------------------------------------------------------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:28:3: Warning: Function state mutability can be restricted to pure
  function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {}
  ^------------------------------------------------------------------------------------------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:34:3: Warning: Function state mutability can be restricted to pure
  function approve(address _spender, uint256 _value) public returns (bool success) {}
  ^---------------------------------------------------------------------------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:39:3: Warning: Function state mutability can be restricted to pure
  function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {}
  ^-------------------------------------------------------------------------------------------------^
/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:235:3: Warning: Function state mutability can be restricted to view
  function tokenFallback( address sender, uint amount, bytes data) public returns (bool ok) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in MarketPlace.migrateFunds (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#486-513):
	External calls:
	- newExchange.depositForUser.value(etherAmount)(msg.sender) (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#494-498)
	- require(bool)(IToken(token).approve(newExchange,tokenAmount)) (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#506-507)
	External calls sending eth:
	- newExchange.depositForUser.value(etherAmount)(msg.sender) (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#494-498)
	State variables written after the call(s):
	- tokens (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#508-509)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[92m
MarketPlace.migrateFunds has external calls inside a loop:
	- require(bool)(IToken(token).approve(newExchange,tokenAmount)) (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#506-507)
MarketPlace.migrateFunds has external calls inside a loop:
	- newExchange.depositTokenForUser(token,tokenAmount,msg.sender) (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#509-513)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in MarketPlace.depositToken (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#223-230):
	External calls:
	- require(bool)(IToken(token).transferFrom(msg.sender,this,amount)) (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#224-228)
	State variables written after the call(s):
	- depositingTokenFlag (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#228-229)
	- tokens (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#229)
Reentrancy in MarketPlace.depositTokenForUser (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol):
	External calls:
	- require(bool)(IToken(token).transferFrom(msg.sender,this,amount)) (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol)
	State variables written after the call(s):
	- depositingTokenFlag (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol)
	- tokens (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
IToken.decimals should be constant (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#45-48)
IToken.name should be constant (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#48-51)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
IToken.totalSupply (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#11-13) should be declared external
IToken.balanceOf (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#15-17) should be declared external
IToken.transfer (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#21-23) should be declared external
IToken.transferFrom (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#28-30) should be declared external
IToken.approve (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#34-36) should be declared external
IToken.allowance (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#39-41) should be declared external
MarketPlace.fallback (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#155-156) should be declared external
MarketPlace.changeAdmin (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#160-162) should be declared external
MarketPlace.changeFeeAccount (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#165-167) should be declared external
MarketPlace.changeFeeTake (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#171-173) should be declared external
MarketPlace.changeFreeUntilDate (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#177-179) should be declared external
MarketPlace.setSuccessor (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#182-184) should be declared external
MarketPlace.deposit (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#197-200) should be declared external
MarketPlace.withdraw (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#206-213) should be declared external
MarketPlace.depositToken (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#223-230) should be declared external
MarketPlace.tokenFallback (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#238-251) should be declared external
MarketPlace.withdrawToken (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#258-266) should be declared external
MarketPlace.balanceOf (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#274-279) should be declared external
MarketPlace.order (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#290-298) should be declared external
MarketPlace.trade (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#316-331) should be declared external
MarketPlace.testTrade (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#375-389) should be declared external
MarketPlace.amountFilled (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#438-444) should be declared external
MarketPlace.cancelOrder (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#457-470) should be declared external
MarketPlace.migrateFunds (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#486-513) should be declared external
MarketPlace.depositForUser (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#517-519) should be declared external
MarketPlace.depositTokenForUser (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol:
	- pragma solidity^0.4.19 (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'MarketPlace.MarketPlace' (/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol#135-154) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0x2f13fa06c0efd2a5c4cf2175a0467084672e648b.sol analyzed (3 contracts), 34 result(s) found
