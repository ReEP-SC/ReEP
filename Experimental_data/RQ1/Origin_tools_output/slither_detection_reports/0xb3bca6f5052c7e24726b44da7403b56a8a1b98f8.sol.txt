INFO:Slither:Compilation warnings/errors on /sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol:
/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol:39:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol:101:5: Warning: Invoking events without "emit" prefix is deprecated.
    Pause();
    ^-----^
/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol:109:5: Warning: Invoking events without "emit" prefix is deprecated.
    Unpause();
    ^-------^
/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol:243:9: Warning: Invoking events without "emit" prefix is deprecated.
        ChangedPublicationFee(publicationFeeInWei);
        ^----------------------------------------^
/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol:256:9: Warning: Invoking events without "emit" prefix is deprecated.
        ChangedOwnerCut(ownerCutPercentage);
        ^---------------------------------^
/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol:296:9: Warning: Invoking events without "emit" prefix is deprecated.
        AuctionCreated(
        ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol:317:9: Warning: Invoking events without "emit" prefix is deprecated.
        AuctionCancelled(auctionId, assetId, auctionSeller);
        ^-------------------------------------------------^
/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol:367:9: Warning: Invoking events without "emit" prefix is deprecated.
        AuctionSuccessful(auctionId, assetId, seller, price, msg.sender);
        ^--------------------------------------------------------------^

INFO:Detectors:[93m
Marketplace.cancelOrder (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#315-328) uses a dangerous strict equality:
	- require(bool)(auctionByAssetId[assetId].seller == msg.sender || msg.sender == owner)
Marketplace.cancelOrder (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#315-328) uses a dangerous strict equality:
	- require(bool)(auctionByAssetId[assetId].seller == msg.sender || msg.sender == owner)
Marketplace.executeOrder (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#330-369) uses a dangerous strict equality:
	- require(bool)(auctionByAssetId[assetId].price == price)
	- require(bool)(seller == nonFungibleRegistry.ownerOf(assetId))
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Marketplace.executeOrder (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#330-369):
	External calls:
	- require(bool)(seller == nonFungibleRegistry.ownerOf(assetId)) (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#342-344)
	- acceptedToken.transferFrom(msg.sender,owner,saleShareAmount) (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#356-364)
	- acceptedToken.transferFrom(msg.sender,seller,price.sub(saleShareAmount)) (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#365-369)
	- nonFungibleRegistry.safeTransferFrom(seller,msg.sender,assetId) (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol)
	State variables written after the call(s):
	- auctionByAssetId (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
Marketplace.executeOrder (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#330-369) does not use the value returned by external calls:
	-acceptedToken.transferFrom(msg.sender,owner,saleShareAmount) (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#356-364)
	-acceptedToken.transferFrom(msg.sender,seller,price.sub(saleShareAmount)) (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#365-369)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in Marketplace.createOrder (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#268-311):
	External calls:
	- assetOwner = nonFungibleRegistry.ownerOf(assetId) (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#272-273)
	- require(bool)(nonFungibleRegistry.isAuthorized(address(this),assetId)) (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#276-279)
	State variables written after the call(s):
	- auctionByAssetId (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#287-292)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Marketplace.cancelOrder (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#315-328) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(auctionByAssetId[assetId].seller == msg.sender || msg.sender == owner) (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#318-322)
Marketplace.executeOrder (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#330-369) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(auctionByAssetId[assetId].price == price) (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#339-341)
	- require(bool)(now < auctionByAssetId[assetId].expiresAt) (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#341-342)
	- require(bool)(seller == nonFungibleRegistry.ownerOf(assetId)) (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#342-344)
	- require(bool)(seller != address(0)) (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#336-338)
	- require(bool)(seller != msg.sender) (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#339)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#37-45) should be declared external
Destructible.destroy (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#59-62) should be declared external
Destructible.destroyAndSend (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#62-67) should be declared external
Pausable.pause (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#105-107) should be declared external
Pausable.unpause (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#113-117) should be declared external
ERC20Interface.transferFrom (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#173-175) should be declared external
ERC721Interface.ownerOf (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#176-178) should be declared external
ERC721Interface.safeTransferFrom (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#179-180) should be declared external
ERC721Interface.isAuthorized (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#180-183) should be declared external
Marketplace.setPublicationFee (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#247-251) should be declared external
Marketplace.setOwnerCut (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#261-265) should be declared external
Marketplace.createOrder (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#268-311) should be declared external
Marketplace.cancelOrder (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#315-328) should be declared external
Marketplace.executeOrder (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#330-369) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol:
	- pragma solidity0.4.21 (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#21-26) is not in mixedCase
Function 'Destructible.Destructible' (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#56) is not in mixedCase
Parameter '_recipient' of Destructible.destroyAndSend (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#63-67) is not in mixedCase
Function 'Marketplace.Marketplace' (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#237-240) is not in mixedCase
Parameter '_acceptedToken' of Marketplace.Marketplace (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#237) is not in mixedCase
Parameter '_nonFungibleRegistry' of Marketplace.Marketplace (/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol#237) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0xb3bca6f5052c7e24726b44da7403b56a8a1b98f8.sol analyzed (7 contracts), 28 result(s) found
