INFO:Detectors:[91m
Escrow_v1_0._transferFunds (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#1089-1243) sends eth to arbitrary user
	Dangerous calls:
	- destinations[i].transfer(amounts[i]) (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#1157-1161)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
Escrow_v1_0._isTimeLockExpired (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#1363-1385) uses a dangerous strict equality:
	- timeoutHours == 0
Escrow_v1_0._isTimeLockExpired (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#1363-1385) uses a dangerous strict equality:
	- timeoutHours == 0
Escrow_v1_0.checkTransactionType (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#251-279) uses a dangerous strict equality:
	- require(bool,string)(transactions[scriptHash].transactionType == transactionType,Transaction type does not match)
	- require(bool,string)(transactions[scriptHash].transactionType == transactionType,Transaction type does not match)
Escrow_v1_0._isTimeLockExpired (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#1363-1385) uses a dangerous strict equality:
	- timeoutHours == 0
Escrow_v1_0.checkTransactionType (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#251-279) uses a dangerous strict equality:
	- require(bool,string)(transactions[scriptHash].transactionType == transactionType,Transaction type does not match)
	- require(bool,string)(transactions[scriptHash].transactionType == transactionType,Transaction type does not match)
Escrow_v1_0.execute (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#793-865) uses a dangerous strict equality:
	- require(bool,string)(_transferFunds(scriptHash,destinations,amounts) == transactions[scriptHash].value,Total value to be released must be equal to the transaction escrow value)
Escrow_v1_0._isTimeLockExpired (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#1363-1385) uses a dangerous strict equality:
	- timeoutHours == 0
Escrow_v1_0.checkTransactionType (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#251-279) uses a dangerous strict equality:
	- require(bool,string)(transactions[scriptHash].transactionType == transactionType,Transaction type does not match)
	- require(bool,string)(transactions[scriptHash].transactionType == transactionType,Transaction type does not match)
Escrow_v1_0.execute (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#793-865) uses a dangerous strict equality:
	- require(bool,string)(_transferFunds(scriptHash,destinations,amounts) == transactions[scriptHash].value,Total value to be released must be equal to the transaction escrow value)
Escrow_v1_0.inFundedState (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#227-241) uses a dangerous strict equality:
	- require(bool,string)(transactions[scriptHash].status == Status.FUNDED,Transaction is not in FUNDED state)
	- require(bool,string)(transactions[scriptHash].status == Status.FUNDED,Transaction is not in FUNDED state)
Escrow_v1_0._isTimeLockExpired (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#1363-1385) uses a dangerous strict equality:
	- timeoutHours == 0
Escrow_v1_0.checkTransactionType (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#251-279) uses a dangerous strict equality:
	- require(bool,string)(transactions[scriptHash].transactionType == transactionType,Transaction type does not match)
	- require(bool,string)(transactions[scriptHash].transactionType == transactionType,Transaction type does not match)
Escrow_v1_0.execute (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#793-865) uses a dangerous strict equality:
	- require(bool,string)(_transferFunds(scriptHash,destinations,amounts) == transactions[scriptHash].value,Total value to be released must be equal to the transaction escrow value)
Escrow_v1_0.inFundedState (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#227-241) uses a dangerous strict equality:
	- require(bool,string)(transactions[scriptHash].status == Status.FUNDED,Transaction is not in FUNDED state)
	- require(bool,string)(transactions[scriptHash].status == Status.FUNDED,Transaction is not in FUNDED state)
Escrow_v1_0.onlyBuyer (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#279-287) uses a dangerous strict equality:
	- require(bool,string)(msg.sender == transactions[scriptHash].buyer,The initiator of the transaction is not buyer)
	- require(bool,string)(msg.sender == transactions[scriptHash].buyer,The initiator of the transaction is not buyer)
Escrow_v1_0._isTimeLockExpired (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#1363-1385) uses a dangerous strict equality:
	- timeoutHours == 0
Escrow_v1_0.checkTransactionType (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#251-279) uses a dangerous strict equality:
	- require(bool,string)(transactions[scriptHash].transactionType == transactionType,Transaction type does not match)
	- require(bool,string)(transactions[scriptHash].transactionType == transactionType,Transaction type does not match)
Escrow_v1_0.execute (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#793-865) uses a dangerous strict equality:
	- require(bool,string)(_transferFunds(scriptHash,destinations,amounts) == transactions[scriptHash].value,Total value to be released must be equal to the transaction escrow value)
Escrow_v1_0.inFundedState (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#227-241) uses a dangerous strict equality:
	- require(bool,string)(transactions[scriptHash].status == Status.FUNDED,Transaction is not in FUNDED state)
	- require(bool,string)(transactions[scriptHash].status == Status.FUNDED,Transaction is not in FUNDED state)
Escrow_v1_0.onlyBuyer (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#279-287) uses a dangerous strict equality:
	- require(bool,string)(msg.sender == transactions[scriptHash].buyer,The initiator of the transaction is not buyer)
	- require(bool,string)(msg.sender == transactions[scriptHash].buyer,The initiator of the transaction is not buyer)
Escrow_v1_0.transactionDoesNotExist (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#211-221) uses a dangerous strict equality:
	- require(bool,string)(transactions[scriptHash].value == 0,Transaction exists)
	- require(bool,string)(transactions[scriptHash].value == 0,Transaction exists)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in Escrow_v1_0.addTokensToTransaction (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#667-725):
	External calls:
	- require(bool,string)(token.transferFrom(msg.sender,address(this),value),Token transfer failed, maybe you did not approve the escrow contract to spend on behalf of the buyer) (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#707-719)
	State variables written after the call(s):
	- transactions (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#719-723)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Escrow_v1_0._transferFunds has external calls inside a loop:
	- destinations[i].transfer(amounts[i]) (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#1157-1161)
Escrow_v1_0._transferFunds has external calls inside a loop:
	- require(bool,string)(token.transfer(destinations[j],amounts[j]),Token transfer failed.) (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#1223-1237)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Escrow_v1_0.addTokensToTransaction (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#667-725) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(token.transferFrom(msg.sender,address(this),value),Token transfer failed, maybe you did not approve the escrow contract to spend on behalf of the buyer) (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#707-719)
Escrow_v1_0.execute (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#793-865) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(_transferFunds(scriptHash,destinations,amounts) == transactions[scriptHash].value,Total value to be released must be equal to the transaction escrow value) (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#841-857)
Escrow_v1_0._verifySignatures (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#1257-1361) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(! transactions[scriptHash].voted[recovered],Same signature sent twice) (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#1353-1359)
	- require(bool,string)(transactions[scriptHash].isOwner[recovered],Invalid signature) (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#1347-1353)
Escrow_v1_0._isTimeLockExpired (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#1363-1385) uses timestamp for comparisons
	Dangerous comparisons:
	- timeoutHours == 0 (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#1375-1383)
	- (timeSince > uint256(timeoutHours).mul(3600)) (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#1375-1383)
Escrow_v1_0._addTransaction (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#1393-1583) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(! transactions[scriptHash].isOwner[moderator],Either buyer or seller is passed as moderator) (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#1541-1547)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Contract 'Escrow_v1_0' (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#97-1583) is not in CapWords
Function 'Escrow_v1_0._verifyTransaction' (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#1003-1079) is not in mixedCase
Function 'Escrow_v1_0._transferFunds' (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#1089-1243) is not in mixedCase
Function 'Escrow_v1_0._verifySignatures' (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#1257-1361) is not in mixedCase
Function 'Escrow_v1_0._isTimeLockExpired' (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#1363-1385) is not in mixedCase
Function 'Escrow_v1_0._addTransaction' (/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol#1393-1583) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0xb221ac6622ae5348375d0048dcff0049ebb97d89.sol analyzed (3 contracts), 21 result(s) found
