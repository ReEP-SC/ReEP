INFO:Slither:Compilation warnings/errors on /sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:83:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {

  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:406:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _baseEthCap, uint _maxEthPerAddress) {

  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:988:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function DefaultFinalizeAgent(ReleasableToken _token, Crowdsale _crowdsale) {

  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:103:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);

    ^-----------------------------------^
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:505:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, customerId);

    ^----------------------------------------------------^
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:564:5: Warning: Invoking events without "emit" prefix is deprecated.
    Invested(receiver, weiAmount, tokenAmount, 0);

    ^-------------------------------------------^
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:571:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
     bytes32 hash = sha256(addr);

                    ^----------^
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:571:21: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
     bytes32 hash = sha256(addr);

                    ^----------^
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:666:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);

    ^------------------------------------------------------------------------------^
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:678:5: Warning: Invoking events without "emit" prefix is deprecated.
    InvestmentPolicyChanged(requireCustomerId, requiredSignedAddress, signerAddress);

    ^------------------------------------------------------------------------------^
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:688:5: Warning: Invoking events without "emit" prefix is deprecated.
    BaseEthCapChanged(baseEthCap);

    ^---------------------------^
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:698:5: Warning: Invoking events without "emit" prefix is deprecated.
    MaxEthPerAddressChanged(maxEthPerAddress);

    ^---------------------------------------^
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:717:5: Warning: Invoking events without "emit" prefix is deprecated.
    EndsAtChanged(endsAt);

    ^-------------------^
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:774:5: Warning: Invoking events without "emit" prefix is deprecated.
    Refund(msg.sender, weiValue);

    ^--------------------------^
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:173:19: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isSane(address crowdsale) public constant returns (bool) {

                  ^---------------^
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:182:30: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function isPresalePurchase(address purchaser) public constant returns (bool) {

                             ^---------------^
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:230:3: Warning: No visibility specified. Defaulting to "public". 
  function finalizeCrowdsale();

  ^---------------------------^
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:406:3: Warning: No visibility specified. Defaulting to "public". 
  function Crowdsale(address _token, PricingStrategy _pricingStrategy, address _multisigWallet, uint _start, uint _end, uint _minimumFundingGoal, uint _baseEthCap, uint _maxEthPerAddress) {

  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:444:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {

  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:651:3: Warning: No visibility specified. Defaulting to "public". 
  function setFinalizeAgent(FinalizeAgent addr) onlyOwner {

  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:664:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireCustomerId(bool value) onlyOwner {

  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:675:3: Warning: No visibility specified. Defaulting to "public". 
  function setRequireSignedAddress(bool value, address _signerAddress) onlyOwner {

  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:684:3: Warning: No visibility specified. Defaulting to "public". 
  function setBaseEthCap(uint _baseEthCap) onlyOwner {

  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:694:3: Warning: No visibility specified. Defaulting to "public". 
  function setMaxEthPerAddress(uint _maxEthPerAddress) onlyOwner {

  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:711:3: Warning: No visibility specified. Defaulting to "public". 
  function setEndsAt(uint time) onlyOwner {

  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:725:3: Warning: No visibility specified. Defaulting to "public". 
  function setPricingStrategy(PricingStrategy _pricingStrategy) onlyOwner {

  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:827:3: Warning: No visibility specified. Defaulting to "public". 
  function setOwnerTestValue(uint val) onlyOwner {

  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:867:3: Warning: No visibility specified. Defaulting to "public". 
  function isBreakingCap(uint weiAmount, uint tokenAmount, uint weiRaisedTotal, uint tokensSoldTotal) constant returns (bool limitBroken);

  ^--------------------------------------------------------------------------------------------------------------------------------------^
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:965:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint _value) canTransfer(msg.sender) returns (bool success) {

  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:970:3: Warning: No visibility specified. Defaulting to "public". 
  function transferFrom(address _from, address _to, uint _value) canTransfer(_from) returns (bool success) {

  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:988:3: Warning: No visibility specified. Defaulting to "public". 
  function DefaultFinalizeAgent(ReleasableToken _token, Crowdsale _crowdsale) {

  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:165:3: Warning: Function state mutability can be restricted to pure
  function isPricingStrategy() public constant returns (bool) {

  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:173:3: Warning: Function state mutability can be restricted to pure
  function isSane(address crowdsale) public constant returns (bool) {

  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:182:3: Warning: Function state mutability can be restricted to pure
  function isPresalePurchase(address purchaser) public constant returns (bool) {

  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:218:3: Warning: Function state mutability can be restricted to pure
  function isFinalizeAgent() public constant returns(bool) {

  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:832:3: Warning: Function state mutability can be restricted to pure
  function isCrowdsale() public constant returns (bool) {

  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
Reentrancy in Crowdsale.finalize (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1307-1331):
	External calls:
	- finalizeAgent.finalizeCrowdsale() (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1331)
	State variables written after the call(s):
	- finalized (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1331)
Reentrancy in Crowdsale.investInternal (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#937-1043):
	External calls:
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#951-963)
	- currentFgcCap = getCurrentFgcCap() (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#971)
	State variables written after the call(s):
	- tokensSold (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1009)
	- weiRaised (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1005-1008)
Reentrancy in Crowdsale.investInternal (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#937-1043):
	External calls:
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#951-963)
	- currentFgcCap = getCurrentFgcCap() (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#971)
	- pricingStrategy.isPresalePurchase(receiver) (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1009-1019)
	State variables written after the call(s):
	- presaleWeiRaised (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1015-1018)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Reentrancy in Crowdsale.Crowdsale (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#835-915):
	External calls:
	- setPricingStrategy(_pricingStrategy) (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#879-881)
	State variables written after the call(s):
	- endsAt (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#907)
	- minimumFundingGoal (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#915)
	- multisigWallet (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#881-887)
	- startsAt (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#903)
Reentrancy in Crowdsale.investInternal (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#937-1043):
	External calls:
	- tokenAmount = pricingStrategy.calculatePrice(weiAmount,weiRaised - presaleWeiRaised,tokensSold,msg.sender,token.decimals()) (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#951-963)
	- currentFgcCap = getCurrentFgcCap() (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#971)
	State variables written after the call(s):
	- investedAmountOf (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#987-995)
	- investorCount (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#985)
	- tokenAmountOf (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#995-1001)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Crowdsale.getCurrentFgcCap (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1043-1089) uses timestamp for comparisons
	Dangerous comparisons:
	- currentPeriod > 8 && currentPeriod < 11 (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1085-1089)
	- currentPeriod > 2 && currentPeriod < 5 (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1073-1075)
	- currentPeriod < 2 (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1064-1073)
	- currentPeriod > 4 && currentPeriod < 6 (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1075-1079)
	- currentPeriod > 5 && currentPeriod < 9 (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1079-1085)
	- block.timestamp < startsAt (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1047-1049)
Crowdsale.getState (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1651-1719) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp <= endsAt && ! isCrowdsaleFull() (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1697-1719)
	- block.timestamp < startsAt (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1683-1719)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Crowdsale.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE should be constant (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#639-643)
ERC20Basic.totalSupply should be constant (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#529-531)
FractionalERC20.decimals should be constant (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#589)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#203-225) should be declared external
PricingStrategy.isPricingStrategy (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#341-345) should be declared external
PricingStrategy.isSane (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#357-359) should be declared external
PricingStrategy.isPresalePurchase (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#373-381) should be declared external
PricingStrategy.calculatePrice (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#403-407) should be declared external
FinalizeAgent.isFinalizeAgent (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#447-453) should be declared external
FinalizeAgent.isSane (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#471) should be declared external
DefaultFinalizeAgent.isSane (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol) should be declared external
DefaultFinalizeAgent.finalizeCrowdsale (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol) should be declared external
FinalizeAgent.finalizeCrowdsale (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#475) should be declared external
ERC20Basic.balanceOf (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#531-535) should be declared external
ERC20.allowance (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#543-551) should be declared external
ERC20.approve (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#559-573) should be declared external
Crowdsale.fallback (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#915-917) should be declared external
Crowdsale.preallocate (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1121-1163) should be declared external
Crowdsale.buyWithSignedAddress (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1253-1261) should be declared external
Crowdsale.buyWithCustomerId (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1265-1275) should be declared external
Crowdsale.finalize (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1307-1331) should be declared external
Crowdsale.setFinalizeAgent (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1349-1355) should be declared external
Crowdsale.setRequireCustomerId (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1367-1383) should be declared external
Crowdsale.setRequireSignedAddress (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1395-1409) should be declared external
Crowdsale.setBaseEthCap (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1413-1425) should be declared external
Crowdsale.setMaxEthPerAddress (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1433-1449) should be declared external
Crowdsale.setEndsAt (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1473-1477) should be declared external
Crowdsale.setMultisig (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1535-1545) should be declared external
Crowdsale.loadRefund (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1562-1573) should be declared external
Crowdsale.refund (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1587-1607) should be declared external
Crowdsale.isFinalizerSane (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1623-1629) should be declared external
Crowdsale.isPricingSane (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1633-1639) should be declared external
Crowdsale.setOwnerTestValue (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1721) should be declared external
Crowdsale.isCrowdsale (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1723-1725) should be declared external
ReleasableToken.setReleaseAgent (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1899-1917) should be declared external
ReleasableToken.setTransferAgent (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1929-1939) should be declared external
ReleasableToken.releaseTokenTransfer (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1961-1969) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol:
	- pragma solidity^0.4.15 (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#13-17): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#177-180) is not in mixedCase
Function 'Crowdsale.Crowdsale' (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#835-915) is not in mixedCase
Parameter '_token' of Crowdsale.Crowdsale (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#837) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.Crowdsale (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#837-841) is not in mixedCase
Parameter '_multisigWallet' of Crowdsale.Crowdsale (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#841-845) is not in mixedCase
Parameter '_start' of Crowdsale.Crowdsale (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#845-847) is not in mixedCase
Parameter '_end' of Crowdsale.Crowdsale (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#847) is not in mixedCase
Parameter '_minimumFundingGoal' of Crowdsale.Crowdsale (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#849-853) is not in mixedCase
Parameter '_baseEthCap' of Crowdsale.Crowdsale (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#853-857) is not in mixedCase
Parameter '_maxEthPerAddress' of Crowdsale.Crowdsale (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#857-859) is not in mixedCase
Parameter '_signerAddress' of Crowdsale.setRequireSignedAddress (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1395-1403) is not in mixedCase
Parameter '_baseEthCap' of Crowdsale.setBaseEthCap (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1415) is not in mixedCase
Parameter '_maxEthPerAddress' of Crowdsale.setMaxEthPerAddress (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1441) is not in mixedCase
Parameter '_pricingStrategy' of Crowdsale.setPricingStrategy (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1495-1503) is not in mixedCase
Variable 'Crowdsale.MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE' (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#639-643) is not in mixedCase
Parameter '_to' of ReleasableToken.transfer (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1997) is not in mixedCase
Parameter '_value' of ReleasableToken.transfer (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol#1997-1999) is not in mixedCase
Parameter '_from' of ReleasableToken.transferFrom (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol) is not in mixedCase
Parameter '_to' of ReleasableToken.transferFrom (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol) is not in mixedCase
Parameter '_value' of ReleasableToken.transferFrom (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol) is not in mixedCase
Function 'DefaultFinalizeAgent.DefaultFinalizeAgent' (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol) is not in mixedCase
Parameter '_token' of DefaultFinalizeAgent.DefaultFinalizeAgent (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol) is not in mixedCase
Parameter '_crowdsale' of DefaultFinalizeAgent.DefaultFinalizeAgent (/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0xc2e0495b1e1283e6e266e901e97c46061bf2cfc4.sol analyzed (11 contracts), 66 result(s) found
