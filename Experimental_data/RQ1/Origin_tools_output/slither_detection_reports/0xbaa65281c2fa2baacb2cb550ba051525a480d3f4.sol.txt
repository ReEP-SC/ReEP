INFO:Slither:Compilation warnings/errors on /sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:169:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:1569:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function add(uint x, uint y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:1661:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function add(uint x, uint y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:1810:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function add(uint x, uint y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:1818:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function mul(uint x, uint y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:1814:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function sub(uint x, uint y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:2027:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function add(uint x, int y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:2042:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function add(uint x, uint y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:2037:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function mul(uint x, int y) internal pure returns (int z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:2048:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function mul(uint x, uint y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:2032:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function sub(uint x, int y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:2045:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function sub(uint x, uint y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:2027:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function add(uint x, int y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:2042:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function add(uint x, uint y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:2037:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function mul(uint x, int y) internal pure returns (int z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:2048:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function mul(uint x, uint y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:2032:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function sub(uint x, int y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:2045:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function sub(uint x, uint y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:2027:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function add(uint x, int y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:2042:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function add(uint x, uint y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:2037:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function mul(uint x, int y) internal pure returns (int z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:2048:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function mul(uint x, uint y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:2032:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function sub(uint x, int y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:2045:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name
    function sub(uint x, uint y) internal pure returns (uint z) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
ETHJoin.exit (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1520-1523) sends eth to arbitrary user
	Dangerous calls:
	- usr.transfer(wad) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1523)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[91m
DSPauseProxy.exec (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1788-1793) uses delegatecall to a input-controlled function id
	(ok,out) = usr.delegatecall(fax) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1791-1792)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#controlled-delegatecall[0m
INFO:Detectors:[93m
Jug.rpow (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1589-1609) is declared view but contains assembly code
DSPause.soul (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1748-1751) is declared view but contains assembly code
Pot.rpow (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1830-1861) is declared view but contains assembly code
Vat.either (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#2141-2145) is declared view but contains assembly code
Vat.both (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#2145-2149) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Jug.file (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1645-1652) uses a dangerous strict equality:
	- require(bool,string)(now == ilks[ilk].rho,Jug/rho-not-updated)
Jug.file (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1645-1652) uses a dangerous strict equality:
	- require(bool,string)(now == ilks[ilk].rho,Jug/rho-not-updated)
Jug.rmul (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1624-1631) uses a dangerous strict equality:
	- require(bool)(y == 0 || z / y == x)
Pot.file (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1879-1894) uses a dangerous strict equality:
	- require(bool,string)(now == rho,Pot/rho-not-updated)
Pot.file (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1879-1894) uses a dangerous strict equality:
	- require(bool,string)(now == rho,Pot/rho-not-updated)
Pot.join (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1922-1928) uses a dangerous strict equality:
	- require(bool,string)(now == rho,Pot/rho-not-updated)
Pot.file (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1879-1894) uses a dangerous strict equality:
	- require(bool,string)(now == rho,Pot/rho-not-updated)
Pot.join (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1922-1928) uses a dangerous strict equality:
	- require(bool,string)(now == rho,Pot/rho-not-updated)
Pot.mul (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1876-1878) uses a dangerous strict equality:
	- require(bool)(y == 0 || (z = x * y) / y == x)
	- require(bool)(y == 0 || (z = x * y) / y == x)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in End.cage (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#975-983):
	External calls:
	- (Art[ilk],None,None,None,None) = vat.ilks(ilk) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#979)
	- (pip) = spot.ilks(ilk) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#980)
	- tag[ilk] = wdiv(spot.par(),uint256(pip.read())) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#981-983)
	State variables written after the call(s):
	- tag (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#981-983)
Reentrancy in Flapper.deal (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1160-1175):
	External calls:
	- vat.move(address(this),bids[id].guy,bids[id].lot) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1169-1172)
	- gem.burn(address(this),bids[id].bid) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1174-1175)
	State variables written after the call(s):
	- bids (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1175)
Reentrancy in Flipper.deal (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1311-1315):
	External calls:
	- vat.flux(ilk,address(this),bids[id].guy,bids[id].lot) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1313-1314)
	State variables written after the call(s):
	- bids (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1314)
Reentrancy in Flopper.deal (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1431-1435):
	External calls:
	- gem.mint(bids[id].guy,bids[id].lot) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1435)
	State variables written after the call(s):
	- bids (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1435)
Reentrancy in Flipper.dent (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1280-1311):
	External calls:
	- vat.move(msg.sender,bids[id].guy,bid) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1300-1301)
	- vat.flux(ilk,address(this),bids[id].usr,bids[id].lot - lot) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1301-1305)
	State variables written after the call(s):
	- bids (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1307)
	- bids (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1308)
	- bids (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1310-1311)
Reentrancy in Flopper.dent (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1406-1431):
	External calls:
	- vat.move(msg.sender,bids[id].guy,bid) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1423-1425)
	State variables written after the call(s):
	- bids (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1426)
	- bids (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1428)
	- bids (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1428-1431)
Reentrancy in DssDeploy.deployCollateral (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#436-465):
	External calls:
	- ilks[ilk].flip = flipFab.newFlip(address(vat),ilk) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#448-449)
	State variables written after the call(s):
	- ilks (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#451)
Reentrancy in Jug.drip (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1668-1683):
	External calls:
	- (prev) = vat.ilks(ilk) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1674)
	- vat.fold(ilk,vow,diff(rate,prev)) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1678-1681)
	State variables written after the call(s):
	- ilks (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1681-1683)
Reentrancy in Cat.file (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#716-723):
	External calls:
	- vat.nope(ilks[ilk].flip) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#719)
	State variables written after the call(s):
	- ilks (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#721)
Reentrancy in Vow.file (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol):
	External calls:
	- vat.nope(address(flapper)) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol)
	State variables written after the call(s):
	- flapper (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol)
Reentrancy in ESM.fire (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#180-187):
	External calls:
	- end.cage() (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#186)
	State variables written after the call(s):
	- fired (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#187)
Reentrancy in Vow.flop (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol):
	External calls:
	- require(bool,string)(sump <= sub(sub(vat.sin(address(this)),Sin),Ash),Vow/insufficient-debt) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol)
	- require(bool,string)(vat.dai(address(this)) == 0,Vow/surplus-not-zero) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol)
	State variables written after the call(s):
	- Ash (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol)
Reentrancy in End.flow (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1031-1042):
	External calls:
	- (rate) = vat.ilks(ilk) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1034)
	State variables written after the call(s):
	- fix (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1040-1042)
Reentrancy in Vow.kiss (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol):
	External calls:
	- require(bool,string)(rad <= vat.dai(address(this)),Vow/insufficient-surplus) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol)
	State variables written after the call(s):
	- Ash (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol)
Reentrancy in Flapper.tend (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1132-1160):
	External calls:
	- gem.move(msg.sender,bids[id].guy,bids[id].bid) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1151)
	- gem.move(msg.sender,address(this),bid - bids[id].bid) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1151-1153)
	State variables written after the call(s):
	- bids (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1153-1154)
	- bids (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1155-1157)
	- bids (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1158-1160)
Reentrancy in Flipper.tend (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1260-1279):
	External calls:
	- vat.move(msg.sender,bids[id].guy,bids[id].bid) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1273-1277)
	- vat.move(msg.sender,bids[id].gal,bid - bids[id].bid) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1277-1278)
	State variables written after the call(s):
	- bids (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1278)
	- bids (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1279)
	- bids (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1279)
Reentrancy in End.thaw (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1022-1031):
	External calls:
	- require(bool,string)(vat.dai(address(vow)) == 0,End/surplus-not-zero) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1024-1028)
	- debt = vat.debt() (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1030-1031)
	State variables written after the call(s):
	- debt (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1030-1031)
Reentrancy in Flapper.yank (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1177-1191):
	External calls:
	- gem.move(address(this),bids[id].guy,bids[id].bid) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1186-1187)
	State variables written after the call(s):
	- bids (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1190)
Reentrancy in Flipper.yank (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1315-1330):
	External calls:
	- vat.flux(ilk,address(this),msg.sender,bids[id].lot) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1327-1328)
	- vat.move(msg.sender,bids[id].guy,bids[id].bid) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1328-1329)
	State variables written after the call(s):
	- bids (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1330)
Reentrancy in Flopper.yank (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1438-1446):
	External calls:
	- vat.move(address(this),bids[id].guy,bids[id].bid) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1444-1446)
	State variables written after the call(s):
	- bids (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1446)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
DssDeploy.deployPause.authority (local variable @ /sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#420-421) shadows:
	- DSAuth.authority (state variable @ /sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#214-216)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in End.cash (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1053-1066):
	External calls:
	- vat.flux(ilk,address(this),msg.sender,rmul(wad,fix[ilk])) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1055-1056)
	State variables written after the call(s):
	- out (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1056-1059)
Reentrancy in Vow.constructor (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#2317-2323):
	External calls:
	- vat.hope(flapper_) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#2320-2322)
	State variables written after the call(s):
	- live (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#2322)
Reentrancy in DssDeploy.deployAuctions (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#361-386):
	External calls:
	- flap = flapFab.newFlap(address(vat),gov) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#369-372)
	- flop = flopFab.newFlop(address(vat),gov) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#372-373)
	State variables written after the call(s):
	- flop (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#372-373)
Reentrancy in DssDeploy.deployAuctions (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#361-386):
	External calls:
	- flap = flapFab.newFlap(address(vat),gov) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#369-372)
	- flop = flopFab.newFlop(address(vat),gov) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#372-373)
	- vow = vowFab.newVow(address(vat),address(flap),address(flop)) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#373-376)
	State variables written after the call(s):
	- vow (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#373-376)
Reentrancy in DssDeploy.deployDai (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#342-354):
	External calls:
	- dai = daiFab.newDai(chainId) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#347-349)
	- daiJoin = daiJoinFab.newDaiJoin(address(vat),address(dai)) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#349-351)
	State variables written after the call(s):
	- daiJoin (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#349-351)
Reentrancy in DssDeploy.deployShutdown (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#396-419):
	External calls:
	- end = endFab.newEnd() (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#403)
	- end.file(vat,address(vat)) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#406-407)
	- end.file(cat,address(cat)) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#407)
	- end.file(vow,address(vow)) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#408)
	- end.file(pot,address(pot)) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#411)
	- end.file(spot,address(spotter)) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#411-412)
	- vat.rely(address(end)) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#412)
	- cat.rely(address(end)) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#413)
	- vow.rely(address(end)) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#413)
	- pot.rely(address(end)) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#413-415)
	- spotter.rely(address(end)) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#415)
	- esm = esmFab.newESM(gov,address(end),address(pit),min) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#417-419)
	State variables written after the call(s):
	- esm (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#417-419)
Reentrancy in DssDeploy.deployTaxation (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#354-361):
	External calls:
	- jug = jugFab.newJug(address(vat)) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#356-359)
	- pot = potFab.newPot(address(vat)) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#359)
	State variables written after the call(s):
	- pot (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#359)
Reentrancy in DssDeploy.deployVat (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#334-342):
	External calls:
	- vat = vatFab.newVat() (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#338)
	- spotter = spotFab.newSpotter(address(vat)) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#338-339)
	State variables written after the call(s):
	- spotter (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#338-339)
Reentrancy in End.pack (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1043-1053):
	External calls:
	- vat.move(msg.sender,address(vow),mul(wad,RAY)) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1047-1050)
	State variables written after the call(s):
	- bag (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1050-1053)
Reentrancy in End.skim (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1002-1015):
	External calls:
	- (rate) = vat.ilks(ilk) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1004-1006)
	- (ink,art) = vat.urns(ilk,urn) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1006-1007)
	State variables written after the call(s):
	- gap (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1010-1011)
Reentrancy in End.skip (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#984-1002):
	External calls:
	- (flipV) = cat.ilks(ilk) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#987-988)
	- (rate) = vat.ilks(ilk) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#988-991)
	- (bid,lot,usr,tab) = flip.bids(id) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#991-992)
	- vat.suck(address(vow),address(vow),tab) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#993)
	- vat.suck(address(vow),address(this),bid) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#993-994)
	- vat.hope(address(flip)) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#995)
	- flip.yank(id) (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#995-996)
	State variables written after the call(s):
	- Art (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#996-997)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Jug.rpow uses assembly (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1589-1609)
	- /sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1590-1609
DSPause.soul uses assembly (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1748-1751)
	- /sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1750-1751
Pot.rpow uses assembly (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1830-1861)
	- /sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1831-1861
Vat.either uses assembly (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#2141-2145)
	- /sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#2143-2145
Vat.both uses assembly (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#2145-2149)
	- /sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#2148-2149
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
DssDeploy.step should be constant (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#294-295)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
VatFab.newVat (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#8-15) should be declared external
JugFab.newJug (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#16-23) should be declared external
VowFab.newVow (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#24-32) should be declared external
CatFab.newCat (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#32-40) should be declared external
DaiFab.newDai (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#40-48) should be declared external
DaiJoinFab.newDaiJoin (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#48-54) should be declared external
FlapFab.newFlap (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#54-62) should be declared external
FlopFab.newFlop (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#62-70) should be declared external
FlipFab.newFlip (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#70-78) should be declared external
SpotFab.newSpotter (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#79-86) should be declared external
PotFab.newPot (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#88-95) should be declared external
EndFab.newEnd (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#96-102) should be declared external
ESMFab.newESM (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#103-108) should be declared external
PauseFab.newPause (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#109-115) should be declared external
GemLikeESM.balanceOf (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#115-116) should be declared external
GemLikeESM.transfer (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#116-120) should be declared external
GemLikeESM.transferFrom (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#120-125) should be declared external
EndLike.cage (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#125-126) should be declared external
DSAuthority.canCall (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#201-205) should be declared external
DSAuth.setOwner (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#224-230) should be declared external
DSPause.setOwner (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1712-1714) should be declared external
DSPause.setAuthority (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1715-1717) should be declared external
DSAuth.setAuthority (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#230-235) should be declared external
DssDeploy.deployVat (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#334-342) should be declared external
DssDeploy.deployDai (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#342-354) should be declared external
DssDeploy.deployTaxation (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#354-361) should be declared external
DssDeploy.deployAuctions (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#361-386) should be declared external
DssDeploy.deployLiquidator (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#386-396) should be declared external
DssDeploy.deployShutdown (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#396-419) should be declared external
DssDeploy.deployPause (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#420-436) should be declared external
DssDeploy.deployCollateral (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#436-465) should be declared external
DssDeploy.releaseAuth (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#465-480) should be declared external
DssDeploy.releaseAuthFlip (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#481-484) should be declared external
Kicker.kick (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#485-490) should be declared external
GemLike.decimals (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#602-606) should be declared external
Flipper.kick (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1244-1256) should be declared external
DSPause.setDelay (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1717-1720) should be declared external
DSPause.plot (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1751-1760) should be declared external
DSPause.drop (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1760-1765) should be declared external
DSPause.exec (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1765-1785) should be declared external
DSPauseProxy.exec (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1788-1793) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol:
	- pragma solidity^0.5.12 (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#5-7): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in DSPauseProxy.exec (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1788-1793):
	-(ok,out) = usr.delegatecall(fax) /sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1791-1792
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Parameter '' of GemLikeESM.balanceOf (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#116) is not in mixedCase
Parameter '' of GemLikeESM.transfer (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#116-119) is not in mixedCase
Parameter '_scope_0' of GemLikeESM.transfer (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#119) is not in mixedCase
Parameter '' of GemLikeESM.transferFrom (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#123-124) is not in mixedCase
Parameter '_scope_0' of GemLikeESM.transferFrom (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#124) is not in mixedCase
Parameter '_scope_1' of GemLikeESM.transferFrom (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#124) is not in mixedCase
Variable 'ESM.Sum' (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#136-137) is not in mixedCase
Parameter '' of VatLikeCat.ilks (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#493-494) is not in mixedCase
Parameter '' of VatLikeCat.urns (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#497-498) is not in mixedCase
Parameter '_scope_0' of VatLikeCat.urns (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#498) is not in mixedCase
Parameter '' of VatLikeCat.grab (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#502) is not in mixedCase
Parameter '_scope_0' of VatLikeCat.grab (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#502-503) is not in mixedCase
Parameter '_scope_1' of VatLikeCat.grab (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#503) is not in mixedCase
Parameter '_scope_2' of VatLikeCat.grab (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#503-504) is not in mixedCase
Parameter '_scope_3' of VatLikeCat.grab (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#504) is not in mixedCase
Parameter '_scope_4' of VatLikeCat.grab (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#504) is not in mixedCase
Parameter '' of VatLikeCat.hope (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#506) is not in mixedCase
Parameter '' of VatLikeCat.nope (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#507) is not in mixedCase
Parameter '' of VowLike.fess (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#507-508) is not in mixedCase
Parameter '' of VatLikeEnd.dai (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#509) is not in mixedCase
Parameter '' of VatLikeEnd.hope (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#520-521) is not in mixedCase
Parameter '' of CatLike.ilks (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#540) is not in mixedCase
Parameter '' of Spotty.ilks (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#578) is not in mixedCase
Parameter '' of VatLikeFlap.move (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#583-584) is not in mixedCase
Parameter '_scope_0' of VatLikeFlap.move (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#584) is not in mixedCase
Parameter '_scope_1' of VatLikeFlap.move (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#584) is not in mixedCase
Parameter '' of GemLikeFlap.move (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#587) is not in mixedCase
Parameter '_scope_0' of GemLikeFlap.move (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#587) is not in mixedCase
Parameter '_scope_1' of GemLikeFlap.move (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#587) is not in mixedCase
Parameter '' of GemLikeFlap.burn (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#588) is not in mixedCase
Parameter '_scope_0' of GemLikeFlap.burn (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#588) is not in mixedCase
Parameter '' of VatLikeFlip.move (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#592) is not in mixedCase
Parameter '_scope_0' of VatLikeFlip.move (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#592-593) is not in mixedCase
Parameter '_scope_1' of VatLikeFlip.move (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#593) is not in mixedCase
Parameter '' of VatLikeFlip.flux (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#593) is not in mixedCase
Parameter '_scope_0' of VatLikeFlip.flux (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#594) is not in mixedCase
Parameter '_scope_1' of VatLikeFlip.flux (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#594) is not in mixedCase
Parameter '_scope_2' of VatLikeFlip.flux (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#594) is not in mixedCase
Parameter '' of VatLikeFlop.move (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#598) is not in mixedCase
Parameter '_scope_0' of VatLikeFlop.move (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#598) is not in mixedCase
Parameter '_scope_1' of VatLikeFlop.move (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#598) is not in mixedCase
Parameter '' of GemLikeFlop.mint (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#600) is not in mixedCase
Parameter '_scope_0' of GemLikeFlop.mint (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#600) is not in mixedCase
Parameter '' of GemLike.transfer (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#607) is not in mixedCase
Parameter '_scope_0' of GemLike.transfer (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#607) is not in mixedCase
Parameter '' of GemLike.transferFrom (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#609) is not in mixedCase
Parameter '_scope_0' of GemLike.transferFrom (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#609) is not in mixedCase
Parameter '_scope_1' of GemLike.transferFrom (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#609) is not in mixedCase
Parameter '' of DSTokenLike.mint (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#612-614) is not in mixedCase
Parameter '_scope_0' of DSTokenLike.mint (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#614) is not in mixedCase
Parameter '' of DSTokenLike.burn (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#616) is not in mixedCase
Parameter '_scope_0' of DSTokenLike.burn (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#616) is not in mixedCase
Parameter '' of VatLikeJoin.slip (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#617) is not in mixedCase
Parameter '_scope_0' of VatLikeJoin.slip (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#617) is not in mixedCase
Parameter '_scope_1' of VatLikeJoin.slip (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#617-618) is not in mixedCase
Parameter '' of VatLikeJoin.move (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#618) is not in mixedCase
Parameter '_scope_0' of VatLikeJoin.move (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#618) is not in mixedCase
Parameter '_scope_1' of VatLikeJoin.move (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#618) is not in mixedCase
Parameter '' of VatLikeJug.ilks (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#619) is not in mixedCase
Parameter '' of VatLikeJug.fold (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#620) is not in mixedCase
Parameter '_scope_0' of VatLikeJug.fold (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#620-621) is not in mixedCase
Parameter '_scope_1' of VatLikeJug.fold (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#621) is not in mixedCase
Constant 'Dai.version' (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#770-771) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'Dai.DOMAIN_SEPARATOR' (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#787) is not in mixedCase
Variable 'End.Art' (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#910-911) is not in mixedCase
Parameter '' of VatLikePot.move (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1794) is not in mixedCase
Parameter '_scope_0' of VatLikePot.move (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1794) is not in mixedCase
Parameter '_scope_1' of VatLikePot.move (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1794-1795) is not in mixedCase
Parameter '' of VatLikePot.suck (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1795) is not in mixedCase
Parameter '_scope_0' of VatLikePot.suck (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1796) is not in mixedCase
Parameter '_scope_1' of VatLikePot.suck (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1796) is not in mixedCase
Variable 'Pot.Pie' (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1810) is not in mixedCase
Parameter '' of VatLikeSpot.file (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1934) is not in mixedCase
Parameter '_scope_0' of VatLikeSpot.file (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1934) is not in mixedCase
Parameter '_scope_1' of VatLikeSpot.file (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#1934) is not in mixedCase
Variable 'Vat.Line' (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#2044-2045) is not in mixedCase
Parameter '' of FlapLike.cage (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#2277) is not in mixedCase
Parameter '' of VatLikeVow.dai (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#2280) is not in mixedCase
Parameter '' of VatLikeVow.sin (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#2282) is not in mixedCase
Parameter '' of VatLikeVow.heal (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#2283) is not in mixedCase
Parameter '' of VatLikeVow.hope (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#2285) is not in mixedCase
Parameter '' of VatLikeVow.nope (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#2286) is not in mixedCase
Variable 'Vow.Sin' (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#2304-2305) is not in mixedCase
Variable 'Vow.Ash' (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#2305) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
DssDeploy.ONE (/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol#295-296) is never used in DssDeploy
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/sb/0xbaa65281c2fa2baacb2cb550ba051525a480d3f4.sol analyzed (64 contracts), 178 result(s) found
