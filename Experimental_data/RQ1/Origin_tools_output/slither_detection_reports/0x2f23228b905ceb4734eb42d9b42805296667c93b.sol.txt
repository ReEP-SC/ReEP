INFO:Slither:Compilation warnings/errors on /sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:139:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Coinchangex(address admin_, address feeAccount_, uint feeTake_) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:169:62: Warning: This declaration shadows an existing declaration.
  function addSpecialFeeTake(address token, uint256 balance, uint256 feeTake) public isAdmin {
                                                             ^-------------^
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:119:3: The shadowed declaration is here:
  uint public feeTake; // percentage times (1 ether)
  ^-----------------^

/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:179:74: Warning: This declaration shadows an existing declaration.
  function chnageSpecialFeeTake(uint id, address token, uint256 balance, uint256 feeTake) public isAdmin {
                                                                         ^-------------^
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:119:3: The shadowed declaration is here:
  uint public feeTake; // percentage times (1 ether)
  ^-----------------^

/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:219:5: Warning: Invoking events without "emit" prefix is deprecated.
    Deposit(0, msg.sender, msg.value, tokens[0][msg.sender]);
    ^------------------------------------------------------^
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:232:5: Warning: Invoking events without "emit" prefix is deprecated.
    Withdraw(0, msg.sender, amount, tokens[0][msg.sender]);
    ^----------------------------------------------------^
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:250:5: Warning: Invoking events without "emit" prefix is deprecated.
    Deposit(token, msg.sender, amount, tokens[token][msg.sender]);
    ^-----------------------------------------------------------^
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:285:5: Warning: Invoking events without "emit" prefix is deprecated.
    Withdraw(token, msg.sender, amount, tokens[token][msg.sender]);
    ^------------------------------------------------------------^
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:323:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^----------------------------------------------------------------------^
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:325:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      (ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) == user) &&
                 ^-------------------------------------------------^
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:331:5: Warning: Invoking events without "emit" prefix is deprecated.
    Trade(tokenGet, amount, tokenGive, amountGive.mul(amount) / amountGet, user, msg.sender);
    ^--------------------------------------------------------------------------------------^
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:428:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^----------------------------------------------------------------------^
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:430:18: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      (ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) == user) &&
                 ^-------------------------------------------------^
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:461:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^----------------------------------------------------------------------^
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:483:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = sha256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^----------------------------------------------------------------------^
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:484:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    require ((ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) == msg.sender));
                        ^-------------------------------------------------^
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:486:5: Warning: Invoking events without "emit" prefix is deprecated.
    Cancel(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, msg.sender, v, r, s);
    ^-------------------------------------------------------------------------------------^
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:170:7: Warning: Unused local variable.
      uint id = specialFees.push(SpecialTokenBalanceFeeTake(
      ^-----^
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:261:27: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function tokenFallback( address sender, uint amount, bytes data) public returns (bool ok) {
                          ^------------^
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:261:43: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function tokenFallback( address sender, uint amount, bytes data) public returns (bool ok) {
                                          ^---------^
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:261:56: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function tokenFallback( address sender, uint amount, bytes data) public returns (bool ok) {
                                                       ^--------^
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:460:135: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
 ... uint8 v ... 
     ^-----^
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:460:144: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
 ... bytes32 r ... 
     ^-------^
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:460:155: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
 ... bytes32 s ... 
     ^-------^
/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:261:3: Warning: Function state mutability can be restricted to view
  function tokenFallback( address sender, uint amount, bytes data) public returns (bool ok) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
Coinchangex.addSpecialFeeTake.feeTake (local variable @ /sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#175-178) shadows:
	- Coinchangex.feeTake (state variable @ /sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#120)
Coinchangex.chnageSpecialFeeTake.feeTake (local variable @ /sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#185) shadows:
	- Coinchangex.feeTake (state variable @ /sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#120)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in Coinchangex.depositToken (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#249-257):
	External calls:
	- require(bool)(IToken(token).transferFrom(msg.sender,this,amount)) (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#254)
	State variables written after the call(s):
	- depositingTokenFlag (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#255)
	- tokens (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#255-256)
Reentrancy in Coinchangex.depositTokenForUser (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol):
	External calls:
	- require(bool)(IToken(token).transferFrom(msg.sender,this,amount)) (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol)
	State variables written after the call(s):
	- depositingTokenFlag (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol)
	- tokens (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
IToken.decimals should be constant (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#45-48)
IToken.name should be constant (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#48-52)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Different versions of Solidity is used in /sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:
	- Version used: ['^0.4.17', '^0.4.23']
	- /sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#1 declares pragma solidity^0.4.23
	- /sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#2-3 declares pragma solidity^0.4.17
	- /sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#52-53 declares pragma solidity^0.4.17
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
IToken.totalSupply (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#11-13) should be declared external
IToken.balanceOf (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#15-17) should be declared external
IToken.transfer (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#21-23) should be declared external
IToken.transferFrom (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#28-30) should be declared external
IToken.approve (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#34-36) should be declared external
IToken.allowance (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#39-41) should be declared external
Coinchangex.fallback (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#152-153) should be declared external
Coinchangex.changeAdmin (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#157-158) should be declared external
Coinchangex.changeFeeAccount (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#162-164) should be declared external
Coinchangex.changeFeeTake (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#169-170) should be declared external
Coinchangex.addSpecialFeeTake (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#171-180) should be declared external
Coinchangex.chnageSpecialFeeTake (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#181-193) should be declared external
Coinchangex.removeSpecialFeeTake (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#195-208) should be declared external
Coinchangex.TotalSpecialFeeTakes (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#209-210) should be declared external
Coinchangex.deposit (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#223-226) should be declared external
Coinchangex.withdraw (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#232-240) should be declared external
Coinchangex.depositToken (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#249-257) should be declared external
Coinchangex.tokenFallback (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#266-277) should be declared external
Coinchangex.withdrawToken (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#285-294) should be declared external
Coinchangex.balanceOf (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#300-304) should be declared external
Coinchangex.trade (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#325-341) should be declared external
Coinchangex.testTrade (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#406-419) should be declared external
Coinchangex.amountFilled (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#467-473) should be declared external
Coinchangex.cancelOrder (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#486-502) should be declared external
Coinchangex.depositForUser (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#506-508) should be declared external
Coinchangex.depositTokenForUser (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol:
	- pragma solidity^0.4.23 (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#1): it allows old versions
	- pragma solidity^0.4.17 (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#2-3): it allows old versions
	- pragma solidity^0.4.17 (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#52-53): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Coinchangex.Coinchangex' (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#142-151) is not in mixedCase
Function 'Coinchangex.TotalSpecialFeeTakes' (/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol#209-210) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0x2f23228b905ceb4734eb42d9b42805296667c93b.sol analyzed (3 contracts), 35 result(s) found
