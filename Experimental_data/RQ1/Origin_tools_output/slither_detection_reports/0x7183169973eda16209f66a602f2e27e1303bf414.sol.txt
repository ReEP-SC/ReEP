INFO:Slither:Compilation warnings/errors on /sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol:
/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol:25:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Owned() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol:62:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BoomerangLiquidity(uint multiplierPercent, address powh) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol:99:17: Warning: Return value of low-level calls not used.
                participants[payoutOrder].etherAddress.call.value(payoutToSend).gas(1000000)();
                ^----------------------------------------------------------------------------^
/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol:17:5: Warning: Function state mutability can be restricted to pure
    function withdraw() public {}
    ^---------------------------^
/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol:18:5: Warning: Function state mutability can be restricted to pure
    function myTokens() public view returns(uint256) {}
    ^-------------------------------------------------^

INFO:Detectors:[91m
BoomerangLiquidity.payout (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#89-112) sends eth to arbitrary user
	Dangerous calls:
	- weak_hands.buy.value(investment)(msg.sender) (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#94)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[91m
Reentrancy in BoomerangLiquidity.payout (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#89-112):
	External calls:
	- weak_hands.buy.value(investment)(msg.sender) (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#94)
	- participants[payoutOrder].etherAddress.call.value(payoutToSend).gas(1000000)() (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#101-104)
	External calls sending eth:
	- weak_hands.buy.value(investment)(msg.sender) (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#94)
	- ! participants[payoutOrder].etherAddress.send(payoutToSend) (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#99-105)
	- participants[payoutOrder].etherAddress.call.value(payoutToSend).gas(1000000)() (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#101-104)
	State variables written after the call(s):
	- payoutOrder (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#109-110)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
Contract locking ether found in /sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol:
	Contract POWH has payable functions:
	 - buy (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#16-17)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
BoomerangLiquidity.payout (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#89-112) does not use the value returned by external calls:
	-weak_hands.buy.value(investment)(msg.sender) (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#94)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
BoomerangLiquidity.payout has external calls inside a loop:
	- ! participants[payoutOrder].etherAddress.send(payoutToSend) (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#99-105)
BoomerangLiquidity.payout has external calls inside a loop:
	- participants[payoutOrder].etherAddress.call.value(payoutToSend).gas(1000000)() (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#101-104)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in BoomerangLiquidity.payout (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#89-112):
	External calls:
	- weak_hands.buy.value(investment)(msg.sender) (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#94)
	State variables written after the call(s):
	- participants (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#98)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
ERC20Interface.totalSupply (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#4-5) should be declared external
ERC20Interface.balanceOf (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#5-6) should be declared external
ERC20Interface.allowance (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#6-7) should be declared external
ERC20Interface.transfer (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#7-8) should be declared external
ERC20Interface.approve (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#8-9) should be declared external
ERC20Interface.transferFrom (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#9-11) should be declared external
POWH.buy (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#16-17) should be declared external
POWH.withdraw (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#17-18) should be declared external
POWH.myTokens (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#18-21) should be declared external
Owned.changeOwner (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#34-38) should be declared external
Owned.acceptOwnership (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#39-45) should be declared external
BoomerangLiquidity.fallback (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#81-82) should be declared external
BoomerangLiquidity.donate (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#122) should be declared external
BoomerangLiquidity.transferAnyERC20Token (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#122-128) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol:
	- pragma solidity^0.4.21 (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in BoomerangLiquidity.payout (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#89-112):
	-participants[payoutOrder].etherAddress.call.value(payoutToSend).gas(1000000)() /sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#101-104
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Parameter '' of POWH.buy (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#16) is not in mixedCase
Function 'Owned.Owned' (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#25-29) is not in mixedCase
Parameter '_newOwner' of Owned.changeOwner (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#34-35) is not in mixedCase
Function 'BoomerangLiquidity.BoomerangLiquidity' (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#62-70) is not in mixedCase
Variable 'BoomerangLiquidity.powh_address' (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#62) is not in mixedCase
Variable 'BoomerangLiquidity.weak_hands' (/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol#62) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0x7183169973eda16209f66a602f2e27e1303bf414.sol analyzed (4 contracts), 29 result(s) found
