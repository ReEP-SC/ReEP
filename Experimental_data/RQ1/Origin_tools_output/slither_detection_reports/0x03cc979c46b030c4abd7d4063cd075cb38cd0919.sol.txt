INFO:Slither:Compilation warnings/errors on /sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:268:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = keccak256(Action.SellCallToOpen, expiration, nonce, price, size, strike, validUntil, this);
                    ^----------------------------------------------------------------------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:288:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = keccak256(Action.SellCallToClose, expiration, nonce, price, size, strike, validUntil, this);
                    ^-----------------------------------------------------------------------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:308:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = keccak256(Action.SellCallToOpen, expiration, nonce, price, size, strike, validUntil, this);
                    ^----------------------------------------------------------------------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:328:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = keccak256(Action.SellCallToClose, expiration, nonce, price, size, strike, validUntil, this);
                    ^-----------------------------------------------------------------------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:348:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = keccak256(Action.BuyCallToOpen, expiration, nonce, price, size, strike, validUntil, this);
                    ^---------------------------------------------------------------------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:368:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = keccak256(Action.BuyCallToClose, expiration, nonce, price, size, strike, validUntil, this);
                    ^----------------------------------------------------------------------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:388:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = keccak256(Action.BuyCallToOpen, expiration, nonce, price, size, strike, validUntil, this);
                    ^---------------------------------------------------------------------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:408:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = keccak256(Action.BuyCallToClose, expiration, nonce, price, size, strike, validUntil, this);
                    ^----------------------------------------------------------------------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:422:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 series = keccak256(expiration, strike);
                         ^---------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:431:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 series = keccak256(expiration, strike);
                         ^---------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:441:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 series = keccak256(expiration, strike);
                         ^---------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:451:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 series = keccak256(expiration, strike);
                         ^---------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:468:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 series = keccak256(expiration, strike);
                         ^---------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:486:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 series = keccak256(expiration, strike);
                         ^---------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:524:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = keccak256(Action.SellPutToOpen, expiration, nonce, price, size, strike, validUntil, this);
                    ^---------------------------------------------------------------------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:544:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = keccak256(Action.SellPutToClose, expiration, nonce, price, size, strike, validUntil, this);
                    ^----------------------------------------------------------------------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:564:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = keccak256(Action.SellPutToOpen, expiration, nonce, price, size, strike, validUntil, this);
                    ^---------------------------------------------------------------------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:584:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = keccak256(Action.SellPutToClose, expiration, nonce, price, size, strike, validUntil, this);
                    ^----------------------------------------------------------------------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:604:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = keccak256(Action.BuyPutToOpen, expiration, nonce, price, size, strike, validUntil, this);
                    ^--------------------------------------------------------------------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:624:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = keccak256(Action.BuyPutToClose, expiration, nonce, price, size, strike, validUntil, this);
                    ^---------------------------------------------------------------------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:644:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = keccak256(Action.BuyPutToOpen, expiration, nonce, price, size, strike, validUntil, this);
                    ^--------------------------------------------------------------------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:664:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = keccak256(Action.BuyPutToClose, expiration, nonce, price, size, strike, validUntil, this);
                    ^---------------------------------------------------------------------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:678:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 series = keccak256(expiration, strike);
                         ^---------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:687:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 series = keccak256(expiration, strike);
                         ^---------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:697:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 series = keccak256(expiration, strike);
                         ^---------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:708:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 series = keccak256(expiration, strike);
                         ^---------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:725:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 series = keccak256(expiration, strike);
                         ^---------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:744:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 series = keccak256(expiration, strike);
                         ^---------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:772:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = keccak256(amount, nonce, msg.sender);
                    ^----------------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:773:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        h = keccak256("\x19Ethereum Signed Message:\n32", h);
            ^----------------------------------------------^
/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:808:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return ecrecover(keccak256("\x19Ethereum Signed Message:\n32", h), v, r, s);
                         ^----------------------------------------------^

INFO:Detectors:[93m
Exchange.withdrawDai (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#176-182) does not use the value returned by external calls:
	-daiToken.transfer(to,amount) (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#180-181)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in Exchange.claimFeeRebate (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#784-795):
	External calls:
	- require(bool)(isAuthorized(signer,msg.sig)) (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#790-791)
	State variables written after the call(s):
	- claimedFeeRebate (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#795)
	- feeRebates (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#792-794)
Reentrancy in Exchange.depositDai (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#162-169):
	External calls:
	- require(bool)(daiToken.transferFrom(msg.sender,this,amount)) (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#165-166)
	State variables written after the call(s):
	- dai (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#166-167)
	- totalDai (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#166-167)
Reentrancy in Exchange.depositDaiFor (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#182-191):
	External calls:
	- require(bool)(daiToken.transferFrom(msg.sender,this,amount)) (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#186-187)
	State variables written after the call(s):
	- dai (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#187-188)
	- totalDai (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#187-188)
Reentrancy in Exchange.settleCall (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#491-527):
	External calls:
	- require(bool,string)(msg.sender == writer || isAuthorized(msg.sender,msg.sig),Unauthorized) (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#494-495)
	State variables written after the call(s):
	- callsAssigned (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#506-510)
	- callsSold (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#510-513)
	- callsSold (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#524)
	- dai (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#517-518)
	- dai (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#522-523)
	- eth (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#524)
	- feeRebates (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#522-523)
	- feesCollected (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#522-523)
	- totalDai (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#517-518)
	- totalDai (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#522-523)
	- totalEth (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#504-506)
Reentrancy in Exchange.settlePut (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#754-783):
	External calls:
	- require(bool,string)(msg.sender == writer || isAuthorized(msg.sender,msg.sig),Unauthorized) (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#756-757)
	State variables written after the call(s):
	- dai (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#778-779)
	- dai (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#779-782)
	- eth (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#774-775)
	- feeRebates (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#778-779)
	- feesCollected (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#778-779)
	- putsAssigned (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#773-774)
	- putsSold (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#771-773)
	- putsSold (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#782)
	- totalDai (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#769-771)
	- totalDai (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#778-779)
	- totalEth (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#774-775)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Exchange.precisionError should be constant (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#142-145)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
ERC20.transfer (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#4-5) should be declared external
ERC20.transferFrom (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#5-8) should be declared external
DSAuthority.canCall (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#50-56) should be declared external
DSAuth.setOwner (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#73-79) should be declared external
DSAuth.setAuthority (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#80-87) should be declared external
Exchange.fallback (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#150-151) should be declared external
Exchange.deposit (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#159-162) should be declared external
Exchange.depositDai (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#162-169) should be declared external
Exchange.withdraw (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#169-176) should be declared external
Exchange.withdrawDai (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#176-182) should be declared external
Exchange.depositDaiFor (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#182-191) should be declared external
Exchange.setFeeSchedule (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#215-229) should be declared external
Exchange.withdrawFees (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#230-242) should be declared external
Exchange.cancelOrder (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#260-266) should be declared external
Exchange.callBtoWithSto (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#267-287) should be declared external
Exchange.callBtoWithStc (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#287-308) should be declared external
Exchange.callBtcWithSto (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#308-328) should be declared external
Exchange.callBtcWithStc (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#328-348) should be declared external
Exchange.callStoWithBto (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#348-368) should be declared external
Exchange.callStoWithBtc (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#368-388) should be declared external
Exchange.callStcWithBto (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#388-408) should be declared external
Exchange.callStcWithBtc (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#409-419) should be declared external
Exchange.exerciseCall (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#472-487) should be declared external
Exchange.settleCall (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#491-527) should be declared external
Exchange.putBtoWithSto (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#527-547) should be declared external
Exchange.putBtoWithStc (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#548-568) should be declared external
Exchange.putBtcWithSto (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#568-588) should be declared external
Exchange.putBtcWithStc (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#588-608) should be declared external
Exchange.putStoWithBto (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#608-629) should be declared external
Exchange.putStoWithBtc (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#629-649) should be declared external
Exchange.putStcWithBto (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#649-669) should be declared external
Exchange.putStcWithBtc (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#669-681) should be declared external
Exchange.exercisePut (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#736-752) should be declared external
Exchange.settlePut (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#754-783) should be declared external
Exchange.claimFeeRebate (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#784-795) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol:
	- pragma solidity^0.4.18 (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Exchange._addEth' (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#191-196) is not in mixedCase
Function 'Exchange._subEth' (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#196-201) is not in mixedCase
Function 'Exchange._addDai' (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#201-206) is not in mixedCase
Function 'Exchange._subDai' (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#206-214) is not in mixedCase
Parameter '_flatFee' of Exchange.setFeeSchedule (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#216-217) is not in mixedCase
Parameter '_contractFee' of Exchange.setFeeSchedule (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#217) is not in mixedCase
Parameter '_exerciseFee' of Exchange.setFeeSchedule (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#219) is not in mixedCase
Parameter '_settlementFee' of Exchange.setFeeSchedule (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#219-220) is not in mixedCase
Function 'Exchange._buyCallToOpen' (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#430-437) is not in mixedCase
Function 'Exchange._buyCallToClose' (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#437-447) is not in mixedCase
Function 'Exchange._sellCallToOpen' (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#447-459) is not in mixedCase
Function 'Exchange._sellCallToClose' (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#459-470) is not in mixedCase
Function 'Exchange._buyPutToOpen' (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#690-698) is not in mixedCase
Function 'Exchange._buyPutToClose' (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#698-709) is not in mixedCase
Function 'Exchange._sellPutToOpen' (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#709-723) is not in mixedCase
Function 'Exchange._sellPutToClose' (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#723-734) is not in mixedCase
Function 'Exchange._validateOrder' (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol#799-810) is not in mixedCase
Function 'Exchange._collectFee' (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol) is not in mixedCase
Function 'Exchange._getMaker' (/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0x03cc979c46b030c4abd7d4063cd075cb38cd0919.sol analyzed (6 contracts), 62 result(s) found
