INFO:Slither:Compilation warnings/errors on /sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:527:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function SEEDDEX(address admin_, address manager_, address feeAccount_, uint feeTakeMaker_, uint feeTakeSender_, uint feeTakeMakerFic_, uint feeTakeSenderFic_, address predecessor_) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:695:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (tokens[0][msg.sender] < amount) throw;
                                            ^---^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:699:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!msg.sender.call.value(amount)()) throw;
                                              ^---^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:729:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (token == 0) throw;
                        ^---^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:731:72: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!IERC20(token).safeTransferFrom(msg.sender, this, amount)) throw;
                                                                       ^---^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:797:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (token == 0) throw;
                        ^---^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:799:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (tokens[token][msg.sender] < amount) throw;
                                                ^---^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:803:62: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!IERC20(token).safeTransfer(msg.sender, amount)) throw;
                                                             ^---^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:1287:75: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                if (!IERC20(token).safeApprove(newExchange, tokenAmount)) throw;
                                                                          ^---^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:1357:72: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!IERC20(token).safeTransferFrom(msg.sender, this, amount)) throw;
                                                                       ^---^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:277:9: Warning: Return value of low-level calls not used.
        address(_token).call(
        ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:355:9: Warning: Return value of low-level calls not used.
        address(_token).call(
        ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:407:9: Warning: Return value of low-level calls not used.
        address(_token).call(
        ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:675:9: Warning: Invoking events without "emit" prefix is deprecated.
        Deposit(0, msg.sender, msg.value, tokens[0][msg.sender]);
        ^------------------------------------------------------^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:701:9: Warning: Invoking events without "emit" prefix is deprecated.
        Withdraw(0, msg.sender, amount, tokens[0][msg.sender]);
        ^----------------------------------------------------^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:735:9: Warning: Invoking events without "emit" prefix is deprecated.
        Deposit(token, msg.sender, amount, tokens[token][msg.sender]);
        ^-----------------------------------------------------------^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:805:9: Warning: Invoking events without "emit" prefix is deprecated.
        Withdraw(token, msg.sender, amount, tokens[token][msg.sender]);
        ^------------------------------------------------------------^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:867:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 hash = keccak256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                       ^-------------------------------------------------------------------------^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:873:9: Warning: Invoking events without "emit" prefix is deprecated.
        Order(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, msg.sender, hash, amount);
        ^-----------------------------------------------------------------------------------------^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:921:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 hash = keccak256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                       ^-------------------------------------------------------------------------^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:925:46: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            (orders[user][hash] || ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) == user) &&
                                             ^-------------------------------------------------^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:937:9: Warning: Invoking events without "emit" prefix is deprecated.
        Trade(tokenGet, amount, tokenGive, amountGive * amount / amountGet, user, msg.sender, now);
        ^----------------------------------------------------------------------------------------^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:1099:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 hash = keccak256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                       ^-------------------------------------------------------------------------^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:1103:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        (orders[user][hash] || ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) == user) &&
                                         ^-------------------------------------------------^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:1165:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 hash = keccak256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                       ^-------------------------------------------------------------------------^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:1209:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 hash = keccak256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                       ^-------------------------------------------------------------------------^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:1211:56: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        require((orders[msg.sender][hash] || ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) == msg.sender));
                                                       ^-------------------------------------------------^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:1215:9: Warning: Invoking events without "emit" prefix is deprecated.
        Cancel(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, msg.sender, v, r, s);
        ^-------------------------------------------------------------------------------------^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:1299:9: Warning: Invoking events without "emit" prefix is deprecated.
        FundsMigrated(msg.sender, newContract);
        ^------------------------------------^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:693:5: Warning: No visibility specified. Defaulting to "public". 
    function withdraw(uint amount) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:725:5: Warning: No visibility specified. Defaulting to "public". 
    function depositToken(address token, uint amount) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:757:28: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function tokenFallback(address sender, uint amount, bytes data) public returns (bool ok) {
                           ^------------^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:757:44: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function tokenFallback(address sender, uint amount, bytes data) public returns (bool ok) {
                                           ^---------^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:757:57: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function tokenFallback(address sender, uint amount, bytes data) public returns (bool ok) {
                                                        ^--------^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:795:5: Warning: No visibility specified. Defaulting to "public". 
    function withdrawToken(address token, uint amount) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:1163:137: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
 ... uint8 v ... 
     ^-----^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:1163:146: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
 ... bytes32 r ... 
     ^-------^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:1163:157: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
 ... bytes32 s ... 
     ^-------^
/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:757:5: Warning: Function state mutability can be restricted to view
    function tokenFallback(address sender, uint amount, bytes data) public returns (bool ok) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in SEEDDEX.migrateFunds (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#1313-1357):
	External calls:
	- newExchange.depositForUser.value(etherAmount)(msg.sender) (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#1331-1335)
	State variables written after the call(s):
	- tokens (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#1347)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
amount in SEEDDEX.order (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#903) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
SEEDDEX.migrateFunds has external calls inside a loop:
	- newExchange.depositTokenForUser(token,tokenAmount,msg.sender) (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#1349-1351)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Deprecated standard detected @ /sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#721:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#727:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#757:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#759:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#831:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#835:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#843-845:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#1347:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
SEEDDEX.fallback (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#599) should be declared external
SEEDDEX.changeAdmin (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#607-609) should be declared external
SEEDDEX.changeManager (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#617-625) should be declared external
SEEDDEX.changeFeeAccount (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#633-635) should be declared external
SEEDDEX.changeFeeTakeMaker (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#643-653) should be declared external
SEEDDEX.changeFeeTakeSender (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#653-657) should be declared external
SEEDDEX.changeFeeTakeMakerFic (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#657-663) should be declared external
SEEDDEX.changeFeeTakeSenderFic (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#663-671) should be declared external
SEEDDEX.setSuccessor (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#673-683) should be declared external
SEEDDEX.deposit (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#699-711) should be declared external
SEEDDEX.withdraw (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#719-727) should be declared external
SEEDDEX.depositToken (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#749-767) should be declared external
SEEDDEX.tokenFallback (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#789-805) should be declared external
SEEDDEX.withdrawToken (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#825-851) should be declared external
SEEDDEX.balanceOf (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#859-865) should be declared external
SEEDDEX.order (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#895-907) should be declared external
SEEDDEX.trade (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#947-973) should be declared external
SEEDDEX.testTrade (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#1085-1097) should be declared external
SEEDDEX.amountFilled (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#1199-1207) should be declared external
SEEDDEX.cancelOrder (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#1249-1281) should be declared external
SEEDDEX.migrateFunds (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#1313-1357) should be declared external
SEEDDEX.depositForUser (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol) should be declared external
SEEDDEX.depositTokenForUser (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Low level call in SafeERC20.safeTransfer (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#273-311):
	-address(_token).call(abi.encodeWithSignature(transfer(address,uint256),_to,_value)) /sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#295-305
Low level call in SafeERC20.safeTransferFrom (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#340-389):
	-address(_token).call(abi.encodeWithSignature(transferFrom(address,address,uint256),_from,_to,_value)) /sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#381-385
Low level call in SafeERC20.safeApprove (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#436-459):
	-address(_token).call(abi.encodeWithSignature(approve(address,uint256),_spender,_value)) /sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#446-455
Low level call in SEEDDEX.withdraw (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#719-727):
	-! msg.sender.call.value(amount)() /sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#725-727
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Parameter '_token' of SafeERC20.safeTransfer (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#277) is not in mixedCase
Parameter '_to' of SafeERC20.safeTransfer (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#277-279) is not in mixedCase
Parameter '_value' of SafeERC20.safeTransfer (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#279) is not in mixedCase
Parameter '_token' of SafeERC20.safeTransferFrom (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#345) is not in mixedCase
Parameter '_from' of SafeERC20.safeTransferFrom (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#345-346) is not in mixedCase
Parameter '_to' of SafeERC20.safeTransferFrom (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#347) is not in mixedCase
Parameter '_value' of SafeERC20.safeTransferFrom (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#347-349) is not in mixedCase
Parameter '_token' of SafeERC20.safeApprove (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#439) is not in mixedCase
Parameter '_spender' of SafeERC20.safeApprove (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#439) is not in mixedCase
Parameter '_value' of SafeERC20.safeApprove (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#439) is not in mixedCase
Function 'SEEDDEX.SEEDDEX' (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#545-593) is not in mixedCase
Constant 'SEEDDEX.FicAddress' (/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol#469-471) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0xcf25ebd54120cf2e4137fab0a91a7f7403a5debf.sol analyzed (4 contracts), 51 result(s) found
