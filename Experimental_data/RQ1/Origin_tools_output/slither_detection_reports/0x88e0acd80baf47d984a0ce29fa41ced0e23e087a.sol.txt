INFO:Slither:Compilation warnings/errors on /sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol:
/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol:88:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Owned() public {

    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol:158:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function _0xMonacoinToken() public onlyOwner{

    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol:103:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);

        ^-----------------------------------^
/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol:158:40: Warning: Modifier-style base constructor call without arguments.
    function _0xMonacoinToken() public onlyOwner{

                                       ^-------^
/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol:185:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 digest = keccak256(challengeNumber, msg.sender, nonce);

                         ^-------------------------------------------^
/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol:214:9: Warning: Invoking events without "emit" prefix is deprecated.
        Mint(msg.sender, reward_amount, epochCount, challengeNumber);

        ^----------------------------------------------------------^
/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol:315:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 digest = keccak256(challenge_number, msg.sender, nonce);

                         ^--------------------------------------------^
/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol:321:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 digest = keccak256(challenge_number, msg.sender, nonce);

                         ^--------------------------------------------^
/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol:348:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, to, tokens);

        ^------------------------------^
/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol:362:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, spender, tokens);

        ^-----------------------------------^
/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol:379:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(from, to, tokens);

        ^------------------------^
/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol:398:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, spender, tokens);

        ^-----------------------------------^
/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol:244:27: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        challengeNumber = block.blockhash(block.number - 1);

                          ^-------------^
/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol:314:43: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {

                                          ^----------------------^

INFO:Detectors:[93m
Contract locking ether found in /sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol:
	Contract _0xMonacoinToken has payable functions:
	 - fallback (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#827)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[92m
_0xMonacoinToken._BLOCKS_PER_READJUSTMENT should be constant (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#257)
_0xMonacoinToken._MAXIMUM_TARGET should be constant (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#269-273)
_0xMonacoinToken._MINIMUM_TARGET should be constant (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#259)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#497-499:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
_0xMonacoinToken.totalSupply (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#669-673) should be declared external
ERC20Interface.totalSupply (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#119) should be declared external
ERC20Interface.balanceOf (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#119-121) should be declared external
_0xMonacoinToken.balanceOf (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#683-687) should be declared external
ERC20Interface.allowance (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#121-123) should be declared external
_0xMonacoinToken.allowance (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#787-791) should be declared external
_0xMonacoinToken.transfer (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#703-713) should be declared external
ERC20Interface.transfer (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#123-125) should be declared external
ERC20Interface.approve (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#125-127) should be declared external
_0xMonacoinToken.approve (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#735-743) should be declared external
ERC20Interface.transferFrom (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#127-131) should be declared external
_0xMonacoinToken.transferFrom (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#765-773) should be declared external
ApproveAndCallFallBack.receiveApproval (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#151-157) should be declared external
Owned.transferOwnership (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#196-205) should be declared external
Owned.acceptOwnership (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#205-219) should be declared external
_0xMonacoinToken.mint (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#367-445) should be declared external
_0xMonacoinToken.getChallengeNumber (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#595-603) should be declared external
_0xMonacoinToken.getMiningDifficulty (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#611-615) should be declared external
_0xMonacoinToken.getMiningTarget (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#615-617) should be declared external
_0xMonacoinToken.getMintDigest (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#639-643) should be declared external
_0xMonacoinToken.checkMintSolution (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#645-665) should be declared external
_0xMonacoinToken.approveAndCall (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#805-823) should be declared external
_0xMonacoinToken.fallback (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#827) should be declared external
_0xMonacoinToken.transferAnyERC20Token (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol:
	- pragma solidity^0.4.18 (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Owned.Owned' (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#183-192) is not in mixedCase
Parameter '_newOwner' of Owned.transferOwnership (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#201) is not in mixedCase
Contract '_0xMonacoinToken' (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#229-831) is not in CapWords
Function '_0xMonacoinToken._0xMonacoinToken' (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#323-367) is not in mixedCase
Parameter 'challenge_digest' of _0xMonacoinToken.mint (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#367) is not in mixedCase
Function '_0xMonacoinToken._startNewMiningEpoch' (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#445-499) is not in mixedCase
Function '_0xMonacoinToken._reAdjustDifficulty' (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#507-593) is not in mixedCase
Parameter 'challenge_digest' of _0xMonacoinToken.getMintDigest (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#639) is not in mixedCase
Parameter 'challenge_number' of _0xMonacoinToken.getMintDigest (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#639) is not in mixedCase
Parameter 'challenge_digest' of _0xMonacoinToken.checkMintSolution (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#651) is not in mixedCase
Parameter 'challenge_number' of _0xMonacoinToken.checkMintSolution (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#651-653) is not in mixedCase
Variable '_0xMonacoinToken._totalSupply' (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#245-247) is not in mixedCase
Variable '_0xMonacoinToken._BLOCKS_PER_READJUSTMENT' (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#257) is not in mixedCase
Variable '_0xMonacoinToken._MINIMUM_TARGET' (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#259) is not in mixedCase
Variable '_0xMonacoinToken._MAXIMUM_TARGET' (/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol#269-273) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0x88e0acd80baf47d984a0ce29fa41ced0e23e087a.sol analyzed (6 contracts), 43 result(s) found
