INFO:Detectors:[91m
BasicToken.totalSupply_ (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#365-369) is never initialized. It is used in:
	- totalSupply (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#371-377)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
CaelumToken.manualUpgradePartialTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1281-1341) uses a dangerous strict equality:
	- require(bool,string)(ERC20(_token).balanceOf(msg.sender) == newBalance,Balance error.)
	- ERC20(allowedSwapAddress01).balanceOf(msg.sender) == 0 && ERC20(allowedSwapAddress02).balanceOf(msg.sender) == 0
	- ERC20(allowedSwapAddress01).balanceOf(msg.sender) == 0 && ERC20(allowedSwapAddress02).balanceOf(msg.sender) == 0
CaelumToken.manualUpgradePartialTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1281-1341) uses a dangerous strict equality:
	- require(bool,string)(ERC20(_token).balanceOf(msg.sender) == newBalance,Balance error.)
	- ERC20(allowedSwapAddress01).balanceOf(msg.sender) == 0 && ERC20(allowedSwapAddress02).balanceOf(msg.sender) == 0
	- ERC20(allowedSwapAddress01).balanceOf(msg.sender) == 0 && ERC20(allowedSwapAddress02).balanceOf(msg.sender) == 0
CaelumToken.manualUpgradeTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1219-1259) uses a dangerous strict equality:
	- require(bool)(ERC20(_token).balanceOf(msg.sender) == 0)
	- ERC20(allowedSwapAddress01).balanceOf(msg.sender) == 0 && ERC20(allowedSwapAddress02).balanceOf(msg.sender) == 0
	- ERC20(allowedSwapAddress01).balanceOf(msg.sender) == 0 && ERC20(allowedSwapAddress02).balanceOf(msg.sender) == 0
CaelumToken.manualUpgradePartialTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1281-1341) uses a dangerous strict equality:
	- require(bool,string)(ERC20(_token).balanceOf(msg.sender) == newBalance,Balance error.)
	- ERC20(allowedSwapAddress01).balanceOf(msg.sender) == 0 && ERC20(allowedSwapAddress02).balanceOf(msg.sender) == 0
	- ERC20(allowedSwapAddress01).balanceOf(msg.sender) == 0 && ERC20(allowedSwapAddress02).balanceOf(msg.sender) == 0
CaelumToken.manualUpgradeTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1219-1259) uses a dangerous strict equality:
	- require(bool)(ERC20(_token).balanceOf(msg.sender) == 0)
	- ERC20(allowedSwapAddress01).balanceOf(msg.sender) == 0 && ERC20(allowedSwapAddress02).balanceOf(msg.sender) == 0
	- ERC20(allowedSwapAddress01).balanceOf(msg.sender) == 0 && ERC20(allowedSwapAddress02).balanceOf(msg.sender) == 0
CaelumToken.upgradeTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1145-1197) uses a dangerous strict equality:
	- require(bool)(ERC20(_token).balanceOf(msg.sender) == 0)
	- ERC20(allowedSwapAddress01).balanceOf(msg.sender) == 0 && ERC20(allowedSwapAddress02).balanceOf(msg.sender) == 0
	- ERC20(allowedSwapAddress01).balanceOf(msg.sender) == 0 && ERC20(allowedSwapAddress02).balanceOf(msg.sender) == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in CaelumToken.declineManualUpgrade (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1377-1393):
	External calls:
	- require(bool)(ERC20(_token).transfer(_holder,manualSwaps[_holder])) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1379-1387)
	State variables written after the call(s):
	- manualSwaps (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1389)
Reentrancy in CaelumToken.manualUpgradePartialTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1281-1341):
	External calls:
	- require(bool)(amountToUpgrade <= ERC20(_token).allowance(msg.sender,this)) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1299-1303)
	- newBalance = ERC20(_token).balanceOf(msg.sender) - (amountToUpgrade) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1303-1307)
	- ERC20(_token).transferFrom(msg.sender,this,amountToUpgrade) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1307-1341)
	- require(bool,string)(ERC20(_token).balanceOf(msg.sender) == newBalance,Balance error.) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1309-1313)
	- ERC20(allowedSwapAddress01).balanceOf(msg.sender) == 0 && ERC20(allowedSwapAddress02).balanceOf(msg.sender) == 0 (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1319-1327)
	State variables written after the call(s):
	- hasSwapped (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1325-1327)
Reentrancy in CaelumToken.manualUpgradeTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1219-1259):
	External calls:
	- amountToUpgrade = ERC20(_token).balanceOf(msg.sender) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1231-1233)
	- require(bool)(amountToUpgrade <= ERC20(_token).allowance(msg.sender,this)) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1233-1235)
	- ERC20(_token).transferFrom(msg.sender,this,amountToUpgrade) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1235-1259)
	- require(bool)(ERC20(_token).balanceOf(msg.sender) == 0) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1235-1239)
	- ERC20(allowedSwapAddress01).balanceOf(msg.sender) == 0 && ERC20(allowedSwapAddress02).balanceOf(msg.sender) == 0 (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1239-1247)
	State variables written after the call(s):
	- hasSwapped (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1247)
Reentrancy in CaelumToken.upgradeTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1145-1197):
	External calls:
	- amountToUpgrade = ERC20(_token).balanceOf(msg.sender) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1167-1169)
	- require(bool)(amountToUpgrade <= ERC20(_token).allowance(msg.sender,this)) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1171-1173)
	- require(bool)(ERC20(_token).transferFrom(msg.sender,this,amountToUpgrade)) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1173-1175)
	- require(bool)(ERC20(_token).balanceOf(msg.sender) == 0) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1175)
	- ERC20(allowedSwapAddress01).balanceOf(msg.sender) == 0 && ERC20(allowedSwapAddress02).balanceOf(msg.sender) == 0 (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1187-1197)
	State variables written after the call(s):
	- hasSwapped (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1193-1197)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
CaelumToken.transferAnyERC20Token.tokens (local variable @ /sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol) shadows:
	- CaelumAcceptERC20.tokens (state variable @ /sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#837-839)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in CaelumToken.declineManualUpgrade (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1377-1393):
	External calls:
	- require(bool)(ERC20(_token).transfer(_holder,manualSwaps[_holder])) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1379-1387)
	State variables written after the call(s):
	- hasSwapped (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1391-1393)
	- tokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1387-1389)
Reentrancy in CaelumToken.manualUpgradePartialTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1281-1341):
	External calls:
	- require(bool)(amountToUpgrade <= ERC20(_token).allowance(msg.sender,this)) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1299-1303)
	- newBalance = ERC20(_token).balanceOf(msg.sender) - (amountToUpgrade) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1303-1307)
	- ERC20(_token).transferFrom(msg.sender,this,amountToUpgrade) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1307-1341)
	- require(bool,string)(ERC20(_token).balanceOf(msg.sender) == newBalance,Balance error.) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1309-1313)
	- ERC20(allowedSwapAddress01).balanceOf(msg.sender) == 0 && ERC20(allowedSwapAddress02).balanceOf(msg.sender) == 0 (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1319-1327)
	State variables written after the call(s):
	- manualSwaps (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1329-1331)
	- tokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1327-1329)
Reentrancy in CaelumToken.manualUpgradeTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1219-1259):
	External calls:
	- amountToUpgrade = ERC20(_token).balanceOf(msg.sender) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1231-1233)
	- require(bool)(amountToUpgrade <= ERC20(_token).allowance(msg.sender,this)) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1233-1235)
	- ERC20(_token).transferFrom(msg.sender,this,amountToUpgrade) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1235-1259)
	- require(bool)(ERC20(_token).balanceOf(msg.sender) == 0) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1235-1239)
	- ERC20(allowedSwapAddress01).balanceOf(msg.sender) == 0 && ERC20(allowedSwapAddress02).balanceOf(msg.sender) == 0 (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1239-1247)
	State variables written after the call(s):
	- manualSwaps (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1251-1257)
	- tokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1247-1251)
Reentrancy in CaelumToken.replaceLockedTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1405-1421):
	External calls:
	- amountLocked = getLockedTokens(_contract,_holder) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1407-1411)
	State variables written after the call(s):
	- balances (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1411-1413)
	- hasSwapped (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1421)
Reentrancy in CaelumToken.upgradeTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1145-1197):
	External calls:
	- amountToUpgrade = ERC20(_token).balanceOf(msg.sender) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1167-1169)
	- require(bool)(amountToUpgrade <= ERC20(_token).allowance(msg.sender,this)) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1171-1173)
	- require(bool)(ERC20(_token).transferFrom(msg.sender,this,amountToUpgrade)) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1173-1175)
	- require(bool)(ERC20(_token).balanceOf(msg.sender) == 0) (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1175)
	State variables written after the call(s):
	- balances (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1181)
	- tokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1175-1179)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
CaelumAcceptERC20.isValid (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#959-967) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp < endTime (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#961-963)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
BasicToken.totalSupply_ should be constant (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#365-369)
CaelumToken.allowedSwapAddress01 should be constant (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1113-1117)
CaelumToken.allowedSwapAddress02 should be constant (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1117-1119)
CaelumToken.decimals should be constant (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1109)
CaelumToken.isOnTestNet should be constant (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1107)
CaelumToken.name should be constant (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1109)
CaelumToken.swapClosed should be constant (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1107)
CaelumToken.symbol should be constant (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1107-1109)
CaelumToken.totalSupply should be constant (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1109-1113)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Ownable.renounceOwnership (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#211-217) should be declared external
Ownable.transferOwnership (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#229-235) should be declared external
BasicToken.totalSupply (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#371-377) should be declared external
ERC20Basic.totalSupply (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#301-303) should be declared external
BasicToken.balanceOf (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#427-429) should be declared external
ERC20Basic.balanceOf (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#303-307) should be declared external
ERC20Basic.transfer (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#307) should be declared external
BasicToken.transfer (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#391-411) should be declared external
StandardToken.allowance (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#543-551) should be declared external
ERC20.allowance (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#317-329) should be declared external
StandardToken.transferFrom (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#459-479) should be declared external
ERC20.transferFrom (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#329-337) should be declared external
ERC20.approve (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#337-347) should be declared external
StandardToken.approve (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#507-525) should be declared external
StandardToken.increaseApproval (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#579-595) should be declared external
StandardToken.decreaseApproval (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#634-657) should be declared external
ERC20Interface.totalSupply (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#661-665) should be declared external
ERC20Interface.balanceOf (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#669-672) should be declared external
ERC20Interface.allowance (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#675-677) should be declared external
ERC20Interface.transfer (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#679-685) should be declared external
ERC20Interface.approve (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#685-693) should be declared external
ERC20Interface.transferFrom (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#693-697) should be declared external
CaelumToken.setModifierContract (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol) should be declared external
InterfaceContracts.setModifierContract (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#715-725) should be declared external
InterfaceContracts._contract_voting (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#783-795) should be declared external
InterfaceContracts._contract_token (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#801-809) should be declared external
InterfaceContracts._contract_miner (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#809-811) should be declared external
CaelumAcceptERC20.listAcceptedTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#973-975) should be declared external
CaelumAcceptERC20.getTokenDetails (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#983-997) should be declared external
CaelumAcceptERC20.depositCollateral (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1005-1025) should be declared external
CaelumAcceptERC20.withdrawCollateral (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1047-1099) should be declared external
CaelumToken.upgradeTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1145-1197) should be declared external
CaelumToken.manualUpgradeTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1219-1259) should be declared external
CaelumToken.manualUpgradePartialTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1281-1341) should be declared external
CaelumToken.approveManualUpgrade (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1365-1371) should be declared external
CaelumToken.declineManualUpgrade (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1377-1393) should be declared external
CaelumToken.replaceLockedTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1405-1421) should be declared external
CaelumToken.rewardExternal (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1441-1455) should be declared external
CaelumToken.addToWhitelistExternal (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1473-1485) should be declared external
CaelumToken.getMiningRewardForPool (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1507-1515) should be declared external
CaelumToken.rewardsProofOfWork (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1521-1527) should be declared external
CaelumToken.rewardsMasternode (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1535-1541) should be declared external
CaelumToken.masternodeCounter (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1545-1555) should be declared external
CaelumToken.contractProgress (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1557-1579) should be declared external
CaelumToken.transferAnyERC20Token (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Parameter '_a' of SafeMath.mul (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#23) is not in mixedCase
Parameter '_b' of SafeMath.mul (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#23) is not in mixedCase
Parameter '_a' of SafeMath.div (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#57-59) is not in mixedCase
Parameter '_b' of SafeMath.div (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#59) is not in mixedCase
Parameter '_a' of SafeMath.sub (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#81-83) is not in mixedCase
Parameter '_b' of SafeMath.sub (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#83) is not in mixedCase
Parameter '_a' of SafeMath.add (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#103) is not in mixedCase
Parameter '_b' of SafeMath.add (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#103-107) is not in mixedCase
Parameter '_newOwner' of Ownable.transferOwnership (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#232-233) is not in mixedCase
Function 'Ownable._transferOwnership' (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#249-255) is not in mixedCase
Parameter '_newOwner' of Ownable._transferOwnership (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#249-251) is not in mixedCase
Function 'IRemoteFunctions._externalAddMasternode' (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#258-263) is not in mixedCase
Parameter '' of IRemoteFunctions._externalAddMasternode (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#261-263) is not in mixedCase
Function 'IRemoteFunctions._externalStopMasternode' (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#263-265) is not in mixedCase
Parameter '' of IRemoteFunctions._externalStopMasternode (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#265) is not in mixedCase
Parameter '' of IRemoteFunctions.isMasternodeOwner (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#265-267) is not in mixedCase
Parameter '' of IRemoteFunctions.userHasActiveNodes (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#269) is not in mixedCase
Function 'ICaelumMasternode._externalArrangeFlow' (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#271) is not in mixedCase
Parameter '' of ICaelumMasternode.getUserFromID (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#285) is not in mixedCase
Parameter '_owner' of BasicToken.balanceOf (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#427) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#391) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#391) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#543) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#545) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#461) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#461-462) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#463-465) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#507) is not in mixedCase
Parameter '_value' of StandardToken.approve (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#507-509) is not in mixedCase
Parameter '_spender' of StandardToken.increaseApproval (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#581) is not in mixedCase
Parameter '_addedValue' of StandardToken.increaseApproval (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#581-583) is not in mixedCase
Parameter '_spender' of StandardToken.decreaseApproval (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#635) is not in mixedCase
Parameter '_subtractedValue' of StandardToken.decreaseApproval (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#635-639) is not in mixedCase
Parameter '_t' of InterfaceContracts.setModifierContract (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#723) is not in mixedCase
Function 'InterfaceContracts._contract_voting' (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#783-795) is not in mixedCase
Function 'InterfaceContracts._contract_masternode' (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#795-801) is not in mixedCase
Function 'InterfaceContracts._contract_token' (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#801-809) is not in mixedCase
Function 'InterfaceContracts._contract_miner' (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#809-811) is not in mixedCase
Variable 'InterfaceContracts._internalMod' (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#715) is not in mixedCase
Struct 'CaelumAcceptERC20._whitelistTokens' (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#821-837) is not in CapWords
Parameter '_token' of CaelumAcceptERC20.addToWhitelist (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#895) is not in mixedCase
Parameter '_amount' of CaelumAcceptERC20.addToWhitelist (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#895) is not in mixedCase
Parameter '_ad' of CaelumAcceptERC20.isAcceptedToken (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#927) is not in mixedCase
Parameter '_ad' of CaelumAcceptERC20.getAcceptedTokenAmount (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#949) is not in mixedCase
Parameter '_ad' of CaelumAcceptERC20.isValid (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#959) is not in mixedCase
Parameter '_contract' of CaelumToken.setModifierContract (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol) is not in mixedCase
Parameter '_token' of CaelumToken.upgradeTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1146-1151) is not in mixedCase
Parameter '_token' of CaelumToken.manualUpgradeTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1219) is not in mixedCase
Parameter '_token' of CaelumToken.manualUpgradePartialTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1283) is not in mixedCase
Parameter '_amount' of CaelumToken.manualUpgradePartialTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1283) is not in mixedCase
Parameter '_contract' of CaelumToken.getLockedTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1349-1351) is not in mixedCase
Parameter '_holder' of CaelumToken.getLockedTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1351) is not in mixedCase
Parameter '_holder' of CaelumToken.approveManualUpgrade (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1367) is not in mixedCase
Parameter '_token' of CaelumToken.declineManualUpgrade (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1377-1378) is not in mixedCase
Parameter '_holder' of CaelumToken.declineManualUpgrade (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1379) is not in mixedCase
Parameter '_contract' of CaelumToken.replaceLockedTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1405-1407) is not in mixedCase
Parameter '_holder' of CaelumToken.replaceLockedTokens (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1407) is not in mixedCase
Parameter '_receiver' of CaelumToken.rewardExternal (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1441-1443) is not in mixedCase
Parameter '_amount' of CaelumToken.rewardExternal (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1445-1449) is not in mixedCase
Parameter '_token' of CaelumToken.addToWhitelistExternal (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1475-1477) is not in mixedCase
Parameter '_amount' of CaelumToken.addToWhitelistExternal (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1477) is not in mixedCase
Function 'CaelumToken.VoteModifierContract' (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol) is not in mixedCase
Parameter '_contract' of CaelumToken.VoteModifierContract (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
CaelumToken.isOnTestNet (/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol#1107) is never used in CaelumToken
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/sb/0xc71a7ecd96fef6e34a5c296bee9533f1deb0e3c1.sol analyzed (12 contracts), 125 result(s) found
