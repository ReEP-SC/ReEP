INFO:Slither:Compilation warnings/errors on /sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:817:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Ownable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:915:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Authorizable() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1365:9: Warning: Use of the "var" keyword is deprecated.
        var _allowance = allowed[_from][msg.sender];
        ^------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1409:68: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if ((_value != 0) && (allowed[msg.sender][_spender] != 0)) throw;
                                                                   ^---^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:937:28: Warning: This declaration shadows an existing declaration.
    function getAuthorizer(uint authorizerIndex) external constant returns(address) {
                           ^------------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:889:5: The shadowed declaration is here:
    mapping(address => uint) authorizerIndex;
    ^--------------------------------------^

/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1173:5: Warning: This declaration shadows a builtin symbol.
    function assert(bool assertion) internal {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1959:9: Warning: This declaration shadows an existing declaration.
        ERC20 token = ERC20(_token);
        ^---------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1709:5: The shadowed declaration is here:
    CBCToken public token = new CBCToken();
    ^------------------------------------^

/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:423:38: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x369fC7De8aEE87a167244EB10B87Eb3005780872'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
    address public MainSaleAddress = 0x369fc7de8aee87a167244eb10b87eb3005780872;
                                     ^----------------------------------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1025:15: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        rates[keccak256(_symbol)] = _rate;
              ^----------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1025:15: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        rates[keccak256(_symbol)] = _rate;
              ^----------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1027:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        RateUpdated(now, keccak256(_symbol), _rate);
                         ^----------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1027:26: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        RateUpdated(now, keccak256(_symbol), _rate);
                         ^----------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1027:9: Warning: Invoking events without "emit" prefix is deprecated.
        RateUpdated(now, keccak256(_symbol), _rate);
        ^-----------------------------------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1055:13: Warning: Invoking events without "emit" prefix is deprecated.
            RateUpdated(now, symbol, rate);
            ^----------------------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1075:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return rates[keccak256(_symbol)];
                     ^----------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1075:22: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        return rates[keccak256(_symbol)];
                     ^----------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1293:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);
        ^-------------------------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1381:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1415:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1507:9: Warning: Invoking events without "emit" prefix is deprecated.
        Mint(_to, _amount);
        ^----------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1527:9: Warning: Invoking events without "emit" prefix is deprecated.
        MintFinished();
        ^------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1567:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(_who, _value);
        ^----------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1569:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_who, address(0), _value);
        ^--------------------------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1779:9: Warning: Invoking events without "emit" prefix is deprecated.
        TokenSold(recipient, msg.value, tokens, rate);
        ^-------------------------------------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1815:9: Warning: Invoking events without "emit" prefix is deprecated.
        AuthorizedCreate(recipient, tokens);
        ^---------------------------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1825:9: Warning: Invoking events without "emit" prefix is deprecated.
        AuthorizedStartTrading();
        ^----------------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1845:9: Warning: Invoking events without "emit" prefix is deprecated.
        AuthorizedBurn(receiver, value);
        ^-----------------------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1943:9: Warning: Invoking events without "emit" prefix is deprecated.
        MainSaleClosed();
        ^--------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:853:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1225:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address owner, address spender) constant returns (uint);
    ^-------------------------------------------------------------------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1227:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address from, address to, uint value);
    ^----------------------------------------------------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1229:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address spender, uint value);
    ^--------------------------------------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1287:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint _value) onlyPayloadSize(2 * 32) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1309:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1363:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint _value) onlyPayloadSize(3 * 32) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1397:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1433:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1501:5: Warning: No visibility specified. Defaulting to "public". 
    function mint(address _to, uint _amount) onlyOwner canMint returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1523:5: Warning: No visibility specified. Defaulting to "public". 
    function finishMinting() onlyOwner returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1631:5: Warning: No visibility specified. Defaulting to "public". 
    function startTrading() onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1649:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint _value) hasStartedTrading {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1669:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint _value) hasStartedTrading {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:573:23: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
            percent = percent.add(5);
                      ^------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:621:33: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint256 differentTime = now.sub(investor.paymentTime).div(step);
                                ^---------------------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:621:33: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint256 differentTime = now.sub(investor.paymentTime).div(step);
                                ^-------------------------------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:623:36: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint256 differentPercent = investor.deposit.mul(percent).div(1000);
                                   ^---------------------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:623:36: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint256 differentPercent = investor.deposit.mul(percent).div(1000);
                                   ^-------------------------------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:625:26: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint256 payout = differentPercent.mul(differentTime).div(288);
                         ^---------------------------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:625:26: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint256 payout = differentPercent.mul(differentTime).div(288);
                         ^------------------------------------------^
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1105:5: Warning: Function state mutability can be restricted to pure
    function div(uint a, uint b) internal returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1141:5: Warning: Function state mutability can be restricted to pure
    function max64(uint64 a, uint64 b) internal constant returns (uint64) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1149:5: Warning: Function state mutability can be restricted to pure
    function min64(uint64 a, uint64 b) internal constant returns (uint64) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1157:5: Warning: Function state mutability can be restricted to pure
    function max256(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1165:5: Warning: Function state mutability can be restricted to pure
    function min256(uint256 a, uint256 b) internal constant returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol:1173:5: Warning: Function state mutability can be restricted to pure
    function assert(bool assertion) internal {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in SmartContractBank.fallback (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#780-849):
	External calls:
	- withdraw() (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#797)
	State variables written after the call(s):
	- countOfInvestors (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#803-811)
	- investors (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#811)
	- investors (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#813-817)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
ERC20Basic (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1283-1293) has incorrect ERC20 function interface(s):
	-transfer (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1289-1291)
ERC20 (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1303-1333) has incorrect ERC20 function interface(s):
	-transferFrom (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1309)
	-approve (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1311-1324)
BasicToken (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1337-1389) has incorrect ERC20 function interface(s):
	-transfer (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1363-1371)
StandardToken (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1403-1539) has incorrect ERC20 function interface(s):
	-transferFrom (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1423-1453)
	-approve (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1463-1501)
CBCToken (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1691) has incorrect ERC20 function interface(s):
	-transfer (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1691)
	-transferFrom (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1691)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
Reentrancy in InsuranceFund.fallback (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#285-327):
	External calls:
	- (deposit,withdrawals,investor.insured) = SCBContract.setInsured(msg.sender) (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#297-299)
	State variables written after the call(s):
	- investors (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#301)
Reentrancy in SmartContractBank.increasePercent (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#741-765):
	External calls:
	- CBCTokenContract.balanceOf(msg.sender) >= 10000000000000000000 (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#751-765)
	- MainSaleContract.authorizedBurnTokens(msg.sender,10000000000000000000) (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#757-759)
	State variables written after the call(s):
	- investors (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#763-765)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
MintableToken.totalSupply (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1565-1567) shadows:
	- ERC20Basic.totalSupply (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1284-1287)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variable-shadowing-from-abstract-contracts[0m
INFO:Detectors:[93m
percent in SmartContractBank.getPhasePercent (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#559) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[93m
MainSale.createTokens (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1863-1891) does not use the value returned by external calls:
	-token.mint(recipient,tokens) (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1882-1885)
MainSale.authorizedCreateTokens (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1923-1933) does not use the value returned by external calls:
	-token.mint(recipient,tokens) (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1929-1931)
MainSale.finishMinting (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol) does not use the value returned by external calls:
	-token.mint(multisigVault,restrictedTokens) (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol)
	-token.finishMinting() (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1265-1269) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Authorizable.getAuthorizer.authorizerIndex (local variable @ /sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#997) shadows:
	- Authorizable.authorizerIndex (state variable @ /sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#949)
MainSale.retrieveTokens.token (local variable @ /sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol) shadows:
	- MainSale.token (state variable @ /sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1811)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in InsuranceFund.fallback (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#285-327):
	External calls:
	- (deposit,withdrawals,investor.insured) = SCBContract.setInsured(msg.sender) (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#297-299)
	State variables written after the call(s):
	- countOfInvestors (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#299-301)
	- totalNotReceived (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#301)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
CBCToken.decimals should be constant (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1691)
CBCToken.name should be constant (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1691)
CBCToken.symbol should be constant (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1691)
ERC20Basic.totalSupply should be constant (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1284-1287)
SmartContractBank.CBCTokenAddress should be constant (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#437-445)
SmartContractBank.MainSaleAddress should be constant (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#445-451)
SmartContractBank.insurancePercent should be constant (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#421)
SmartContractBank.minimum should be constant (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#417)
SmartContractBank.ownerAddressOne should be constant (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#423-429)
SmartContractBank.ownerAddressTwo should be constant (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#429-431)
SmartContractBank.ownerPercent should be constant (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#419-421)
SmartContractBank.promotionAddress should be constant (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#431-435)
SmartContractBank.promotionPercent should be constant (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#421)
SmartContractBank.step should be constant (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#419)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1495-1497:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
InsuranceFund.setSCBAddress (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#121-133) should be declared external
InsuranceFund.setInfo (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#227-235) should be declared external
InsuranceFund.deleteInsured (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#243-260) should be declared external
InsuranceFund.beginOfPayments (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#269-279) should be declared external
SmartContractBank.setInsuranceFundAddress (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#489-503) should be declared external
SmartContractBank.setInsured (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#519-533) should be declared external
SmartContractBank.closeEntrance (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#538-545) should be declared external
Ownable.transferOwnership (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#889-900) should be declared external
ExchangeRate.updateRate (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1087-1101) should be declared external
ExchangeRate.updateRates (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1111-1141) should be declared external
ExchangeRate.getRate (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1150-1157) should be declared external
ERC20Basic.balanceOf (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1287-1289) should be declared external
BasicToken.balanceOf (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1381-1389) should be declared external
ERC20.allowance (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1305-1309) should be declared external
StandardToken.allowance (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1523-1539) should be declared external
ERC20.approve (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1311-1324) should be declared external
StandardToken.approve (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1463-1501) should be declared external
MintableToken.mint (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1589) should be declared external
MintableToken.finishMinting (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1589) should be declared external
MintableToken.burn (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1589) should be declared external
CBCToken.startTrading (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1691) should be declared external
MainSale.setAltDeposit (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1905-1911) should be declared external
MainSale.authorizedCreateTokens (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1923-1933) should be declared external
MainSale.authorizedStartTrading (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1933-1939) should be declared external
MainSale.authorizedBurnTokens (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1953-1961) should be declared external
MainSale.setHardCap (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1969-1975) should be declared external
MainSale.setStart (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol) should be declared external
MainSale.setMultisigVault (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol) should be declared external
MainSale.setExchangeRate (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol) should be declared external
MainSale.finishMinting (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol) should be declared external
MainSale.retrieveTokens (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Parameter '_SCBAddress' of InsuranceFund.setSCBAddress (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#123) is not in mixedCase
Parameter '_address' of InsuranceFund.privateSetInfo (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#147) is not in mixedCase
Parameter '_address' of InsuranceFund.setInfo (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#229) is not in mixedCase
Parameter '_address' of InsuranceFund.deleteInsured (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#248-251) is not in mixedCase
Variable 'InsuranceFund.SCBAddress' (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#87) is not in mixedCase
Variable 'InsuranceFund.SCBContract' (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#87) is not in mixedCase
Parameter '_insuranceFundAddress' of SmartContractBank.setInsuranceFundAddress (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#491) is not in mixedCase
Parameter '_address' of SmartContractBank.setInsured (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#519-521) is not in mixedCase
Parameter '_address' of SmartContractBank.getUserBalance (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#643) is not in mixedCase
Variable 'SmartContractBank.CBCTokenAddress' (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#437-445) is not in mixedCase
Variable 'SmartContractBank.MainSaleAddress' (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#445-451) is not in mixedCase
Variable 'SmartContractBank.IFContract' (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#451) is not in mixedCase
Variable 'SmartContractBank.CBCTokenContract' (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#451-461) is not in mixedCase
Variable 'SmartContractBank.MainSaleContract' (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#461) is not in mixedCase
Function 'Ownable.Ownable' (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#879) is not in mixedCase
Function 'Authorizable.Authorizable' (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#967-975) is not in mixedCase
Parameter '_addr' of Authorizable.isAuthorized (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#997) is not in mixedCase
Parameter '_addr' of Authorizable.addAuthorized (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#997) is not in mixedCase
Parameter '_symbol' of ExchangeRate.updateRate (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1091-1093) is not in mixedCase
Parameter '_rate' of ExchangeRate.updateRate (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1093) is not in mixedCase
Parameter '_symbol' of ExchangeRate.getRate (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1151-1152) is not in mixedCase
Parameter '_owner' of BasicToken.balanceOf (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1387-1389) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1363) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1363) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1523) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1524-1525) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1423) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1423-1425) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1425) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1463-1465) is not in mixedCase
Parameter '_value' of StandardToken.approve (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1465) is not in mixedCase
Parameter '_to' of MintableToken.mint (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1589) is not in mixedCase
Parameter '_amount' of MintableToken.mint (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1589) is not in mixedCase
Parameter '_who' of MintableToken.burn (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1589) is not in mixedCase
Parameter '_value' of MintableToken.burn (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1589) is not in mixedCase
Function 'MintableToken._burn' (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1589) is not in mixedCase
Parameter '_who' of MintableToken._burn (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1589) is not in mixedCase
Parameter '_value' of MintableToken._burn (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1589) is not in mixedCase
Parameter '_to' of CBCToken.transfer (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1691) is not in mixedCase
Parameter '_value' of CBCToken.transfer (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1691) is not in mixedCase
Parameter '_from' of CBCToken.transferFrom (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1691) is not in mixedCase
Parameter '_to' of CBCToken.transferFrom (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1691) is not in mixedCase
Parameter '_value' of CBCToken.transferFrom (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1691) is not in mixedCase
Parameter '_hardcap' of MainSale.setHardCap (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol#1969) is not in mixedCase
Parameter '_start' of MainSale.setStart (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol) is not in mixedCase
Parameter '_multisigVault' of MainSale.setMultisigVault (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol) is not in mixedCase
Parameter '_exchangeRate' of MainSale.setExchangeRate (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol) is not in mixedCase
Parameter '_token' of MainSale.retrieveTokens (/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0x861a174d677946d8c2bea8f9636a53fde1668215.sol analyzed (13 contracts), 98 result(s) found
