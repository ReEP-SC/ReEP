INFO:Slither:Compilation warnings/errors on /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol:
Warning: Only state variables can have a docstring. This will be disallowed in 0.7.0.
  --> /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol:44:14:
   |
44 |         uint id;
   |              ^^

Warning: Only state variables can have a docstring. This will be disallowed in 0.7.0.
  --> /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol:47:17:
   |
47 |         address proposer;
   |                 ^^^^^^^^

Warning: Only state variables can have a docstring. This will be disallowed in 0.7.0.
  --> /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol:50:14:
   |
50 |         uint eta;
   |              ^^^

Warning: Only state variables can have a docstring. This will be disallowed in 0.7.0.
  --> /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol:53:19:
   |
53 |         address[] targets;
   |                   ^^^^^^^

Warning: Only state variables can have a docstring. This will be disallowed in 0.7.0.
  --> /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol:56:16:
   |
56 |         uint[] values;
   |                ^^^^^^

Warning: Only state variables can have a docstring. This will be disallowed in 0.7.0.
  --> /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol:59:18:
   |
59 |         string[] signatures;
   |                  ^^^^^^^^^^

Warning: Only state variables can have a docstring. This will be disallowed in 0.7.0.
  --> /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol:62:17:
   |
62 |         bytes[] calldatas;
   |                 ^^^^^^^^^

Warning: Only state variables can have a docstring. This will be disallowed in 0.7.0.
  --> /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol:65:14:
   |
65 |         uint startBlock;
   |              ^^^^^^^^^^

Warning: Only state variables can have a docstring. This will be disallowed in 0.7.0.
  --> /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol:68:14:
   |
68 |         uint endBlock;
   |              ^^^^^^^^

Warning: Only state variables can have a docstring. This will be disallowed in 0.7.0.
  --> /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol:71:14:
   |
71 |         uint forVotes;
   |              ^^^^^^^^

Warning: Only state variables can have a docstring. This will be disallowed in 0.7.0.
  --> /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol:74:14:
   |
74 |         uint againstVotes;
   |              ^^^^^^^^^^^^

Warning: Only state variables can have a docstring. This will be disallowed in 0.7.0.
  --> /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol:77:14:
   |
77 |         bool canceled;
   |              ^^^^^^^^

Warning: Only state variables can have a docstring. This will be disallowed in 0.7.0.
  --> /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol:80:14:
   |
80 |         bool executed;
   |              ^^^^^^^^

Warning: Only state variables can have a docstring. This will be disallowed in 0.7.0.
  --> /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol:83:38:
   |
83 |         mapping (address => Receipt) receipts;
   |                                      ^^^^^^^^

Warning: Only state variables can have a docstring. This will be disallowed in 0.7.0.
  --> /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol:89:14:
   |
89 |         bool hasVoted;
   |              ^^^^^^^^

Warning: Only state variables can have a docstring. This will be disallowed in 0.7.0.
  --> /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol:92:14:
   |
92 |         bool support;
   |              ^^^^^^^

Warning: Only state variables can have a docstring. This will be disallowed in 0.7.0.
  --> /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol:95:16:
   |
95 |         uint96 votes;
   |                ^^^^^

Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing "SPDX-License-Identifier: <SPDX-License>" to each source file. Use "SPDX-License-Identifier: UNLICENSED" for non-open-source code. Please see https://spdx.org for more information.
--> /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol

Warning: Using ".value(...)" is deprecated. Use "{value: ...}" instead.
   --> /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol:210:13:
    |
210 |             timelock.executeTransaction.value(proposal.values[i])(proposal.targe ...
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


INFO:Detectors:[91m
GovernorAlpha.execute (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#207-219) sends eth to arbitrary user
	Dangerous calls:
	- timelock.executeTransaction.value(proposal.values[i])(proposal.targets[i],proposal.values[i],proposal.signatures[i],proposal.calldatas[i],proposal.eta) (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#212-217)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
GovernorAlpha.getChainId (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#335-337) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Reentrancy in GovernorAlpha._castVote (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#277-300):
	External calls:
	- require(bool,string)(state(proposalId) == ProposalState.Active,GovernorAlpha::_castVote: voting is closed) (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#278-279)
	- votes = bnsg.getPriorVotes(voter,proposal.startBlock) (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#287-289)
	State variables written after the call(s):
	- proposals (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#291-294)
	- proposals (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#295)
Reentrancy in GovernorAlpha.cancel (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#219-232):
	External calls:
	- state = state(proposalId) (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#220)
	- require(bool,string)(msg.sender == guardian || bnsg.getPriorVotes(proposal.proposer,sub256(block.number,1)) < proposalThreshold(),GovernorAlpha::cancel: proposer above threshold) (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#223-224)
	State variables written after the call(s):
	- proposals (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#224-227)
Reentrancy in GovernorAlpha.execute (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#207-219):
	External calls:
	- require(bool,string)(state(proposalId) == ProposalState.Queued,GovernorAlpha::execute: proposal can only be executed if it is queued) (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#208-210)
	State variables written after the call(s):
	- proposals (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#210)
Reentrancy in GovernorAlpha.propose (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#149-191):
	External calls:
	- require(bool,string)(bnsg.getPriorVotes(msg.sender,sub256(block.number,1)) > proposalThreshold(),GovernorAlpha::propose: proposer votes below proposal threshold) (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#150-151)
	- proposersLatestProposalState = state(latestProposalId) (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#158)
	State variables written after the call(s):
	- latestProposalIds (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#185-189)
	- proposalCount (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#170)
	- proposals (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#185)
Reentrancy in GovernorAlpha.queue (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#191-201):
	External calls:
	- require(bool,string)(state(proposalId) == ProposalState.Succeeded,GovernorAlpha::queue: proposal can only be queued if it is succeeded) (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#192-194)
	- eta = add256(block.timestamp,timelock.delay()) (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#194-195)
	State variables written after the call(s):
	- proposals (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#201)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
GovernorAlpha._queueOrRevert (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#201-207) does not use the value returned by external calls:
	-timelock.queueTransaction(target,value,signature,data,eta) (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#206-207)
GovernorAlpha.execute (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#207-219) does not use the value returned by external calls:
	-timelock.executeTransaction.value(proposal.values[i])(proposal.targets[i],proposal.values[i],proposal.signatures[i],proposal.calldatas[i],proposal.eta) (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#212-217)
GovernorAlpha.__queueSetTimelockPendingAdmin (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#306-311) does not use the value returned by external calls:
	-timelock.queueTransaction(address(timelock),0,setPendingAdmin(address),abi.encode(newPendingAdmin),eta) (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#310-311)
GovernorAlpha.__executeSetTimelockPendingAdmin (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#311-322) does not use the value returned by external calls:
	-timelock.executeTransaction(address(timelock),0,setPendingAdmin(address),abi.encode(newPendingAdmin),eta) (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#320-322)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
GovernorAlpha.cancel.state (local variable @ /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#220) shadows:
	- GovernorAlpha.state (function @ /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#242-266)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
GovernorAlpha.execute has external calls inside a loop:
	- timelock.executeTransaction.value(proposal.values[i])(proposal.targets[i],proposal.values[i],proposal.signatures[i],proposal.calldatas[i],proposal.eta) (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#212-217)
GovernorAlpha.cancel has external calls inside a loop:
	- timelock.cancelTransaction(proposal.targets[i],proposal.values[i],proposal.signatures[i],proposal.calldatas[i],proposal.eta) (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#230)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
GovernorAlpha._queueOrRevert (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#201-207) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(! timelock.queuedTransactions(keccak256(bytes)(abi.encode(target,value,signature,data,eta))),GovernorAlpha::_queueOrRevert: proposal action already queued at eta) (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#202-206)
GovernorAlpha.state (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#242-266) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= add256(proposal.eta,timelock.GRACE_PERIOD()) (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#262-266)
GovernorAlpha.add256 (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#323-332) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(c >= a,addition overflow) (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#327-328)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
GovernorAlpha.getChainId uses assembly (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#335-337)
	- /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#337
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Different versions of Solidity is used in /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol:
	- Version used: ['ABIEncoderV2', '^0.6.12']
	- /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#5-6 declares pragma solidity^0.6.12
	- /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#6-8 declares pragma experimentalABIEncoderV2
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
GovernorAlpha.setTimeLock (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#143-149) should be declared external
GovernorAlpha.propose (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#149-191) should be declared external
GovernorAlpha.queue (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#191-201) should be declared external
GovernorAlpha.execute (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#207-219) should be declared external
GovernorAlpha.cancel (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#219-232) should be declared external
GovernorAlpha.getActions (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#232-240) should be declared external
GovernorAlpha.getReceipt (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#240-241) should be declared external
GovernorAlpha.castVote (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#266-267) should be declared external
GovernorAlpha.castVoteBySig (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#267-277) should be declared external
GovernorAlpha.__acceptAdmin (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#300-305) should be declared external
GovernorAlpha.__abdicate (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#305-306) should be declared external
GovernorAlpha.__queueSetTimelockPendingAdmin (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#306-311) should be declared external
GovernorAlpha.__executeSetTimelockPendingAdmin (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#311-322) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol:
	- pragma solidity^0.6.12 (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#5-6): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'GovernorAlpha._queueOrRevert' (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#201-207) is not in mixedCase
Function 'GovernorAlpha._castVote' (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#277-300) is not in mixedCase
Function 'GovernorAlpha.__acceptAdmin' (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#300-305) is not in mixedCase
Function 'GovernorAlpha.__abdicate' (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#305-306) is not in mixedCase
Function 'GovernorAlpha.__queueSetTimelockPendingAdmin' (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#306-311) is not in mixedCase
Function 'GovernorAlpha.__executeSetTimelockPendingAdmin' (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#311-322) is not in mixedCase
Function 'TimelockInterface.GRACE_PERIOD' (/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol#338) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0xc2ed15668692942bfd8d6552fc08923c667564e7.sol analyzed (3 contracts), 40 result(s) found
