INFO:Detectors:[93m
LegacyIERC20 (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#221-224) has incorrect ERC20 function interface(s):
	-transfer (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#222-224)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
Reentrancy in SwissLock.distributeAdminRewards (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#261-324):
	External calls:
	- require(bool,string)(swissToken.transfer(organisation_wallet,200e18),Could not transfer to organisation_wallet!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#271)
	- require(bool,string)(swissToken.transfer(organisation_wallet,70e18),Could not transfer to organisation_wallet!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#272-273)
	- require(bool,string)(swissToken.transfer(admin_wallet_1,180e18),Could not transfer to admin_wallet_1!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#273-274)
	- require(bool,string)(swissToken.transfer(admin_wallet_2,180e18),Could not transfer to admin_wallet_2!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#274-275)
	- require(bool,string)(swissToken.transfer(admin_wallet_3,30e18),Could not transfer to admin_wallet_3!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#275-276)
	- require(bool,string)(swissToken.transfer(admin_wallet_4,30e18),Could not transfer to admin_wallet_4!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#276-277)
	- require(bool,string)(swissToken.transfer(admin_wallet_5,25e18),Could not transfer to admin_wallet_5!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#277-278)
	- require(bool,string)(swissToken.transfer(admin_wallet_6,3e18),Could not transfer to admin_wallet_6!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#278-282)
	- require(bool,string)(swissToken.transfer(admin_wallet_7,65e18),Could not transfer to admin_wallet_7!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#282-283)
	- require(bool,string)(swissToken.transfer(admin_wallet_8,65e18),Could not transfer to admin_wallet_8!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#283-284)
	- require(bool,string)(swissToken.transfer(organisation_wallet,50e18),Could not transfer to organisation_wallet!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#284-285)
	- require(bool,string)(swissToken.transfer(admin_wallet_1,180e18),Could not transfer to admin_wallet_1!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#285-286)
	- require(bool,string)(swissToken.transfer(admin_wallet_2,180e18),Could not transfer to admin_wallet_2!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#286-287)
	- require(bool,string)(swissToken.transfer(admin_wallet_3,30e18),Could not transfer to admin_wallet_3!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#287-288)
	- require(bool,string)(swissToken.transfer(admin_wallet_4,30e18),Could not transfer to admin_wallet_4!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#288-289)
	- require(bool,string)(swissToken.transfer(admin_wallet_5,25e18),Could not transfer to admin_wallet_5!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#289-290)
	- require(bool,string)(swissToken.transfer(admin_wallet_6,3e18),Could not transfer to admin_wallet_6!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#290-294)
	- require(bool,string)(swissToken.transfer(admin_wallet_7,65e18),Could not transfer to admin_wallet_7!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#294-295)
	- require(bool,string)(swissToken.transfer(admin_wallet_8,65e18),Could not transfer to admin_wallet_8!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#295-296)
	- require(bool,string)(swissToken.transfer(organisation_wallet,50e18),Could not transfer to organisation_wallet!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#296-297)
	- require(bool,string)(swissToken.transfer(admin_wallet_1,160e18),Could not transfer to admin_wallet_1!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#297-298)
	- require(bool,string)(swissToken.transfer(admin_wallet_2,160e18),Could not transfer to admin_wallet_2!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#298-299)
	- require(bool,string)(swissToken.transfer(admin_wallet_3,25e18),Could not transfer to admin_wallet_3!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#299-300)
	- require(bool,string)(swissToken.transfer(admin_wallet_4,25e18),Could not transfer to admin_wallet_4!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#300-301)
	- require(bool,string)(swissToken.transfer(admin_wallet_5,20e18),Could not transfer to admin_wallet_5!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#301-302)
	- require(bool,string)(swissToken.transfer(admin_wallet_6,2e18),Could not transfer to admin_wallet_6!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#302-306)
	- require(bool,string)(swissToken.transfer(admin_wallet_7,55e18),Could not transfer to admin_wallet_7!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#306-307)
	- require(bool,string)(swissToken.transfer(admin_wallet_8,55e18),Could not transfer to admin_wallet_8!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#307-308)
	- require(bool,string)(swissToken.transfer(organisation_wallet,40e18),Could not transfer to organisation_wallet!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#308-309)
	- require(bool,string)(swissToken.transfer(admin_wallet_1,150e18),Could not transfer to admin_wallet_1!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#309-310)
	- require(bool,string)(swissToken.transfer(admin_wallet_2,150e18),Could not transfer to admin_wallet_2!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#310-311)
	- require(bool,string)(swissToken.transfer(admin_wallet_3,20e18),Could not transfer to admin_wallet_3!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#311-312)
	- require(bool,string)(swissToken.transfer(admin_wallet_4,20e18),Could not transfer to admin_wallet_4!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#312-313)
	- require(bool,string)(swissToken.transfer(admin_wallet_5,10e18),Could not transfer to admin_wallet_5!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#313-314)
	- require(bool,string)(swissToken.transfer(admin_wallet_6,2e18),Could not transfer to admin_wallet_6!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#314-320)
	- require(bool,string)(swissToken.transfer(admin_wallet_7,40e18),Could not transfer to admin_wallet_7!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#322-323)
	- require(bool,string)(swissToken.transfer(admin_wallet_8,40e18),Could not transfer to admin_wallet_8!) (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#323)
	State variables written after the call(s):
	- lastClaimTime (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#323-324)
	- rewardTimes (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#324)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#209-216) should be declared external
SwissLock.distributeAdminRewards (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#261-324) should be declared external
SwissLock.transferAnyERC20Token (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#324-330) should be declared external
SwissLock.transferAnyOldERC20Token (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol:
	- pragma solidity0.6.11 (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#5-7): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '' of IERC20.transfer (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#218) is not in mixedCase
Parameter '_scope_0' of IERC20.transfer (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#218-219) is not in mixedCase
Parameter '' of LegacyIERC20.transfer (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#222) is not in mixedCase
Parameter '_scope_0' of LegacyIERC20.transfer (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#222) is not in mixedCase
Parameter '_tokenAddress' of SwissLock.transferAnyERC20Token (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#326) is not in mixedCase
Parameter '_to' of SwissLock.transferAnyERC20Token (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#326) is not in mixedCase
Parameter '_amount' of SwissLock.transferAnyERC20Token (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#326) is not in mixedCase
Parameter '_tokenAddress' of SwissLock.transferAnyOldERC20Token (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol) is not in mixedCase
Parameter '_to' of SwissLock.transferAnyOldERC20Token (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol) is not in mixedCase
Parameter '_amount' of SwissLock.transferAnyOldERC20Token (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol) is not in mixedCase
Constant 'SwissLock.organisation_wallet' (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#234) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SwissLock.admin_wallet_1' (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#235) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SwissLock.admin_wallet_2' (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#236) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SwissLock.admin_wallet_3' (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#237) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SwissLock.admin_wallet_4' (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#238) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SwissLock.admin_wallet_5' (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#239) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SwissLock.admin_wallet_6' (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#240) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SwissLock.admin_wallet_7' (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#243-245) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SwissLock.admin_wallet_8' (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#246-250) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'SwissLock.swissToken' (/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol#252-255) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0x10ee2f3666c4af429dd397cedd35f61b5808217c.sol analyzed (5 contracts), 27 result(s) found
