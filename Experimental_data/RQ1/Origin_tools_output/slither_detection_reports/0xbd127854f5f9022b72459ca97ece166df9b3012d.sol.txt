INFO:Slither:Compilation warnings/errors on /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1841:47: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(records[node].owner != msg.sender) throw;
                                              ^---^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1855:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ENS() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1943:9: Warning: Use of the "var" keyword is deprecated.
        var subnode = sha3(node, label);
        ^---------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:2019:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(ens.owner(node) != msg.sender) throw;
                                          ^---^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:2035:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function PublicResolver(AbstractENS ensAddr) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:2051:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1773:37: Warning: This declaration shadows an existing declaration.
    function setOwner(bytes32 node, address owner);
                                    ^-----------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1767:5: The shadowed declaration is here:
    function owner(bytes32 node) constant returns(address);
    ^-----------------------------------------------------^

/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1775:59: Warning: This declaration shadows an existing declaration.
    function setSubnodeOwner(bytes32 node, bytes32 label, address owner);
                                                          ^-----------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1767:5: The shadowed declaration is here:
    function owner(bytes32 node) constant returns(address);
    ^-----------------------------------------------------^

/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1777:40: Warning: This declaration shadows an existing declaration.
    function setResolver(bytes32 node, address resolver);
                                       ^--------------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1769:5: The shadowed declaration is here:
    function resolver(bytes32 node) constant returns(address);
    ^--------------------------------------------------------^

/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1779:35: Warning: This declaration shadows an existing declaration.
    function setTTL(bytes32 node, uint64 ttl);
                                  ^--------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1771:5: The shadowed declaration is here:
    function ttl(bytes32 node) constant returns(uint64);
    ^--------------------------------------------------^

/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1917:37: Warning: This declaration shadows an existing declaration.
    function setOwner(bytes32 node, address owner) only_owner(node) {
                                    ^-----------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1869:5: The shadowed declaration is here:
    function owner(bytes32 node) constant returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).

/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1941:59: Warning: This declaration shadows an existing declaration.
    function setSubnodeOwner(bytes32 node, bytes32 label, address owner) only_owner(node) {
                                                          ^-----------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1869:5: The shadowed declaration is here:
    function owner(bytes32 node) constant returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).

/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1963:40: Warning: This declaration shadows an existing declaration.
    function setResolver(bytes32 node, address resolver) only_owner(node) {
                                       ^--------------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1883:5: The shadowed declaration is here:
    function resolver(bytes32 node) constant returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).

/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1983:35: Warning: This declaration shadows an existing declaration.
    function setTTL(bytes32 node, uint64 ttl) only_owner(node) {
                                  ^--------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1897:5: The shadowed declaration is here:
    function ttl(bytes32 node) constant returns (uint64) {
    ^ (Relevant source part starts here and spans across multiple lines).

/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:2127:36: Warning: This declaration shadows an existing declaration.
    function setAddr(bytes32 node, address addr) only_owner(node) {
                                   ^----------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:2107:5: The shadowed declaration is here:
    function addr(bytes32 node) constant returns (address ret) {
    ^ (Relevant source part starts here and spans across multiple lines).

/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1857:17: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        records[0].owner = msg.sender;
                ^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1919:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(node, owner);
        ^-------------------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1943:23: Warning: "sha3" has been deprecated in favour of "keccak256"
        var subnode = sha3(node, label);
                      ^---------------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1943:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        var subnode = sha3(node, label);
                      ^---------------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1945:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewOwner(node, label, owner);
        ^--------------------------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1965:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewResolver(node, resolver);
        ^-------------------------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1985:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewTTL(node, ttl);
        ^---------------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:2617:17: Warning: Using contract member "call" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).call" instead.
        require(liability.call(abi.encodePacked(bytes4(0xd9ff764a), _demand))); // liability.demand(...)
                ^------------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:2623:17: Warning: Using contract member "call" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).call" instead.
        require(liability.call(abi.encodePacked(bytes4(0xd5056962), _offer))); // liability.offer(...)
                ^------------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:2719:70: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 subnode = keccak256(abi.encodePacked(lighthouseNode, keccak256(_name)));
                                                                     ^--------------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:2719:70: Warning: The provided argument of type string calldata is not implicitly convertible to expected type bytes memory.
        bytes32 subnode = keccak256(abi.encodePacked(lighthouseNode, keccak256(_name)));
                                                                     ^--------------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:2737:45: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        ens.setSubnodeOwner(lighthouseNode, keccak256(_name), this);
                                            ^--------------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:2737:45: Warning: The provided argument of type string calldata is not implicitly convertible to expected type bytes memory.
        ens.setSubnodeOwner(lighthouseNode, keccak256(_name), this);
                                            ^--------------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1767:5: Warning: No visibility specified. Defaulting to "public". 
    function owner(bytes32 node) constant returns(address);
    ^-----------------------------------------------------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1769:5: Warning: No visibility specified. Defaulting to "public". 
    function resolver(bytes32 node) constant returns(address);
    ^--------------------------------------------------------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1771:5: Warning: No visibility specified. Defaulting to "public". 
    function ttl(bytes32 node) constant returns(uint64);
    ^--------------------------------------------------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1773:5: Warning: No visibility specified. Defaulting to "public". 
    function setOwner(bytes32 node, address owner);
    ^---------------------------------------------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1775:5: Warning: No visibility specified. Defaulting to "public". 
    function setSubnodeOwner(bytes32 node, bytes32 label, address owner);
    ^-------------------------------------------------------------------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1777:5: Warning: No visibility specified. Defaulting to "public". 
    function setResolver(bytes32 node, address resolver);
    ^---------------------------------------------------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1779:5: Warning: No visibility specified. Defaulting to "public". 
    function setTTL(bytes32 node, uint64 ttl);
    ^----------------------------------------^
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1855:5: Warning: No visibility specified. Defaulting to "public". 
    function ENS() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1869:5: Warning: No visibility specified. Defaulting to "public". 
    function owner(bytes32 node) constant returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1883:5: Warning: No visibility specified. Defaulting to "public". 
    function resolver(bytes32 node) constant returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1897:5: Warning: No visibility specified. Defaulting to "public". 
    function ttl(bytes32 node) constant returns (uint64) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1917:5: Warning: No visibility specified. Defaulting to "public". 
    function setOwner(bytes32 node, address owner) only_owner(node) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1941:5: Warning: No visibility specified. Defaulting to "public". 
    function setSubnodeOwner(bytes32 node, bytes32 label, address owner) only_owner(node) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1963:5: Warning: No visibility specified. Defaulting to "public". 
    function setResolver(bytes32 node, address resolver) only_owner(node) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:1983:5: Warning: No visibility specified. Defaulting to "public". 
    function setTTL(bytes32 node, uint64 ttl) only_owner(node) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:2035:5: Warning: No visibility specified. Defaulting to "public". 
    function PublicResolver(AbstractENS ensAddr) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:2049:5: Warning: No visibility specified. Defaulting to "public". 
    function() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:2071:5: Warning: No visibility specified. Defaulting to "public". 
    function has(bytes32 node, bytes32 kind) constant returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:2089:5: Warning: No visibility specified. Defaulting to "public". 
    function supportsInterface(bytes4 interfaceID) constant returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:2107:5: Warning: No visibility specified. Defaulting to "public". 
    function addr(bytes32 node) constant returns (address ret) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:2127:5: Warning: No visibility specified. Defaulting to "public". 
    function setAddr(bytes32 node, address addr) only_owner(node) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:2149:5: Warning: No visibility specified. Defaulting to "public". 
    function content(bytes32 node) constant returns (bytes32 ret) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:2173:5: Warning: No visibility specified. Defaulting to "public". 
    function setContent(bytes32 node, bytes32 hash) only_owner(node) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:2519:5: Warning: No visibility specified. Defaulting to "public". 
    function wnFromGas(uint256 _gas) view returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:2089:5: Warning: Function state mutability can be restricted to pure
    function supportsInterface(bytes4 interfaceID) constant returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol:2455:5: Warning: Function state mutability can be restricted to pure
    function smma(uint256 _prePrice, uint256 _price) internal returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
LightContract.fallback (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1175-1185) uses delegatecall to a input-controlled function id
	require(bool)(lib.delegatecall(msg.data)) (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1181-1185)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#controlled-delegatecall[0m
INFO:Detectors:[91m
LighthouseAPI.members (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1785) is never initialized. It is used in:
	- membersLength (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1785-1789)
LighthouseAPI.balances (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1791-1795) is never initialized. It is used in:
	- quotaOf (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1819-1829)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
DutchAuction.setup (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1467-1495) uses a dangerous strict equality:
	- require(bool)(xrt.balanceOf(this) == MAX_TOKENS_SOLD)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in LiabilityFactory.createLiability (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2719-2797):
	External calls:
	- require(bool)(liability.call(abi.encodePacked(bytes4(0xd9ff764a),_demand))) (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2742-2743)
	- singletonHash(liability.demandHash()) (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2745-2747)
	- require(bool)(liability.call(abi.encodePacked(bytes4(0xd5056962),_offer))) (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2747-2755)
	- singletonHash(liability.offerHash()) (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2757)
	State variables written after the call(s):
	- isHashConsumed (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2757)
Reentrancy in DutchAuction.timedTransitions (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1389-1413):
	External calls:
	- finalizeAuction() (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1401)
	State variables written after the call(s):
	- stage (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1409-1413)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
ERC20Detailed.constructor.name (local variable @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1021-1022) shadows:
	- ERC20Detailed.name (function @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1037-1043)
ERC20Detailed.constructor.symbol (local variable @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1023) shadows:
	- ERC20Detailed.symbol (function @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1049-1057)
ERC20Detailed.constructor.decimals (local variable @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1023-1025) shadows:
	- ERC20Detailed.decimals (function @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1063-1071)
AbstractENS.setOwner.owner (local variable @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1897) shadows:
	- AbstractENS.owner (function @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1881-1883)
AbstractENS.setSubnodeOwner.owner (local variable @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1899-1905) shadows:
	- AbstractENS.owner (function @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1881-1883)
AbstractENS.setResolver.resolver (local variable @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1907) shadows:
	- AbstractENS.resolver (function @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1883-1891)
AbstractENS.setTTL.ttl (local variable @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1909) shadows:
	- AbstractENS.ttl (function @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1893)
ENS.setOwner.owner (local variable @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2053-2058) shadows:
	- ENS.owner (function @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1979-1985)
	- AbstractENS.owner (function @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1881-1883)
ENS.setSubnodeOwner.owner (local variable @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2081) shadows:
	- ENS.owner (function @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1979-1985)
	- AbstractENS.owner (function @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1881-1883)
ENS.setResolver.resolver (local variable @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2094-2099) shadows:
	- ENS.resolver (function @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1995-2005)
	- AbstractENS.resolver (function @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1883-1891)
ENS.setTTL.ttl (local variable @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2117-2119) shadows:
	- ENS.ttl (function @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2013-2019)
	- AbstractENS.ttl (function @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1893)
PublicResolver.setAddr.addr (local variable @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2271) shadows:
	- PublicResolver.addr (function @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2251-2263)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Reentrancy in LiabilityFactory.createLiability (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2719-2797):
	External calls:
	- require(bool)(liability.call(abi.encodePacked(bytes4(0xd9ff764a),_demand))) (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2742-2743)
	- singletonHash(liability.demandHash()) (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2745-2747)
	- require(bool)(liability.call(abi.encodePacked(bytes4(0xd5056962),_offer))) (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2747-2755)
	- singletonHash(liability.offerHash()) (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2757)
	- liability.lighthouseFee() > 0 (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2767-2785)
	- xrt.safeTransferFrom(liability.promisor(),tx.origin,liability.lighthouseFee()) (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2771-2785)
	- token = liability.token() (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2791)
	- liability.cost() > 0 (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2791-2797)
	- token.safeTransferFrom(liability.promisee(),liability,liability.cost()) (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2793-2797)
	- xrt.safeTransferFrom(liability.promisee(),liability,liability.validatorFee()) (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol)
	State variables written after the call(s):
	- gasUtilizing (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol)
	- totalGasUtilizing (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol)
Reentrancy in LiabilityFactory.createLighthouse (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol):
	External calls:
	- require(bool)(ens.resolver(subnode) == 0) (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol)
	State variables written after the call(s):
	- isLighthouse (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol)
Reentrancy in DutchAuction.finalizeAuction (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1743-1777):
	External calls:
	- require(bool)(xrt.transfer(ambix,MAX_TOKENS_SOLD - soldTokens)) (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1769-1771)
	- xrt.burn(MAX_TOKENS_SOLD - soldTokens) (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1775-1777)
	State variables written after the call(s):
	- endTime (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1777)
Reentrancy in DutchAuction.setup (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1467-1495):
	External calls:
	- require(bool)(xrt.balanceOf(this) == MAX_TOKENS_SOLD) (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1491)
	State variables written after the call(s):
	- stage (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1491-1493)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
LighthouseAPI.keepaliveBlock should be constant (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1803-1809)
LighthouseAPI.marker should be constant (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1809-1815)
LighthouseAPI.quota should be constant (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1815-1817)
RobotLiabilityAPI.cost should be constant (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1117-1123)
RobotLiabilityAPI.demandHash should be constant (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1129)
RobotLiabilityAPI.isFinalized should be constant (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1151)
RobotLiabilityAPI.isSuccess should be constant (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1147-1149)
RobotLiabilityAPI.lighthouse should be constant (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1142-1145)
RobotLiabilityAPI.lighthouseFee should be constant (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1123-1124)
RobotLiabilityAPI.model should be constant (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1113-1114)
RobotLiabilityAPI.objective should be constant (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1115)
RobotLiabilityAPI.offerHash should be constant (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1133-1135)
RobotLiabilityAPI.promisee should be constant (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1139)
RobotLiabilityAPI.promisor should be constant (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1136-1139)
RobotLiabilityAPI.result should be constant (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1115-1117)
RobotLiabilityAPI.validator should be constant (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1145-1147)
RobotLiabilityAPI.validatorFee should be constant (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1127-1129)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2081:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1963:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2161:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2143:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ERC20.totalSupply (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#271-275) should be declared external
IERC20.totalSupply (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#27-31) should be declared external
ERC20.balanceOf (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#289-291) should be declared external
IERC20.balanceOf (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#31-35) should be declared external
ERC20.allowance (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#323-339) should be declared external
IERC20.allowance (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#35-41) should be declared external
IERC20.transfer (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#41-45) should be declared external
ERC20.transfer (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#341-345) should be declared external
IERC20.approve (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#45-51) should be declared external
ERC20.approve (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#375-393) should be declared external
IERC20.transferFrom (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#51-61) should be declared external
ERC20.transferFrom (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#415-427) should be declared external
ERC20.increaseAllowance (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#464-475) should be declared external
ERC20.decreaseAllowance (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#515-541) should be declared external
MinterRole.addMinter (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#829-835) should be declared external
MinterRole.renounceMinter (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#837-848) should be declared external
ERC20Mintable.mint (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#901-917) should be declared external
ERC20Burnable.burn (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#937-943) should be declared external
ERC20Burnable.burnFrom (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#970-982) should be declared external
ERC20Detailed.name (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1037-1043) should be declared external
ERC20Detailed.symbol (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1049-1057) should be declared external
ERC20Detailed.decimals (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1063-1071) should be declared external
LightContract.fallback (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1175-1185) should be declared external
DutchAuction.setup (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1467-1495) should be declared external
DutchAuction.startAuction (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1499-1503) should be declared external
DutchAuction.calcCurrentTokenPrice (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1507-1519) should be declared external
DutchAuction.updateStage (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1533-1541) should be declared external
DutchAuction.bid (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1551-1647) should be declared external
DutchAuction.claimTokens (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1663-1699) should be declared external
LighthouseAPI.membersLength (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1785-1789) should be declared external
LighthouseAPI.quotaOf (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1819-1829) should be declared external
ENS.owner (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1979-1985) should be declared external
AbstractENS.owner (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1881-1883) should be declared external
ENS.resolver (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1995-2005) should be declared external
AbstractENS.resolver (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1883-1891) should be declared external
AbstractENS.ttl (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1893) should be declared external
ENS.ttl (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2013-2019) should be declared external
ENS.setOwner (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2049-2061) should be declared external
AbstractENS.setOwner (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1893-1897) should be declared external
AbstractENS.setSubnodeOwner (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1897-1905) should be declared external
ENS.setSubnodeOwner (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2073-2085) should be declared external
ENS.setResolver (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2091-2103) should be declared external
AbstractENS.setResolver (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1907) should be declared external
ENS.setTTL (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2117-2121) should be declared external
AbstractENS.setTTL (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1907-1909) should be declared external
PublicResolver.fallback (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2161) should be declared external
PublicResolver.has (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2175-2193) should be declared external
PublicResolver.supportsInterface (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2209-2229) should be declared external
PublicResolver.addr (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2251-2263) should be declared external
PublicResolver.setAddr (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2269-2279) should be declared external
PublicResolver.content (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2311-2315) should be declared external
PublicResolver.setContent (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2345-2357) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Low level call in LightContract.fallback (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1175-1185):
	-require(bool)(lib.delegatecall(msg.data)) /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1181-1185
Low level call in LiabilityFactory.createLiability (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2719-2797):
	-require(bool)(liability.call(abi.encodePacked(bytes4(0xd9ff764a),_demand))) /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2742-2743
	-require(bool)(liability.call(abi.encodePacked(bytes4(0xd5056962),_offer))) /sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2747-2755
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'ERC20._transfer' (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#547-561) is not in mixedCase
Function 'ERC20._mint' (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#583-599) is not in mixedCase
Function 'ERC20._burn' (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#607-619) is not in mixedCase
Function 'ERC20._burnFrom' (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#649-683) is not in mixedCase
Function 'MinterRole._addMinter' (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#849-863) is not in mixedCase
Function 'MinterRole._removeMinter' (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#865-875) is not in mixedCase
Parameter '_library' of LightContract. (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1171) is not in mixedCase
Parameter '_hash' of SingletonHash.singletonHash (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1239-1241) is not in mixedCase
Parameter '_wallet' of DutchAuction. (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1435) is not in mixedCase
Parameter '_ceiling' of DutchAuction. (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1435) is not in mixedCase
Parameter '_priceFactor' of DutchAuction. (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1435) is not in mixedCase
Parameter '_xrt' of DutchAuction.setup (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1467) is not in mixedCase
Parameter '_ambix' of DutchAuction.setup (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1467-1469) is not in mixedCase
Parameter '_member' of LighthouseAPI.quotaOf (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1819-1821) is not in mixedCase
Parameter '_minimalFreeze' of Lighthouse. (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1841) is not in mixedCase
Parameter '_timeoutBlocks' of Lighthouse. (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1841-1846) is not in mixedCase
Function 'ENS.ENS' (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1967-1975) is not in mixedCase
Modifier 'ENS.only_owner' (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1957-1963) is not in mixedCase
Function 'PublicResolver.PublicResolver' (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2149-2159) is not in mixedCase
Modifier 'PublicResolver.only_owner' (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2139-2145) is not in mixedCase
Parameter '_robot_liability_lib' of LiabilityFactory. (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2521-2523) is not in mixedCase
Parameter '_lighthouse_lib' of LiabilityFactory. (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2523-2525) is not in mixedCase
Parameter '_auction' of LiabilityFactory. (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2529) is not in mixedCase
Parameter '_xrt' of LiabilityFactory. (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2529-2531) is not in mixedCase
Parameter '_ens' of LiabilityFactory. (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2531) is not in mixedCase
Parameter '_prePrice' of LiabilityFactory.smma (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2625-2629) is not in mixedCase
Parameter '_price' of LiabilityFactory.smma (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2629) is not in mixedCase
Parameter '_gas' of LiabilityFactory.wnFromGas (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2662-2663) is not in mixedCase
Parameter '_demand' of LiabilityFactory.createLiability (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2719) is not in mixedCase
Parameter '_offer' of LiabilityFactory.createLiability (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2719-2721) is not in mixedCase
Parameter '_minimalFreeze' of LiabilityFactory.createLighthouse (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol) is not in mixedCase
Parameter '_timeoutBlocks' of LiabilityFactory.createLighthouse (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol) is not in mixedCase
Parameter '_name' of LiabilityFactory.createLighthouse (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol) is not in mixedCase
Parameter '_gas' of LiabilityFactory.liabilityFinalized (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol) is not in mixedCase
Constant 'LiabilityFactory.gasEpoch' (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2617) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'LiabilityFactory.smmaPeriod' (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#2635-2637) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
LighthouseAPI.indexOf (/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol#1789-1791) is never used in Lighthouse
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/sb/0xbd127854f5f9022b72459ca97ece166df9b3012d.sol analyzed (21 contracts), 118 result(s) found
