INFO:Detectors:[91m
Reentrancy in Marketplace.buy (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#561-613):
	External calls:
	- require(bool,string)(item.proxy == tub.lad(_cup),The owner must stay the same) (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#569)
	- (cdpPrice,feeAmount) = getCdpPrice(_cup) (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#573-577)
	- DSProxyInterface(item.proxy).execute(marketplaceProxy,abi.encodeWithSignature(give(bytes32,address),_cup,_newOwner)) (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#591-603)
	External calls sending eth:
	- item.owner.transfer(sub(cdpPrice,feeAmount)) (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#603-605)
	State variables written after the call(s):
	- items (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#613)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
TokenInterface (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#301-337) has incorrect ERC20 function interface(s):
	-approve (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#313-319)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[93m
Reentrancy in Marketplace.buy (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#561-613):
	External calls:
	- require(bool,string)(item.proxy == tub.lad(_cup),The owner must stay the same) (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#569)
	- (cdpPrice,feeAmount) = getCdpPrice(_cup) (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#573-577)
	State variables written after the call(s):
	- items (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#589)
Reentrancy in Marketplace.putOnSale (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#495-549):
	External calls:
	- require(bool,string)(isOwner(msg.sender,_cup),msg.sender must be proxy which owns the cup) (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#499-505)
	- require(bool,string)(tub.ink(_cup) > 0 && tub.tab(_cup) > 0,must have collateral and debt to put on sale) (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#515-525)
	- owner = address(uint160(DSProxyInterface(msg.sender).owner())) (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#527-531)
	State variables written after the call(s):
	- items (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#531-539)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
Marketplace.buy (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#561-613) does not use the value returned by external calls:
	-DSProxyInterface(item.proxy).execute(marketplaceProxy,abi.encodeWithSignature(give(bytes32,address),_cup,_newOwner)) (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#591-603)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Marketplace.putOnSale.owner (local variable @ /sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#527-531) shadows:
	- DSAuth.owner (state variable @ /sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#229-231)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Marketplace.getItemsOnSale has external calls inside a loop:
	- tub.lad(itemsArr[i]) != address(0) (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#727-729)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in Marketplace.buy (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#561-613):
	External calls:
	- require(bool,string)(item.proxy == tub.lad(_cup),The owner must stay the same) (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#569)
	- (cdpPrice,feeAmount) = getCdpPrice(_cup) (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#573-577)
	- DSProxyInterface(item.proxy).execute(marketplaceProxy,abi.encodeWithSignature(give(bytes32,address),_cup,_newOwner)) (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#591-603)
	External calls sending eth:
	- item.owner.transfer(sub(cdpPrice,feeAmount)) (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#603-605)
	State variables written after the call(s):
	- itemPos (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#613)
	- itemsArr (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#613)
Reentrancy in Marketplace.cancel (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#617-627):
	External calls:
	- require(bool,string)(isOwner(msg.sender,_cup),msg.sender must proxy which owns the cup) (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#619-621)
	State variables written after the call(s):
	- itemPos (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#625-627)
	- items (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#625-627)
	- itemsArr (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#625-627)
Reentrancy in Marketplace.putOnSale (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#495-549):
	External calls:
	- require(bool,string)(isOwner(msg.sender,_cup),msg.sender must be proxy which owns the cup) (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#499-505)
	- require(bool,string)(tub.ink(_cup) > 0 && tub.tab(_cup) > 0,must have collateral and debt to put on sale) (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#515-525)
	- owner = address(uint160(DSProxyInterface(msg.sender).owner())) (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#527-531)
	State variables written after the call(s):
	- itemPos (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#539-543)
	- itemsArr (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#539)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
Marketplace.fee should be constant (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#453)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
DSProxyInterface.execute (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#17-21) should be declared external
DSProxyInterface.execute (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#21-25) should be declared external
DSProxyInterface.setCache (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#25-29) should be declared external
DSProxyInterface.owner (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#29-35) should be declared external
ProxyRegistryInterface.proxies (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#37-39) should be declared external
ProxyRegistryInterface.build (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#39-47) should be declared external
DSAuthority.canCall (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#209-217) should be declared external
DSAuth.setOwner (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#245-257) should be declared external
DSAuth.setAuthority (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#257-271) should be declared external
TokenInterface.allowance (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#301-305) should be declared external
TokenInterface.balanceOf (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#305-313) should be declared external
TokenInterface.approve (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#313-319) should be declared external
TokenInterface.transfer (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#319-321) should be declared external
TokenInterface.transferFrom (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#321-329) should be declared external
TokenInterface.deposit (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#329-337) should be declared external
TokenInterface.withdraw (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#337) should be declared external
PipInterface.read (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#341-343) should be declared external
PepInterface.peek (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#345-349) should be declared external
VoxInterface.par (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#351-352) should be declared external
TubInterface.open (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#357-359) should be declared external
TubInterface.join (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#359-361) should be declared external
TubInterface.exit (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#361) should be declared external
TubInterface.lock (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#361-363) should be declared external
TubInterface.free (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#363-365) should be declared external
TubInterface.draw (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#365-367) should be declared external
TubInterface.wipe (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#367-369) should be declared external
TubInterface.give (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#369) should be declared external
TubInterface.shut (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#371) should be declared external
TubInterface.bite (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#371-373) should be declared external
TubInterface.cups (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#373-377) should be declared external
TubInterface.gem (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#377-379) should be declared external
TubInterface.gov (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#379-381) should be declared external
TubInterface.skr (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#381-383) should be declared external
TubInterface.sai (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#383-385) should be declared external
TubInterface.vox (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#385-387) should be declared external
TubInterface.ask (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#388-389) should be declared external
TubInterface.mat (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#389-391) should be declared external
TubInterface.chi (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#392-395) should be declared external
TubInterface.ink (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#395) should be declared external
TubInterface.tab (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#401-403) should be declared external
TubInterface.rap (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#403) should be declared external
TubInterface.per (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#403-405) should be declared external
TubInterface.pip (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#406-411) should be declared external
TubInterface.pep (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#411-415) should be declared external
TubInterface.tag (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#415-421) should be declared external
TubInterface.drip (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#423) should be declared external
TubInterface.lad (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#423-425) should be declared external
Marketplace.putOnSale (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#495-549) should be declared external
Marketplace.buy (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#561-613) should be declared external
Marketplace.cancel (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#617-627) should be declared external
Marketplace.withdraw (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#627-629) should be declared external
Marketplace.getItemsOnSale (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#709-733) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol:
	- pragma solidity^0.5.0 (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#9-15): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '' of ProxyRegistryInterface.build (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#42-45) is not in mixedCase
Parameter '' of TokenInterface.allowance (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#303) is not in mixedCase
Parameter '_scope_0' of TokenInterface.allowance (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#303) is not in mixedCase
Parameter '' of TokenInterface.balanceOf (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#310-311) is not in mixedCase
Parameter '' of TokenInterface.approve (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#313) is not in mixedCase
Parameter '_scope_0' of TokenInterface.approve (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#313) is not in mixedCase
Parameter '' of TokenInterface.transfer (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#321) is not in mixedCase
Parameter '_scope_0' of TokenInterface.transfer (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#321) is not in mixedCase
Parameter '' of TokenInterface.transferFrom (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#327) is not in mixedCase
Parameter '_scope_0' of TokenInterface.transferFrom (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#327-329) is not in mixedCase
Parameter '_scope_1' of TokenInterface.transferFrom (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#329) is not in mixedCase
Parameter '' of TokenInterface.withdraw (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#337) is not in mixedCase
Parameter '' of TubInterface.join (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#361) is not in mixedCase
Parameter '' of TubInterface.exit (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#361) is not in mixedCase
Parameter '' of TubInterface.lock (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#363) is not in mixedCase
Parameter '_scope_0' of TubInterface.lock (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#363) is not in mixedCase
Parameter '' of TubInterface.free (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#363-365) is not in mixedCase
Parameter '_scope_0' of TubInterface.free (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#365) is not in mixedCase
Parameter '' of TubInterface.draw (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#365) is not in mixedCase
Parameter '_scope_0' of TubInterface.draw (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#365-367) is not in mixedCase
Parameter '' of TubInterface.wipe (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#367) is not in mixedCase
Parameter '_scope_0' of TubInterface.wipe (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#367) is not in mixedCase
Parameter '' of TubInterface.give (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#369) is not in mixedCase
Parameter '_scope_0' of TubInterface.give (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#369) is not in mixedCase
Parameter '' of TubInterface.shut (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#371) is not in mixedCase
Parameter '' of TubInterface.bite (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#373) is not in mixedCase
Parameter '' of TubInterface.cups (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#373-375) is not in mixedCase
Parameter '' of TubInterface.ask (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#389) is not in mixedCase
Parameter '' of TubInterface.ink (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#395) is not in mixedCase
Parameter '' of TubInterface.tab (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#403) is not in mixedCase
Parameter '' of TubInterface.rap (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#403) is not in mixedCase
Parameter '_marketplaceProxy' of Marketplace. (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#483-485) is not in mixedCase
Parameter '_cup' of Marketplace.putOnSale (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#495) is not in mixedCase
Parameter '_discount' of Marketplace.putOnSale (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#495-499) is not in mixedCase
Parameter '_cup' of Marketplace.buy (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#561) is not in mixedCase
Parameter '_newOwner' of Marketplace.buy (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#561-563) is not in mixedCase
Parameter '_cup' of Marketplace.cancel (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#617) is not in mixedCase
Parameter '_cup' of Marketplace.getCdpPrice (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol#649) is not in mixedCase
Parameter '_cup' of Marketplace.isOnSale (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol) is not in mixedCase
Parameter '_cup' of Marketplace.removeItem (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol) is not in mixedCase
Parameter '_owner' of Marketplace.isOwner (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol) is not in mixedCase
Parameter '_cup' of Marketplace.isOwner (/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0xa1a445d1d8f97cbf380e98759230fcc0f2e23fc1.sol analyzed (12 contracts), 106 result(s) found
