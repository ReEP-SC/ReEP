INFO:Slither:Compilation warnings/errors on /sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol:
/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol:305:5: Warning: Functions in interfaces should be declared external.
    function addVersion(string _contractName, string version, address implementation) public;
    ^---------------------------------------------------------------------------------------^
/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol:313:5: Warning: Functions in interfaces should be declared external.
    function getVersion(string _contractName, string version) public view returns (address);
    ^--------------------------------------------------------------------------------------^
/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol:447:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        PROXY_STORAGE_CONTRACT.setBool(keccak256(_isCampaignValidated, conversionHandler), true);
                                       ^------------------------------------------------^
/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol:448:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        PROXY_STORAGE_CONTRACT.setBool(keccak256(_isCampaignValidated, logicHandler), true);
                                       ^-------------------------------------------^
/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol:449:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        PROXY_STORAGE_CONTRACT.setBool(keccak256(_isCampaignValidated, purchasesHandler), true);
                                       ^-----------------------------------------------^
/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol:450:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        PROXY_STORAGE_CONTRACT.setBool(keccak256(_isCampaignValidated,campaign), true);
                                       ^--------------------------------------^
/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol:451:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        PROXY_STORAGE_CONTRACT.setString(keccak256(_campaign2NonSingletonHash,campaign), nonSingletonHash);
                                         ^--------------------------------------------^
/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol:470:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        PROXY_STORAGE_CONTRACT.setBool(keccak256(_isCampaignValidated,campaign), true);
                                       ^--------------------------------------^
/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol:471:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        PROXY_STORAGE_CONTRACT.setBool(keccak256(_isCampaignValidated,donationConversionHandler), true);
                                       ^-------------------------------------------------------^
/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol:472:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        PROXY_STORAGE_CONTRACT.setBool(keccak256(_isCampaignValidated,donationLogicHandler), true);
                                       ^--------------------------------------------------^
/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol:474:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        PROXY_STORAGE_CONTRACT.setString(keccak256(_campaign2NonSingletonHash,campaign), nonSingletonHash);
                                         ^--------------------------------------------^
/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol:486:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        PROXY_STORAGE_CONTRACT.setBool(keccak256(_isCampaignValidated,campaign), true);
                                       ^--------------------------------------^
/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol:487:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        PROXY_STORAGE_CONTRACT.setString(keccak256(_campaign2NonSingletonHash,campaign), nonSingletonHash);
                                         ^--------------------------------------------^
/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol:499:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 hashKey = keccak256(_isCampaignValidated, campaign);
                          ^---------------------------------------^
/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol:508:49: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return PROXY_STORAGE_CONTRACT.getString(keccak256(_campaign2NonSingletonHash, campaign));
                                                ^---------------------------------------------^
/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol:379:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function initialize(address sender) public payable {
                        ^------------^

INFO:Detectors:[91m
UpgradeabilityStorage.registry (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#360-362) is never initialized. It is used in:
	- initialize (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#379-384)
UpgradeabilityStorage._implementation (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#363-365) is never initialized. It is used in:
	- implementation (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#369-374)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
Contract locking ether found in /sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol:
	Contract TwoKeyCampaignValidator has payable functions:
	 - initialize (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#379-384)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[92m
ITwoKeyCampaign.conversionHandler should be constant (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#110-112)
ITwoKeyCampaign.logicHandler should be constant (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#109-110)
ITwoKeyCampaignPublicAddresses.contractor should be constant (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#116)
ITwoKeyCampaignPublicAddresses.moderator should be constant (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#117)
ITwoKeyCampaignPublicAddresses.twoKeySingletonesRegistry should be constant (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#115-116)
ITwoKeyConversionHandler.isFiatConversionAutomaticallyApproved should be constant (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#123-124)
ITwoKeyConversionHandler.twoKeyPurchasesHandler should be constant (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#124-126)
ITwoKeyDonationCampaign.logicHandler should be constant (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#174-175)
ITwoKeyDonationCampaignFetchAddresses.twoKeyDonationCampaign should be constant (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#195-197)
ITwoKeyDonationCampaignFetchAddresses.twoKeyDonationConversionHandler should be constant (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#194-195)
UpgradeabilityStorage._implementation should be constant (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#363-365)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
IGetImplementation.implementation (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#8-14) should be declared external
ITwoKeyCampaign.getNumberOfUsersToContractor (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#63-70) should be declared external
ITwoKeyCampaign.getReceivedFrom (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#70-77) should be declared external
ITwoKeyCampaign.balanceOf (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#77-84) should be declared external
ITwoKeyCampaign.getReferrerCut (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#84-91) should be declared external
ITwoKeyCampaign.getReferrerPlasmaBalance (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#91-98) should be declared external
ITwoKeyCampaign.updateReferrerPlasmaBalance (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#98-104) should be declared external
ITwoKeyCampaign.updateModeratorRewards (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#104-109) should be declared external
ITwoKeyCampaignPublicAddresses.publicLinkKeyOf (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#118-121) should be declared external
ITwoKeyConversionHandler.supportForCreateConversion (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#126-137) should be declared external
ITwoKeyConversionHandler.executeConversion (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#137-143) should be declared external
ITwoKeyConversionHandler.getConverterPurchasesStats (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#151-159) should be declared external
ITwoKeyConversionHandler.getStateForConverter (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#159-166) should be declared external
ITwoKeyConversionHandler.getMainCampaignContractAddress (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#166-172) should be declared external
ITwoKeyDonationCampaign.buyTokensForModeratorRewards (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#175-180) should be declared external
ITwoKeyDonationCampaign.buyTokensAndDistributeReferrerRewards (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#180-188) should be declared external
ITwoKeyDonationCampaign.updateReferrerPlasmaBalance (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#188-189) should be declared external
ITwoKeyDonationCampaign.updateContractorProceeds (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#189-190) should be declared external
ITwoKeyDonationCampaign.sendBackEthWhenConversionCancelledOrRejected (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#190-193) should be declared external
ITwoKeyEventSourceEvents.ethereumOf (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#200-201) should be declared external
ITwoKeyEventSourceEvents.plasmaOf (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#201-203) should be declared external
ITwoKeyEventSourceEvents.emitHandleChangedEvent (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#258-265) should be declared external
ITwoKeyMaintainersRegistry.checkIsAddressMaintainer (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#268-269) should be declared external
ITwoKeyMaintainersRegistry.checkIsAddressCoreDev (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#269-271) should be declared external
ITwoKeyMaintainersRegistry.addMaintainers (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#271-272) should be declared external
ITwoKeyMaintainersRegistry.addCoreDevs (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#272-273) should be declared external
ITwoKeyMaintainersRegistry.removeMaintainers (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#273-274) should be declared external
ITwoKeyMaintainersRegistry.removeCoreDevs (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#274-277) should be declared external
ITwoKeySingletoneRegistryFetchAddress.getContractProxyAddress (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#278-279) should be declared external
ITwoKeySingletoneRegistryFetchAddress.getNonUpgradableContractAddress (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#279-280) should be declared external
ITwoKeySingletoneRegistryFetchAddress.getLatestCampaignApprovedVersion (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#280-283) should be declared external
ITwoKeySingletonesRegistry.addVersion (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#305-307) should be declared external
ITwoKeySingletonesRegistry.getVersion (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#313-316) should be declared external
UpgradeabilityStorage.implementation (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#369-374) should be declared external
Upgradeable.initialize (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#379-384) should be declared external
TwoKeyCampaignValidator.setInitialParams (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#409-423) should be declared external
TwoKeyCampaignValidator.validateAcquisitionCampaign (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#435-456) should be declared external
TwoKeyCampaignValidator.validateDonationCampaign (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#461-479) should be declared external
TwoKeyCampaignValidator.validateCPCCampaign (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#479-494) should be declared external
TwoKeyCampaignValidator.isCampaignValidated (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#498-503) should be declared external
TwoKeyCampaignValidator.campaign2NonSingletonHash (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#507-511) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol:
	- pragma solidity^0.4.13 (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#5-7): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_username_walletName' of ITwoKeyEventSourceEvents.userRegistered (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#247-248) is not in mixedCase
Variable 'ITwoKeySingletonUtils.TWO_KEY_SINGLETON_REGISTRY' (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#322-324) is not in mixedCase
Variable 'UpgradeabilityStorage._implementation' (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#363-365) is not in mixedCase
Parameter '_twoKeySingletoneRegistry' of TwoKeyCampaignValidator.setInitialParams (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#410-411) is not in mixedCase
Parameter '_proxyStorage' of TwoKeyCampaignValidator.setInitialParams (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#411-412) is not in mixedCase
Constant 'TwoKeyCampaignValidator._isCampaignValidated' (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#389-390) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TwoKeyCampaignValidator._campaign2NonSingletonHash' (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#390-392) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TwoKeyCampaignValidator._twoKeyFactory' (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#395-396) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TwoKeyCampaignValidator._twoKeyEventSource' (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#396-399) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'TwoKeyCampaignValidator.PROXY_STORAGE_CONTRACT' (/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol#402-404) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0xaae9c5f1731922e9e6347377abe3349854f0ca75.sol analyzed (16 contracts), 56 result(s) found
