INFO:Slither:Compilation warnings/errors on /sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:73:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:83:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:139:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function token(
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:169:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:171:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:221:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:223:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:225:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:245:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;     // Prevents accidental sending of ether
        ^---^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:285:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function StellarClassic() token (initialSupply, tokenName, decimalUnits, tokenSymbol) {}
    ^--------------------------------------------------------------------------------------^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:291:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:293:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:295:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[msg.sender]) throw;                // Check if frozen
                                       ^---^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:313:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (frozenAccount[_from]) throw;                        // Check if frozen
                                  ^---^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:315:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:317:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:319:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance
                                                   ^---^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:373:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[this] < amount) throw;               // checks if it has enough to sell
                                      ^---^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:387:46: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < amount ) throw;        // checks if the sender has enough to sell
                                             ^---^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:395:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;                                         // to do this last to avoid recursion attacks
            ^---^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:177:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:233:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:301:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:327:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:341:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, this, mintedAmount);
        ^-----------------------------^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:343:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, target, mintedAmount);
        ^----------------------------------^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:353:9: Warning: Invoking events without "emit" prefix is deprecated.
        FrozenFunds(target, freeze);
        ^-------------------------^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:379:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, msg.sender, amount);                // execute an event reflecting the change
        ^--------------------------------^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:399:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, this, amount);            // executes an event reflecting on the change
            ^--------------------------------^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:73:5: Warning: No visibility specified. Defaulting to "public". 
    function owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:91:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:103:27: Warning: No visibility specified. Defaulting to "public". 
contract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }
                          ^----------------------------------------------------------------------------------------^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:139:5: Warning: No visibility specified. Defaulting to "public". 
    function token(
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:167:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:185:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:199:5: Warning: No visibility specified. Defaulting to "public". 
    function approveAndCall(address _spender, uint256 _value, bytes _extraData)
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:219:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:243:5: Warning: No visibility specified. Defaulting to "public". 
    function () {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:285:5: Warning: No visibility specified. Defaulting to "public". 
    function StellarClassic() token (initialSupply, tokenName, decimalUnits, tokenSymbol) {}
    ^--------------------------------------------------------------------------------------^
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:289:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:311:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:335:5: Warning: No visibility specified. Defaulting to "public". 
    function mintToken(address target, uint256 mintedAmount) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:349:5: Warning: No visibility specified. Defaulting to "public". 
    function freezeAccount(address target, bool freeze) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:359:5: Warning: No visibility specified. Defaulting to "public". 
    function setPrices(uint256 newSellPrice, uint256 newBuyPrice) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:369:5: Warning: No visibility specified. Defaulting to "public". 
    function buy() payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:385:5: Warning: No visibility specified. Defaulting to "public". 
    function sell(uint256 amount) {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
token (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#111-269) has incorrect ERC20 function interface(s):
	-transfer (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#171-189)
StellarClassic (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#271-435) has incorrect ERC20 function interface(s):
	-transfer (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#295-315)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
StellarClassic.tokenName should be constant (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#291)
StellarClassic.tokenSymbol should be constant (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#291-293)
token.standard should be constant (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#117-119)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#91:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#173:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#175:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#225-227:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#229:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#231:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#269:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#297:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#299-301:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#301:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#320-321:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#323:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#325:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#329-330:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#385:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#395:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#417:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
owned.transferOwnership (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#95-103) should be declared external
tokenRecipient.receiveApproval (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#107-111) should be declared external
token.transfer (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#171-189) should be declared external
StellarClassic.transfer (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#295-315) should be declared external
token.approveAndCall (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#205-221) should be declared external
StellarClassic.transferFrom (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#317-351) should be declared external
token.transferFrom (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#223-257) should be declared external
token.fallback (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#263-269) should be declared external
StellarClassic.mintToken (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#351-369) should be declared external
StellarClassic.freezeAccount (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#371-373) should be declared external
StellarClassic.setPrices (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#373-377) should be declared external
StellarClassic.buy (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#377-393) should be declared external
StellarClassic.sell (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#393-435) should be declared external
Ownable.transferOwnership (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#475-493) should be declared external
Crowdsale.fallback (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#575-579) should be declared external
Crowdsale.getBalance (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#581-589) should be declared external
Crowdsale.updateRate (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol) should be declared external
Crowdsale.forwardFunds (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol) should be declared external
Crowdsale.transferBackTo (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol:
	- pragma solidity^0.4.11 (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#9-14): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'owned' (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#73-103) is not in CapWords
Contract 'tokenRecipient' (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#103-111) is not in CapWords
Contract 'token' (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#111-269) is not in CapWords
Parameter '_to' of token.transfer (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#171) is not in mixedCase
Parameter '_value' of token.transfer (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#171) is not in mixedCase
Parameter '_spender' of token.approve (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#197) is not in mixedCase
Parameter '_value' of token.approve (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#197) is not in mixedCase
Parameter '_spender' of token.approveAndCall (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#207) is not in mixedCase
Parameter '_value' of token.approveAndCall (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#207) is not in mixedCase
Parameter '_extraData' of token.approveAndCall (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#207) is not in mixedCase
Parameter '_from' of token.transferFrom (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#223) is not in mixedCase
Parameter '_to' of token.transferFrom (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#223) is not in mixedCase
Parameter '_value' of token.transferFrom (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#223-225) is not in mixedCase
Parameter '_to' of StellarClassic.transfer (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#295-297) is not in mixedCase
Parameter '_value' of StellarClassic.transfer (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#297) is not in mixedCase
Parameter '_from' of StellarClassic.transferFrom (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#317) is not in mixedCase
Parameter '_to' of StellarClassic.transferFrom (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#317-318) is not in mixedCase
Parameter '_value' of StellarClassic.transferFrom (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#319) is not in mixedCase
Function 'StellarClassic.StellarClassic' (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#293-295) is not in mixedCase
Constant 'StellarClassic.initialSupply' (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#285-289) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'StellarClassic.decimalUnits' (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#289-291) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter '_walletAddress' of Crowdsale. (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol#563-565) is not in mixedCase
Parameter 'new_rate' of Crowdsale.updateRate (/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0xc574fc434cb74344eaafe8bcc69ab1b12dbc01d8.sol analyzed (7 contracts), 63 result(s) found
