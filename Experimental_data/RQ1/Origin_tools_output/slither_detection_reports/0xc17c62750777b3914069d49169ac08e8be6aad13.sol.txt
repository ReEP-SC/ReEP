INFO:Detectors:[93m
Address.isContract (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#464-484) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
ULURewardsSBTCPool.notifyRewardAmount (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol) uses a dangerous strict equality:
	- require(bool,string)(periodFinish == 0,Only can call once to start staking)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[93m
Reentrancy in ULURewardsSBTCPool.checkNextEpoch (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#792-816):
	External calls:
	- yfv.mint(address(this),currentEpochReward) (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#806-808)
	State variables written after the call(s):
	- periodFinish (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#814)
	- totalAccumulatedReward (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#808-809)
Reentrancy in ULURewardsSBTCPool.exit (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#760-761):
	External calls:
	- withdraw(balanceOf(msg.sender)) (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#761)
	- getReward() (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#761)
	State variables written after the call(s):
	- currentEpoch (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#761)
	- currentEpochReward (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#761)
	- lastUpdateTime (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#761)
	- periodFinish (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#761)
	- rewardPerTokenStored (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#761)
	- rewardRate (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#761)
	- rewards (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#761)
	- totalAccumulatedReward (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#761)
	- userRewardPerTokenPaid (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#761)
Reentrancy in ULURewardsSBTCPool.getReward (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#761-792):
	External calls:
	- reward = earned(msg.sender) (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#764)
	State variables written after the call(s):
	- rewards (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#768)
Reentrancy in ULURewardsSBTCPool.notifyRewardAmount (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol):
	External calls:
	- yfv.mint(address(this),currentEpochReward) (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol)
	State variables written after the call(s):
	- periodFinish (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol)
	- totalAccumulatedReward (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol)
Reentrancy in ULURewardsSBTCPool.updateReward (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#697-708):
	External calls:
	- rewards[account] = earned(account) (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#703-704)
	State variables written after the call(s):
	- userRewardPerTokenPaid (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#705-707)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
LPTokenWrapper.tokenStake uses tx.origin for authorization:
	- require(bool,string)(tx.origin == sender,Andre, stahp.) (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#645)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-usage-of-txorigin[0m
INFO:Detectors:[92m
Reentrancy in ULURewardsSBTCPool.checkNextEpoch (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#792-816):
	External calls:
	- yfv.mint(address(this),currentEpochReward) (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#806-808)
	State variables written after the call(s):
	- currentEpoch (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#809)
	- lastUpdateTime (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#813)
	- rewardRate (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#812)
Reentrancy in ULURewardsSBTCPool.getReward (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#761-792):
	External calls:
	- reward = earned(msg.sender) (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#764)
	State variables written after the call(s):
	- accumulatedStakingPower (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#765-768)
Reentrancy in ULURewardsSBTCPool.notifyRewardAmount (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol):
	External calls:
	- yfv.mint(address(this),currentEpochReward) (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol)
	State variables written after the call(s):
	- currentEpoch (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol)
	- lastUpdateTime (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
ULURewardsSBTCPool.notifyRewardAmount (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(periodFinish == 0,Only can call once to start staking) (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Address.isContract uses assembly (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#464-484)
	- /sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#483
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
ULURewardsSBTCPool.starttime should be constant (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#674)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Different versions of Solidity is used in /sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol:
	- Version used: ['^0.5.0', '^0.5.5']
	- /sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#60 declares pragma solidity^0.5.0
	- /sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#92-93 declares pragma solidity^0.5.0
	- /sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#253-254 declares pragma solidity^0.5.0
	- /sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#286-287 declares pragma solidity^0.5.0
	- /sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#370 declares pragma solidity^0.5.0
	- /sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#453-454 declares pragma solidity^0.5.5
	- /sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#526 declares pragma solidity^0.5.0
	- /sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#613-614 declares pragma solidity^0.5.0
	- /sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#625-626 declares pragma solidity^0.5.0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#different-pragma-directives-are-used[0m
INFO:Detectors:[92m
Ownable.owner (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#319-321) should be declared external
Ownable.renounceOwnership (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#341-346) should be declared external
Ownable.transferOwnership (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#349-355) should be declared external
ULURewardsSBTCPool.setNextRewardMultiplier (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#709-713) should be declared external
ULURewardsSBTCPool.stakingPower (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#737-742) should be declared external
ULURewardsSBTCPool.stake (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#742-753) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol:
	- pragma solidity^0.5.0 (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#60): it allows old versions
	- pragma solidity^0.5.0 (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#92-93): it allows old versions
	- pragma solidity^0.5.0 (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#253-254): it allows old versions
	- pragma solidity^0.5.0 (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#286-287): it allows old versions
	- pragma solidity^0.5.0 (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#370): it allows old versions
	- pragma solidity^0.5.5 (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#453-454): it allows old versions
	- pragma solidity^0.5.0 (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#526): it allows old versions
	- pragma solidity^0.5.0 (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#613-614): it allows old versions
	- pragma solidity^0.5.0 (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#625-626): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in Address.sendValue (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#518-523):
	-(success) = recipient.call.value(amount)() /sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#521-522
Low level call in SafeERC20.callOptionalReturn (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#572-611):
	-(success,returndata) = address(token).call(data) /sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#594-596
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'Context._msgSender' (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#272-277) is not in mixedCase
Function 'Context._msgData' (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#277-286) is not in mixedCase
Function 'Ownable._transferOwnership' (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#360-367) is not in mixedCase
Parameter '_rewardReferral' of IRewardDistributionRecipient.setRewardReferral (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#620-621) is not in mixedCase
Parameter '_nextRewardMultiplier' of ULURewardsSBTCPool.setNextRewardMultiplier (/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol#711) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0xc17c62750777b3914069d49169ac08e8be6aad13.sol analyzed (11 contracts), 29 result(s) found
