INFO:Slither:Compilation warnings/errors on /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:22:21: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!assertion) throw;
                    ^---^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:54:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ethex(address admin_, address feeAccount_, uint buyFee_, uint sellFee_) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:62:5: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    throw;
    ^---^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:66:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.sender != admin) throw;
                             ^---^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:71:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.sender != admin) throw;
                             ^---^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:76:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.sender != admin) throw;
                             ^---^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:77:27: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (buyFee_ > buyFee) throw;
                          ^---^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:82:30: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (msg.sender != admin) throw;
                             ^---^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:96:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (totalCost < msg.value) throw;
                               ^---^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:111:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!msg.sender.call.value(remain)()) throw;
                                          ^---^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:127:32: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (buyOrders[h] < amount) throw;
                               ^---^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:128:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (totalPrice > msg.value) throw;
                                ^---^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:129:59: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (Token(token).allowance(msg.sender,this) < amount) throw;
                                                          ^---^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:130:61: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (Token(token).transferFrom(msg.sender,buyer,amount)) throw;
                                                            ^---^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:132:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!feeAccount.send(totalFee)) throw;
                                    ^---^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:135:39: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if (!msg.sender.send(leftOver)) throw;
                                      ^---^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:151:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (sellOrders[h] < amount) throw;
                                ^---^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:152:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (Token(token).allowance(seller,this) < amount) throw;
                                                      ^---^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:153:63: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!Token(token).transferFrom(seller,msg.sender,amount)) throw;
                                                              ^---^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:155:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!seller.send(totalPrice)) throw;
                                  ^---^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:156:37: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
    if (!feeAccount.send(totalFee)) throw;
                                    ^---^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:21:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:27:46: Warning: This declaration shadows an existing declaration.
    function name() public constant returns (string name) { name; }
                                             ^---------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:27:5: The shadowed declaration is here:
    function name() public constant returns (string name) { name; }
    ^-------------------------------------------------------------^

/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:28:48: Warning: This declaration shadows an existing declaration.
    function symbol() public constant returns (string symbol) { symbol; }
                                               ^-----------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:28:5: The shadowed declaration is here:
    function symbol() public constant returns (string symbol) { symbol; }
    ^-------------------------------------------------------------------^

/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:29:50: Warning: This declaration shadows an existing declaration.
    function decimals() public constant returns (uint8 decimals) { decimals; }
                                                 ^------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:29:5: The shadowed declaration is here:
    function decimals() public constant returns (uint8 decimals) { decimals; }
    ^------------------------------------------------------------------------^

/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:30:53: Warning: This declaration shadows an existing declaration.
    function totalSupply() public constant returns (uint256 totalSupply) { totalSupply; }
                                                    ^-----------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:30:5: The shadowed declaration is here:
    function totalSupply() public constant returns (uint256 totalSupply) { totalSupply; }
    ^-----------------------------------------------------------------------------------^

/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:88:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 h = sha256(token, price, msg.sender);
                ^------------------------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:90:5: Warning: Invoking events without "emit" prefix is deprecated.
    SellOrder(h, token, tokenAmount, price, msg.sender);
    ^-------------------------------------------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:94:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 h = sha256(token, price,  msg.sender);
                ^-------------------------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:98:5: Warning: Invoking events without "emit" prefix is deprecated.
    BuyOrder(h, token, tokenAmount, price, msg.sender);
    ^------------------------------------------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:102:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 h = sha256(token, price, msg.sender);
                ^------------------------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:104:5: Warning: Invoking events without "emit" prefix is deprecated.
    CancelSellOrder(h,token,price,msg.sender);
    ^---------------------------------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:108:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 h = sha256(token, price, msg.sender);
                ^------------------------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:112:5: Warning: Invoking events without "emit" prefix is deprecated.
    CancelBuyOrder(h,token,price,msg.sender);
    ^--------------------------------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:123:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 h = sha256(token, price, buyer);
                ^-------------------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:136:5: Warning: Invoking events without "emit" prefix is deprecated.
    Buy(h, token, amount, totalPrice, buyer, msg.sender);
    ^--------------------------------------------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:147:17: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 h = sha256(token, price, seller);
                ^--------------------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:157:5: Warning: Invoking events without "emit" prefix is deprecated.
    Sell(h, token, amount, totalPrice, msg.sender, seller);
    ^----------------------------------------------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:54:3: Warning: No visibility specified. Defaulting to "public". 
  function Ethex(address admin_, address feeAccount_, uint buyFee_, uint sellFee_) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:61:3: Warning: No visibility specified. Defaulting to "public". 
  function() {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:65:3: Warning: No visibility specified. Defaulting to "public". 
  function changeAdmin(address admin_) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:70:3: Warning: No visibility specified. Defaulting to "public". 
  function changeFeeAccount(address feeAccount_) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:75:3: Warning: No visibility specified. Defaulting to "public". 
  function changeBuyFee(uint buyFee_) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:81:3: Warning: No visibility specified. Defaulting to "public". 
  function changeSellFee(uint sellFee_) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:87:3: Warning: No visibility specified. Defaulting to "public". 
  function sellOrder(address token, uint tokenAmount, uint price) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:93:3: Warning: No visibility specified. Defaulting to "public". 
  function buyOrder(address token, uint tokenAmount, uint price) payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:101:3: Warning: No visibility specified. Defaulting to "public". 
  function cancelSellOrder(address token, uint price) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:107:3: Warning: No visibility specified. Defaulting to "public". 
  function cancelBuyOrder(address token, uint price) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:122:3: Warning: No visibility specified. Defaulting to "public". 
  function takeBuy(address token, uint amount, uint price, address buyer) payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:146:3: Warning: No visibility specified. Defaulting to "public". 
  function takeSell(address token, uint amount,uint price, address seller) payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:21:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:27:5: Warning: Function state mutability can be restricted to pure
    function name() public constant returns (string name) { name; }
    ^-------------------------------------------------------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:28:5: Warning: Function state mutability can be restricted to pure
    function symbol() public constant returns (string symbol) { symbol; }
    ^-------------------------------------------------------------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:29:5: Warning: Function state mutability can be restricted to pure
    function decimals() public constant returns (uint8 decimals) { decimals; }
    ^------------------------------------------------------------------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:30:5: Warning: Function state mutability can be restricted to pure
    function totalSupply() public constant returns (uint256 totalSupply) { totalSupply; }
    ^-----------------------------------------------------------------------------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:31:5: Warning: Function state mutability can be restricted to pure
    function balanceOf(address _owner) public constant returns (uint256 balance) { _owner; balance; }
    ^-----------------------------------------------------------------------------------------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:32:5: Warning: Function state mutability can be restricted to pure
    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) { _owner; _spender; remaining; }
    ^-------------------------------------------------------------------------------------------------------------------------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:116:28: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    uint totalPriceNoFee = safeMul(amount, price);
                           ^--------------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:117:21: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    uint totalFee = safeMul(totalPriceNoFee, buyFee) / (1 ether);
                    ^------------------------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:118:23: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    uint totalPrice = safeAdd(totalPriceNoFee,totalFee);
                      ^-------------------------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:140:28: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    uint totalPriceNoFee = safeMul(amount, price);
                           ^--------------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:141:21: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    uint totalFee = safeMul(totalPriceNoFee, buyFee) / (1 ether);
                    ^------------------------------^
/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:142:23: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
    uint totalPrice = safeSub(totalPriceNoFee,totalFee);
                      ^-------------------------------^

INFO:Detectors:[93m
Reentrancy in Ethex.takeSell (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#148-159):
	External calls:
	- ! Token(token).transferFrom(seller,msg.sender,amount) (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#155-157)
	State variables written after the call(s):
	- sellOrders (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#157-159)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[92m
SafeMath.assert (function @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#21-26) shadows built-in symbol "assert"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#builtin-symbol-shadowing[0m
INFO:Detectors:[92m
Token.name.name (local variable @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#28) shadows:
	- Token.name (function @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#27-28)
Token.symbol.symbol (local variable @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#29) shadows:
	- Token.symbol (function @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#28-29)
Token.decimals.decimals (local variable @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#29-30) shadows:
	- Token.decimals (function @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#29-30)
Token.totalSupply.totalSupply (local variable @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#30-31) shadows:
	- Token.totalSupply (function @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#30-31)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
Deprecated standard detected @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#25:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#66:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#70:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#75:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#81:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#82:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#87:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#98:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#115:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#130:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#130:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#132:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#133:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#136:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#139:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#154:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#155:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#157:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
Token.name (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#27-28) should be declared external
Token.symbol (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#28-29) should be declared external
Token.decimals (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#29-30) should be declared external
Token.totalSupply (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#30-31) should be declared external
Token.balanceOf (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#31-32) should be declared external
Token.allowance (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#32-34) should be declared external
Token.transfer (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#34-35) should be declared external
Token.transferFrom (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#35-36) should be declared external
Token.approve (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#36-40) should be declared external
Ethex.fallback (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#65-66) should be declared external
Ethex.changeAdmin (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#66-71) should be declared external
Ethex.changeFeeAccount (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#71-76) should be declared external
Ethex.changeBuyFee (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#77-82) should be declared external
Ethex.changeSellFee (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#83-88) should be declared external
Ethex.sellOrder (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#88-94) should be declared external
Ethex.buyOrder (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#94-102) should be declared external
Ethex.cancelSellOrder (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#102-108) should be declared external
Ethex.cancelBuyOrder (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#109-116) should be declared external
Ethex.totalBuyPrice (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#116-123) should be declared external
Ethex.takeBuy (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#123-140) should be declared external
Ethex.totalSellPrice (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#141-148) should be declared external
Ethex.takeSell (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#148-159) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol:
	- pragma solidity^0.4.11 (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in Ethex.cancelBuyOrder (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#109-116):
	-! msg.sender.call.value(remain)() /sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#115
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'Ethex.Ethex' (/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol#54-65) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0x942aba8f59699cd783bd8e1de2ad448e37e7cfd9.sol analyzed (3 contracts), 51 result(s) found
