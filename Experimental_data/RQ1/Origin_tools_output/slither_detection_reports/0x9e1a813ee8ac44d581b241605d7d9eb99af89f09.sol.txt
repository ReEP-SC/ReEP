INFO:Slither:Compilation warnings/errors on /sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:25:53: Warning: This declaration shadows an existing declaration.
    function totalSupply() public constant returns (uint256 totalSupply);
                                                    ^-----------------^
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:25:5: The shadowed declaration is here:
    function totalSupply() public constant returns (uint256 totalSupply);
    ^-------------------------------------------------------------------^

/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:152:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = sha256(token, tokenAmount, weiAmount, msg.sender);
                    ^-----------------------------------------------^
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:167:9: Warning: Invoking events without "emit" prefix is deprecated.
        MakeSellOrder(h, token, tokenAmount, weiAmount, msg.sender);
        ^---------------------------------------------------------^
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:177:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = sha256(token, tokenAmount, valueNoFee, msg.sender);
                    ^------------------------------------------------^
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:183:9: Warning: Invoking events without "emit" prefix is deprecated.
        MakeBuyOrder(h, token, tokenAmount, valueNoFee, msg.sender);
        ^---------------------------------------------------------^
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:189:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = sha256(token, tokenAmount, weiAmount, msg.sender);
                    ^-----------------------------------------------^
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:195:9: Warning: Invoking events without "emit" prefix is deprecated.
        CancelSellOrder(h, token, tokenAmount, weiAmount, msg.sender);
        ^-----------------------------------------------------------^
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:200:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = sha256(token, tokenAmount, weiAmount, msg.sender);
                    ^-----------------------------------------------^
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:208:9: Warning: Invoking events without "emit" prefix is deprecated.
        CancelBuyOrder(h, token, tokenAmount, weiAmount, msg.sender);
        ^----------------------------------------------------------^
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:217:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = sha256(token, tokenAmount, weiAmount, buyer);
                    ^------------------------------------------^
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:264:9: Warning: Invoking events without "emit" prefix is deprecated.
        TakeBuyOrder(h, token, tokenAmount, weiAmount, totalTokens, buyer, msg.sender);
        ^----------------------------------------------------------------------------^
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:273:21: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 h = sha256(token, tokenAmount, weiAmount, seller);
                    ^-------------------------------------------^
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:309:9: Warning: Invoking events without "emit" prefix is deprecated.
        TakeSellOrder(h, token, tokenAmount, weiAmount, transactionWeiAmountNoFee, msg.sender, seller);
        ^--------------------------------------------------------------------------------------------^
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:120:79: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function feeFromTotalCostForAccount(uint256 totalCost, uint256 feeAmount, address account) public constant returns (uint256) {
                                                                              ^-------------^
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:138:70: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function calculateFeeForAccount(uint256 cost, uint256 feeAmount, address account) public constant returns (uint256) {
                                                                     ^-------------^
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:4:5: Warning: Function state mutability can be restricted to pure
    function safeMul(uint256 a, uint256 b) internal returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:10:5: Warning: Function state mutability can be restricted to pure
    function safeSub(uint256 a, uint256 b) internal returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:15:5: Warning: Function state mutability can be restricted to pure
    function safeAdd(uint256 a, uint256 b) internal returns (uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:126:24: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint256 cost = safeMul(totalCost, (1 ether)) / safeAdd((1 ether), feeAmount);
                       ^---------------------------^
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:126:56: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint256 cost = safeMul(totalCost, (1 ether)) / safeAdd((1 ether), feeAmount);
                                                       ^---------------------------^
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:129:29: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint256 remainder = safeMul(totalCost, (1 ether)) % safeAdd((1 ether), feeAmount);
                            ^---------------------------^
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:129:61: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint256 remainder = safeMul(totalCost, (1 ether)) % safeAdd((1 ether), feeAmount);
                                                            ^---------------------------^
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:131:20: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
            cost = safeAdd(cost, 1);
                   ^--------------^
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:134:23: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint256 fee = safeSub(totalCost, cost);
                      ^----------------------^
/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:143:23: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        uint256 fee = safeMul(cost, feeAmount) / (1 ether);
                      ^----------------------^

INFO:Detectors:[93m
Reentrancy in GBIT.changeGBTAddress (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#92-98):
	External calls:
	- require(bool)(block.number > GBT(gbtAddress).expirationBlock()) (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#94-97)
	State variables written after the call(s):
	- gbtAddress (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#97-98)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
GBIT.cancelAllSellOrders (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#190-199) does not use the value returned by external calls:
	-ERC20Interface(token).transfer(msg.sender,remain) (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#198)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
ERC20Interface.totalSupply.totalSupply (local variable @ /sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#27) shadows:
	- ERC20Interface.totalSupply (function @ /sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#25-27)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#local-variable-shadowing[0m
INFO:Detectors:[92m
GBT.expirationBlock should be constant (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#54)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
ERC20Interface.totalSupply (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#25-27) should be declared external
ERC20Interface.balanceOf (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#28-30) should be declared external
ERC20Interface.transfer (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#31-33) should be declared external
ERC20Interface.transferFrom (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#34-36) should be declared external
ERC20Interface.approve (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#39-41) should be declared external
ERC20Interface.allowance (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#42-44) should be declared external
GBT.isActive (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#54-59) should be declared external
GBIT.fallback (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#86-87) should be declared external
GBIT.changeAdmin (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#88-92) should be declared external
GBIT.changeGBTAddress (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#92-98) should be declared external
GBIT.changeLastFreeBlock (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#98-105) should be declared external
GBIT.changeFeeAccount (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#105-110) should be declared external
GBIT.changeMakeFee (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#110-116) should be declared external
GBIT.changeTakeFee (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#116-120) should be declared external
GBIT.makeSellOrder (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#150-171) should be declared external
GBIT.makeBuyOrder (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#175-188) should be declared external
GBIT.cancelAllSellOrders (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#190-199) should be declared external
GBIT.cancelAllBuyOrders (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#201-212) should be declared external
GBIT.takeBuyOrder (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#215-275) should be declared external
GBIT.takeSellOrder (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#275-311) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol:
	- pragma solidity^0.4.19 (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_lastFreeBlock' of GBIT.changeLastFreeBlock (/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol#99) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0x9e1a813ee8ac44d581b241605d7d9eb99af89f09.sol analyzed (4 contracts), 26 result(s) found
