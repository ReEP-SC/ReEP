INFO:Detectors:[91m
LogicContract.withdrawRefund (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#405-427) sends eth to arbitrary user
	Dangerous calls:
	- _owner.transfer(refund) (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#427)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[92m
Ownable.renounceOwnership (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#95-103) should be declared external
Ownable.transferOwnership (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#116-121) should be declared external
EternalStorageInterface.getShipById (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#229-233) should be declared external
EternalStorageInterface.buyItem (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#233-235) should be declared external
EternalStorageInterface.getItemPriceById (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#235-237) should be declared external
EternalStorageInterface.getOwnerByItemTypeAndId (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#237-239) should be declared external
EternalStorageInterface.getItemTypeIdByTypeAndId (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#239-241) should be declared external
EternalStorageInterface.setNewPriceToItem (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#241-243) should be declared external
EternalStorageInterface.addReferrer (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#243-253) should be declared external
EternalStorageInterface.widthdrawRefunds (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#253-255) should be declared external
EternalStorageInterface.checkRefundExistanceByOwner (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#255-259) should be declared external
ItemsStorageInterface.getShipsIds (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#261-263) should be declared external
ItemsStorageInterface.getRadarsIds (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#263-265) should be declared external
ItemsStorageInterface.getScannersIds (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#265-267) should be declared external
ItemsStorageInterface.getDroidsIds (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#267-269) should be declared external
ItemsStorageInterface.getFuelsIds (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#269-271) should be declared external
ItemsStorageInterface.getGeneratorsIds (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#271-275) should be declared external
ItemsStorageInterface.getEnginesIds (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#275-277) should be declared external
ItemsStorageInterface.getGunsIds (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#277-279) should be declared external
ItemsStorageInterface.getMicroModulesIds (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#279-281) should be declared external
ItemsStorageInterface.getArtefactsIds (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#281-283) should be declared external
ItemsStorageInterface.getUsersShipsIds (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#283-285) should be declared external
ItemsStorageInterface.getUsersRadarsIds (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#285-287) should be declared external
ItemsStorageInterface.getUsersScannersIds (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#287-289) should be declared external
ItemsStorageInterface.getUsersDroidsIds (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#289-291) should be declared external
ItemsStorageInterface.getUsersEnginesIds (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#291-293) should be declared external
ItemsStorageInterface.getUsersFuelsIds (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#293-299) should be declared external
ItemsStorageInterface.getUsersGeneratorsIds (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#299-307) should be declared external
ItemsStorageInterface.getUsersGunsIds (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#307-311) should be declared external
ItemsStorageInterface.getUsersMicroModulesIds (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#311-313) should be declared external
ItemsStorageInterface.getUsersArtefactsIds (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#313-319) should be declared external
LogicContract.destroyLogicContract (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#361-367) should be declared external
LogicContract.buyShip (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#367-399) should be declared external
LogicContract.withdrawRefund (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#405-427) should be declared external
LogicContract.checkRefundExistanceByOwner (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#427-441) should be declared external
LogicContract.getOwnerByShipId (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#447-455) should be declared external
LogicContract.getShipType (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#458-463) should be declared external
LogicContract.getUsersShipsIds (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#473-481) should be declared external
LogicContract.getShipPriceById (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#493-503) should be declared external
LogicContract.getShipsIds (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#503-513) should be declared external
LogicContract.getShipById (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#515-533) should be declared external
LogicContract.getBalanceOfLogicContract (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#533-539) should be declared external
LogicContract.getPayOut (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol) should be declared external
LogicContract.setNewPriceToItem (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Parameter '_newOwner' of Ownable.transferOwnership (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#119) is not in mixedCase
Function 'Ownable._transferOwnership' (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#129-149) is not in mixedCase
Parameter '_newOwner' of Ownable._transferOwnership (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#131) is not in mixedCase
Parameter '_shipId' of LogicContract.buyShip (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#367-369) is not in mixedCase
Parameter '_referrerWalletAddress' of LogicContract.buyShip (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#369) is not in mixedCase
Function 'LogicContract._buyShip' (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#401-405) is not in mixedCase
Parameter '_shipId' of LogicContract._buyShip (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#401) is not in mixedCase
Parameter '_newOwner' of LogicContract._buyShip (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#401) is not in mixedCase
Parameter '_owner' of LogicContract.withdrawRefund (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#411-413) is not in mixedCase
Parameter '_owner' of LogicContract.checkRefundExistanceByOwner (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#433) is not in mixedCase
Parameter '_shipId' of LogicContract.getOwnerByShipId (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#447) is not in mixedCase
Parameter '_shipId' of LogicContract.getShipType (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#459-461) is not in mixedCase
Parameter '_shipId' of LogicContract.getShipPriceById (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#493) is not in mixedCase
Parameter '_shipId' of LogicContract.getShipById (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol#519) is not in mixedCase
Function 'LogicContract._getPayOut' (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol) is not in mixedCase
Parameter '_itemType' of LogicContract.setNewPriceToItem (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol) is not in mixedCase
Parameter '_itemTypeId' of LogicContract.setNewPriceToItem (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol) is not in mixedCase
Parameter '_newPrice' of LogicContract.setNewPriceToItem (/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0xa9b9b10e380ea748986e8cf97af4b242f37b762b.sol analyzed (5 contracts), 63 result(s) found
