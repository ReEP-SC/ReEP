INFO:Slither:Compilation warnings/errors on /sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:9:31: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!safeToAdd(a, b)) throw;
                              ^---^
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:18:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!safeToSubtract(a, b)) throw;
                                   ^---^
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:30:124: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_betSize < minBet || maxRollLimit < minNumber || minRollLimit > maxNumber || maxRollLimit - 1 <= minRollLimit) throw;
                                                                                                                           ^---^
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:38:33: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (gamePaused == true) throw;
                                ^---^
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:46:36: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (payoutsPaused == true) throw;
                                   ^---^
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:55:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:63:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != casino) throw;
                                  ^---^
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:149:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function LuckyDice() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:175:80: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (playerBetDiceRollHash[diceRollHash] != 0x0 || diceRollHash == 0x0) throw;
                                                                               ^---^
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:179:56: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (casino != ecrecover(tempBetHash, v, r, s)) throw;
                                                       ^---^
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:185:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:202:13: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
            throw;
            ^---^
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:231:49: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (playerAddress[diceRollHash] == 0x0) throw;
                                                ^---^
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:235:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (diceRollHash != hash) throw;
                                  ^---^
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:434:35: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!sendTo.send(amount)) throw;
                                  ^---^
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:451:51: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!sendTo.send(originalPlayerBetValue)) throw;
                                                  ^---^
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:178:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        tempBetHash = sha256(diceRollHash, byte(minRollLimit), byte(maxRollLimit), msg.sender);
                      ^----------------------------------------------------------------------^
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:205:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogBet(diceRollHash, playerAddress[diceRollHash], playerProfit[diceRollHash], playerToJackpot[diceRollHash],
        ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:234:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 hash = sha256(rollResult, salt);
                       ^----------------------^
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:278:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogJpPayment(playerBetDiceRollHash[diceRollHash], playerTempAddress[diceRollHash],
            ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:285:17: Warning: Invoking events without "emit" prefix is deprecated.
                LogJpPayment(playerBetDiceRollHash[diceRollHash], playerTempAddress[diceRollHash],
                ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:314:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogResult(playerBetDiceRollHash[diceRollHash], playerTempAddress[diceRollHash],
            ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:324:17: Warning: Invoking events without "emit" prefix is deprecated.
                LogResult(playerBetDiceRollHash[diceRollHash], playerTempAddress[diceRollHash],
                ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:341:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogResult(playerBetDiceRollHash[diceRollHash], playerTempAddress[diceRollHash],
            ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:435:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogOwnerTransfer(sendTo, amount);
        ^------------------------------^
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:453:9: Warning: Invoking events without "emit" prefix is deprecated.
        LogRefund(diceRollHash, sendTo, originalPlayerBetValue);
        ^-----------------------------------------------------^
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:488:9: Warning: "suicide" has been deprecated in favour of "selfdestruct"
        suicide(owner);
        ^------------^
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:149:5: Warning: No visibility specified. Defaulting to "public". 
    function LuckyDice() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:384:5: Warning: No visibility specified. Defaulting to "public". 
    function()
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:4:5: Warning: Function state mutability can be restricted to pure
    function safeToAdd(uint a, uint b) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:13:5: Warning: Function state mutability can be restricted to pure
    function safeToSubtract(uint a, uint b) internal returns (bool) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:219:5: Warning: Function state mutability can be restricted to view
    function getProfit(uint _betSize, uint fullProfit) internal returns (uint){
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:223:5: Warning: Function state mutability can be restricted to view
    function getToJackpot(uint _betSize, uint fullProfit) internal returns (uint){
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
LuckyDice.jpPercentage should be constant (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#96)
LuckyDice.jpPercentageDivisor should be constant (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#96-99)
LuckyDice.probabilityDivisor should be constant (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#76)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#10:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#19:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#179:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#183:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#190:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#205:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#238:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#242:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#443:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#468-470:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:
	- Usage of "suicide()" should be replaced with "selfdestruct()"
Deprecated standard detected @ /sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#34-35:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#43:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#52:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#60:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#70:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
LuckyDice.playerMakeBet (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#172-212) should be declared external
LuckyDice.withdraw (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#233-365) should be declared external
LuckyDice.playerWithdrawPendingTransactions (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#368-389) should be declared external
LuckyDice.playerGetPendingTxByAddress (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#393-395) should be declared external
LuckyDice.fallback (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#397-404) should be declared external
LuckyDice.ownerUpdateContractBalance (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#408-415) should be declared external
LuckyDice.ownerSetJpMinBet (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#435-439) should be declared external
LuckyDice.ownerTransferEther (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#440-445) should be declared external
LuckyDice.ownerRefundPlayer (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#453-471) should be declared external
LuckyDice.ownerPauseGame (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#477-479) should be declared external
LuckyDice.ownerPausePayouts (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#484-490) should be declared external
LuckyDice.ownerSetCasino (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol) should be declared external
LuckyDice.ownerChangeOwner (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol) should be declared external
LuckyDice.ownerkill (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol:
	- pragma solidity^0.4.18 (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in LuckyDice.playerWithdrawPendingTransactions (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#368-389):
	-msg.sender.call.value(withdrawAmount)() /sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#376-389
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'LuckyDice.LuckyDice' (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#155-169) is not in mixedCase
Parameter '_betSize' of LuckyDice.getFullProfit (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#213) is not in mixedCase
Parameter '_betSize' of LuckyDice.getProfit (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#223-224) is not in mixedCase
Parameter '_betSize' of LuckyDice.getToJackpot (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#227-228) is not in mixedCase
Constant 'LuckyDice.houseEdgeDivisor' (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#77-78) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'LuckyDice.maxNumber' (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#78-80) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'LuckyDice.minNumber' (/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol#80-81) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0x85d3addef1a2b104edb5c1e9475b6d5496fd5138.sol analyzed (2 contracts), 40 result(s) found
