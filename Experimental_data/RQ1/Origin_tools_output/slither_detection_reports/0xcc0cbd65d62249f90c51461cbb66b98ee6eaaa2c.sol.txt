INFO:Slither:Compilation warnings/errors on /sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol:
/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol:149:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Owned() public {

    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol:264:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function _OmnesCoinToken() public onlyOwner{

    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol:175:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);

        ^-----------------------------------^
/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol:264:39: Warning: Modifier-style base constructor call without arguments.
    function _OmnesCoinToken() public onlyOwner{

                                      ^-------^
/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol:304:31: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            bytes32 digest =  keccak256(challengeNumber, msg.sender, nonce );

                              ^--------------------------------------------^
/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol:337:15: Warning: Invoking events without "emit" prefix is deprecated.
              Mint(msg.sender, reward_amount, epochCount, challengeNumber );

              ^-----------------------------------------------------------^
/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol:463:26: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 digest = keccak256(challenge_number,msg.sender,nonce);

                         ^------------------------------------------^
/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol:472:28: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
          bytes32 digest = keccak256(challenge_number,msg.sender,nonce);

                           ^------------------------------------------^
/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol:526:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, to, tokens);

        ^------------------------------^
/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol:554:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, spender, tokens);

        ^-----------------------------------^
/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol:588:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(from, to, tokens);

        ^------------------------^
/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol:626:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, spender, tokens);

        ^-----------------------------------^
/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol:371:25: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
      challengeNumber = block.blockhash(block.number - 1);

                        ^-------------^
/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol:461:43: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function getMintDigest(uint256 nonce, bytes32 challenge_digest, bytes32 challenge_number) public view returns (bytes32 digesttest) {

                                          ^----------------------^

INFO:Detectors:[93m
Contract locking ether found in /sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol:
	Contract _OmnesCoinToken has payable functions:
	 - fallback (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[92m
_OmnesCoinToken._BLOCKS_PER_READJUSTMENT should be constant (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#451-453)
_OmnesCoinToken._MAXIMUM_TARGET should be constant (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#473-479)
_OmnesCoinToken._MINIMUM_TARGET should be constant (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#454-461)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Deprecated standard detected @ /sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#779:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ERC20Interface.totalSupply (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#191-195) should be declared external
_OmnesCoinToken.totalSupply (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#1015-1023) should be declared external
ERC20Interface.balanceOf (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#195) should be declared external
_OmnesCoinToken.balanceOf (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#1039-1043) should be declared external
_OmnesCoinToken.allowance (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#1243-1255) should be declared external
ERC20Interface.allowance (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#195-203) should be declared external
_OmnesCoinToken.transfer (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#1083-1098) should be declared external
ERC20Interface.transfer (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#203-207) should be declared external
ERC20Interface.approve (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#207-209) should be declared external
_OmnesCoinToken.approve (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#1143-1157) should be declared external
_OmnesCoinToken.transferFrom (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#1203-1227) should be declared external
ERC20Interface.transferFrom (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#213-217) should be declared external
ApproveAndCallFallBack.receiveApproval (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#265-273) should be declared external
Owned.transferOwnership (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#345-355) should be declared external
Owned.acceptOwnership (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#357-381) should be declared external
_OmnesCoinToken.mint (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#607-699) should be declared external
_OmnesCoinToken.getChallengeNumber (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#897-901) should be declared external
_OmnesCoinToken.getMiningDifficulty (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#903-911) should be declared external
_OmnesCoinToken.getMiningTarget (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#911-921) should be declared external
_OmnesCoinToken.getMintDigest (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#943-963) should be declared external
_OmnesCoinToken.checkMintSolution (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#971-999) should be declared external
_OmnesCoinToken.approveAndCall (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#1299-1315) should be declared external
_OmnesCoinToken.fallback (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol) should be declared external
_OmnesCoinToken.transferAnyERC20Token (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol:
	- pragma solidity^0.4.18 (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Owned.Owned' (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#319-329) is not in mixedCase
Parameter '_newOwner' of Owned.transferOwnership (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#345-349) is not in mixedCase
Contract '_OmnesCoinToken' (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#409-1323) is not in CapWords
Function '_OmnesCoinToken._OmnesCoinToken' (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#557-607) is not in mixedCase
Parameter 'challenge_digest' of _OmnesCoinToken.mint (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#610-611) is not in mixedCase
Function '_OmnesCoinToken._startNewMiningEpoch' (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#701-781) is not in mixedCase
Function '_OmnesCoinToken._reAdjustDifficulty' (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#791-885) is not in mixedCase
Parameter 'challenge_digest' of _OmnesCoinToken.getMintDigest (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#943-947) is not in mixedCase
Parameter 'challenge_number' of _OmnesCoinToken.getMintDigest (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#947) is not in mixedCase
Parameter 'challenge_digest' of _OmnesCoinToken.checkMintSolution (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#971) is not in mixedCase
Parameter 'challenge_number' of _OmnesCoinToken.checkMintSolution (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#973-975) is not in mixedCase
Variable '_OmnesCoinToken._totalSupply' (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#441-443) is not in mixedCase
Variable '_OmnesCoinToken._BLOCKS_PER_READJUSTMENT' (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#451-453) is not in mixedCase
Variable '_OmnesCoinToken._MINIMUM_TARGET' (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#454-461) is not in mixedCase
Variable '_OmnesCoinToken._MAXIMUM_TARGET' (/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol#473-479) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0xcc0cbd65d62249f90c51461cbb66b98ee6eaaa2c.sol analyzed (6 contracts), 43 result(s) found
