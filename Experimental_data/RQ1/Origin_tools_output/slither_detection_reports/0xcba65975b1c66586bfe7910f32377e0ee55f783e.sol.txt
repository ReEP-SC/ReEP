INFO:Slither:Compilation warnings/errors on /sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol:
/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol:136:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Owned() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol:197:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function LavaWallet() public  {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol:162:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol:216:7: Warning: Invoking events without "emit" prefix is deprecated.
      Deposit(token, from, tokens, balances[token][from]);
      ^-------------------------------------------------^
/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol:229:5: Warning: Invoking events without "emit" prefix is deprecated.
    Withdraw(token, msg.sender, tokens, balances[token][msg.sender]);
    ^--------------------------------------------------------------^
/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol:240:7: Warning: Invoking events without "emit" prefix is deprecated.
      Withdraw(token, from, tokens, balances[token][from]);
      ^--------------------------------------------------^
/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol:254:7: Warning: Invoking events without "emit" prefix is deprecated.
      Approval(msg.sender, token, spender, tokens);
      ^------------------------------------------^
/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol:263:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, token, to, tokens);
        ^-------------------------------------^
/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol:273:8: Warning: Invoking events without "emit" prefix is deprecated.
       Transfer(token, from, to, tokens);
       ^-------------------------------^
/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol:286:13: Warning: "sha3" has been deprecated in favour of "keccak256"
            sha3(from,to,this,token,tokens,relayerReward,expires,nonce)
            ^---------------------------------------------------------^
/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol:286:13: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            sha3(from,to,this,token,tokens,relayerReward,expires,nonce)
            ^---------------------------------------------------------^
/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol:284:33: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes32 typedDataHash = sha3(
                                ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol:284:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 typedDataHash = sha3(
                                ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol:315:8: Warning: Invoking events without "emit" prefix is deprecated.
       Approval(from, token, msg.sender, relayerReward);
       ^----------------------------------------------^
/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol:322:8: Warning: Invoking events without "emit" prefix is deprecated.
       Approval(from, token, to, tokens);
       ^-------------------------------^
/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol:403:76: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
     function receiveApproval(address from, uint256 tokens, address token, bytes data) public returns (bool success) {
                                                                           ^--------^

INFO:Detectors:[93m
ECRecovery.recover (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#24-59) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Contract locking ether found in /sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol:
	Contract LavaWallet has payable functions:
	 - fallback (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#209-211)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[93m
LavaWallet.depositTokens (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#212-225) does not use the value returned by external calls:
	-ERC20Interface(token).transferFrom(from,this,tokens) (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#216-218)
LavaWallet.withdrawTokens (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#227-235) does not use the value returned by external calls:
	-ERC20Interface(token).transfer(msg.sender,tokens) (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#233)
LavaWallet.withdrawTokensFrom (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#235-252) does not use the value returned by external calls:
	-ERC20Interface(token).transfer(to,tokens) (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#246-251)
LavaWallet.transferAnyERC20Token (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#441-453) does not use the value returned by external calls:
	-ERC20Interface(tokenAddress).transfer(owner,tokens) (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
Reentrancy in LavaWallet.depositTokens (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#212-225):
	External calls:
	- ERC20Interface(token).transferFrom(from,this,tokens) (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#216-218)
	State variables written after the call(s):
	- balances (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#222-223)
	- depositedTokens (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#223-224)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
ECRecovery.recover uses assembly (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#24-59)
	- /sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#36-46
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Deprecated standard detected @ /sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#294-297:
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ECRecovery.recover (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#24-59) should be declared external
ERC20Interface.totalSupply (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#106-107) should be declared external
ERC20Interface.balanceOf (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#107-108) should be declared external
ERC20Interface.allowance (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#108-109) should be declared external
ERC20Interface.transfer (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#109-110) should be declared external
ERC20Interface.approve (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#110-112) should be declared external
ERC20Interface.transferFrom (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#112-113) should be declared external
ApproveAndCallFallBack.receiveApproval (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#128-133) should be declared external
Owned.transferOwnership (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#160-164) should be declared external
Owned.acceptOwnership (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#166-182) should be declared external
LavaWallet.fallback (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#209-211) should be declared external
LavaWallet.withdrawTokens (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#227-235) should be declared external
LavaWallet.balanceOf (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#252-254) should be declared external
LavaWallet.approveTokens (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#259-262) should be declared external
LavaWallet.transferTokens (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#263-271) should be declared external
LavaWallet.withdrawTokensFromWithSignature (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#334-348) should be declared external
LavaWallet.transferTokensFromWithSignature (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#350-369) should be declared external
LavaWallet.tokenAllowance (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#369-375) should be declared external
LavaWallet.burnSignature (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#375-403) should be declared external
LavaWallet.signatureBurnStatus (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#406-411) should be declared external
LavaWallet.receiveApproval (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#413-416) should be declared external
LavaWallet.approveAndCall (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#418-435) should be declared external
LavaWallet.transferAnyERC20Token (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#441-453) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol:
	- pragma solidity^0.4.18 (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Owned.Owned' (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#147-152) is not in mixedCase
Parameter '_newOwner' of Owned.transferOwnership (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#160-162) is not in mixedCase
Function 'LavaWallet.LavaWallet' (/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol#209) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0xcba65975b1c66586bfe7910f32377e0ee55f783e.sol analyzed (6 contracts), 36 result(s) found
