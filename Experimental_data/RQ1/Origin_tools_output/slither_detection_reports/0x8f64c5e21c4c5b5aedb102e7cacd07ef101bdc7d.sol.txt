INFO:Slither:Compilation warnings/errors on /sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:70:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (ens.owner(node) != msg.sender) throw;
                                           ^---^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:78:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function PublicResolver(AbstractENS ensAddr) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:171:9: Warning: Use of the "var" keyword is deprecated.
        var record = records[node];
        ^--------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:191:53: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (((contentType - 1) & contentType) != 0) throw;
                                                    ^---^
[91m/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:336:1: Error: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.18;
^---------------------^
[91m/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:352:1: Error: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.18;
^---------------------^
[91m/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:545:1: Error: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.18;
^---------------------^
[91m/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:674:1: Error: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.18;
^---------------------^
[91m/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:757:1: Error: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.18;
^---------------------^
[91m/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:765:1: Error: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.18;
^---------------------^
[91m/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:798:1: Error: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.18;
^---------------------^
[91m/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:819:1: Error: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.18;
^---------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:834:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function AppProxyBase(IKernel _kernel, bytes32 _appId, bytes _initializePayload) public {
    ^ (Relevant source part starts here and spans across multiple lines).
[91m/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:864:1: Error: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.18;
^---------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:878:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function AppProxyUpgradeable(IKernel _kernel, bytes32 _appId, bytes _initializePayload)
    ^ (Relevant source part starts here and spans across multiple lines).
[91m/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:894:1: Error: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.18;
^---------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:906:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function AppProxyPinned(IKernel _kernel, bytes32 _appId, bytes _initializePayload)
    ^ (Relevant source part starts here and spans across multiple lines).
[91m/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:926:1: Error: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.18;
^---------------------^
[91m/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:957:1: Error: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.18;
^---------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1243:18: Warning: Use of the "var" keyword is deprecated.
            var (condition, success, failure) = decodeParamsList(uint256(_param.value));
                 ^-------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1243:29: Warning: Use of the "var" keyword is deprecated.
            var (condition, success, failure) = decodeParamsList(uint256(_param.value));
                            ^-----^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1243:38: Warning: Use of the "var" keyword is deprecated.
            var (condition, success, failure) = decodeParamsList(uint256(_param.value));
                                     ^-----^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1249:14: Warning: Use of the "var" keyword is deprecated.
        var (v1, v2,) = decodeParamsList(uint256(_param.value));
             ^^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1249:18: Warning: Use of the "var" keyword is deprecated.
        var (v1, v2,) = decodeParamsList(uint256(_param.value));
                 ^^
[91m/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1407:1: Error: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.18;
^---------------------^
[91m/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1514:1: Error: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.18;
^---------------------^
[91m/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1650:1: Error: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.18;
^---------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1662:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function KernelProxy(address _kernelImpl) public {
    ^ (Relevant source part starts here and spans across multiple lines).
[91m/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1675:1: Error: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.18;
^---------------------^
[91m/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1773:1: Error: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.18;
^---------------------^
[91m/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1838:1: Error: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.18;
^---------------------^
[91m/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1884:1: Error: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.18;
^---------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1903:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function EVMScriptRegistryFactory() public {
    ^ (Relevant source part starts here and spans across multiple lines).
[91m/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1931:1: Error: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.18;
^---------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1949:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DAOFactory(address _baseKernel, address _baseACL, address _regFactory) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2012:48: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (records[node].owner != msg.sender) throw;
                                               ^---^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2019:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ENS() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2063:9: Warning: Use of the "var" keyword is deprecated.
        var subnode = keccak256(node, label);
        ^---------^
[91m/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2090:1: Error: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.18;
^---------------------^
[91m/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2121:1: Error: Source file requires different compiler version (current compiler is 0.4.26+commit.4563c3fc.Linux.g++ - note that nightly builds are considered to be strictly less than the released version[0m
pragma solidity 0.4.18;
^---------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2142:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function APMRegistryFactory(
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:112:36: Warning: This declaration shadows an existing declaration.
    function setAddr(bytes32 node, address addr) only_owner(node) {
                                   ^----------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:102:5: The shadowed declaration is here:
    function addr(bytes32 node) constant returns (address ret) {
    ^ (Relevant source part starts here and spans across multiple lines).

/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:157:36: Warning: This declaration shadows an existing declaration.
    function setName(bytes32 node, string name) only_owner(node) {
                                   ^---------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:147:5: The shadowed declaration is here:
    function name(bytes32 node) constant returns (string ret) {
    ^ (Relevant source part starts here and spans across multiple lines).

/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2050:37: Warning: This declaration shadows an existing declaration.
    function setOwner(bytes32 node, address owner) only_owner(node) {
                                    ^-----------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2026:5: The shadowed declaration is here:
    function owner(bytes32 node) constant returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).

/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2062:59: Warning: This declaration shadows an existing declaration.
    function setSubnodeOwner(bytes32 node, bytes32 label, address owner) only_owner(node) {
                                                          ^-----------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2026:5: The shadowed declaration is here:
    function owner(bytes32 node) constant returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).

/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2073:40: Warning: This declaration shadows an existing declaration.
    function setResolver(bytes32 node, address resolver) only_owner(node) {
                                       ^--------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2033:5: The shadowed declaration is here:
    function resolver(bytes32 node) constant returns (address) {
    ^ (Relevant source part starts here and spans across multiple lines).

/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2083:35: Warning: This declaration shadows an existing declaration.
    function setTTL(bytes32 node, uint64 ttl) only_owner(node) {
                                  ^--------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2040:5: The shadowed declaration is here:
    function ttl(bytes32 node) constant returns (uint64) {
    ^ (Relevant source part starts here and spans across multiple lines).

/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:6:5: Warning: Functions in interfaces should be declared external.
    function owner(bytes32 _node) constant returns (address);
    ^-------------------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:7:5: Warning: Functions in interfaces should be declared external.
    function resolver(bytes32 _node) constant returns (address);
    ^----------------------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:8:5: Warning: Functions in interfaces should be declared external.
    function ttl(bytes32 _node) constant returns (uint64);
    ^----------------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:9:5: Warning: Functions in interfaces should be declared external.
    function setOwner(bytes32 _node, address _owner);
    ^-----------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:10:5: Warning: Functions in interfaces should be declared external.
    function setSubnodeOwner(bytes32 _node, bytes32 label, address _owner);
    ^---------------------------------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:11:5: Warning: Functions in interfaces should be declared external.
    function setResolver(bytes32 _node, address _resolver);
    ^-----------------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:12:5: Warning: Functions in interfaces should be declared external.
    function setTTL(bytes32 _node, uint64 _ttl);
    ^------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:114:9: Warning: Invoking events without "emit" prefix is deprecated.
        AddrChanged(node, addr);
        ^---------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:138:9: Warning: Invoking events without "emit" prefix is deprecated.
        ContentChanged(node, hash);
        ^------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:159:9: Warning: Invoking events without "emit" prefix is deprecated.
        NameChanged(node, name);
        ^---------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:194:9: Warning: Invoking events without "emit" prefix is deprecated.
        ABIChanged(node, contentType);
        ^---------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:215:9: Warning: Invoking events without "emit" prefix is deprecated.
        PubkeyChanged(node, x, y);
        ^-----------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:237:9: Warning: Invoking events without "emit" prefix is deprecated.
        TextChanged(node, key, key);
        ^-------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:248:44: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public ETH_TLD_NODE = keccak256(ENS_ROOT, ETH_TLD_LABEL);
                                           ^--------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:250:52: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public PUBLIC_RESOLVER_NODE = keccak256(ETH_TLD_NODE, PUBLIC_RESOLVER_LABEL);
                                                   ^--------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:258:5: Warning: Functions in interfaces should be declared external.
    function initialize(address permissionsCreator) public;
    ^-----------------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:259:5: Warning: Functions in interfaces should be declared external.
    function hasPermission(address who, address where, bytes32 what, bytes how) public view returns (bool);
    ^-----------------------------------------------------------------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:270:5: Warning: Functions in interfaces should be declared external.
    function acl() public view returns (IACL);
    ^----------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:271:5: Warning: Functions in interfaces should be declared external.
    function hasPermission(address who, address where, bytes32 what, bytes how) public view returns (bool);
    ^-----------------------------------------------------------------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:273:5: Warning: Functions in interfaces should be declared external.
    function setApp(bytes32 namespace, bytes32 name, address app) public returns (bytes32 id);
    ^----------------------------------------------------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:274:5: Warning: Functions in interfaces should be declared external.
    function getApp(bytes32 id) public view returns (address);
    ^--------------------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:341:54: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public EVMSCRIPT_REGISTRY_APP = keccak256(keccak256("app"), EVMSCRIPT_REGISTRY_APP_ID);
                                                     ^----------------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:349:5: Warning: Functions in interfaces should be declared external.
    function getScriptExecutor(bytes script) public view returns (address);
    ^---------------------------------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:714:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 node = keccak256(rootNode, _label);
                       ^-------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:727:9: Warning: Invoking events without "emit" prefix is deprecated.
        DeleteName(node, _label);
        ^----------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:735:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        node = keccak256(rootNode, _label);
               ^-------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:740:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewName(node, _label);
        ^-------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:760:5: Warning: Functions in interfaces should be declared external.
    function isUpgradeable() public pure returns (bool);
    ^--------------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:761:5: Warning: Functions in interfaces should be declared external.
    function getCode() public view returns (address);
    ^-----------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:807:42: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public KERNEL_APP = keccak256(CORE_NAMESPACE, KERNEL_APP_ID);
                                         ^--------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:810:39: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public ACL_APP = keccak256(APP_ADDR_NAMESPACE, ACL_APP_ID);
                                      ^---------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:854:30: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return kernel.getApp(keccak256(APP_BASES_NAMESPACE, _appId));
                             ^------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:941:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewAppProxy(address(proxy));
        ^-------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:951:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewAppProxy(address(proxy));
        ^-------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:965:5: Warning: Functions in interfaces should be declared external.
    function canPerform(address who, address where, bytes32 what) public view returns (bool);
    ^---------------------------------------------------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:997:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 constant public EMPTY_PARAM_HASH = keccak256(uint256(0));
                                               ^-------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:997:48: Warning: The provided argument of type uint256 is not implicitly convertible to expected type bytes memory.
    bytes32 constant public EMPTY_PARAM_HASH = keccak256(uint256(0));
                                               ^-------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1160:9: Warning: Invoking events without "emit" prefix is deprecated.
        SetPermission(_entity, _app, _role, _paramsHash != bytes32(0));
        ^------------------------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1164:29: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 paramHash = keccak256(_encodedParams);
                            ^-----------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1164:29: Warning: The provided argument of type uint256[] memory is not implicitly convertible to expected type bytes memory.
        bytes32 paramHash = keccak256(_encodedParams);
                            ^-----------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1288:9: Warning: Invoking events without "emit" prefix is deprecated.
        ChangePermissionManager(_app, _role, _newManager);
        ^-----------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1292:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return keccak256(uint256(1), _where, _what);
               ^----------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1296:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return keccak256(uint256(2), _who, _where, _what);
               ^----------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1356:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewVersion(versionId, _newSemanticVersion);
        ^----------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1402:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return keccak256(version[0], version[1], version[2]);
               ^-------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1497:53: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 node = registrar.createNameAndPoint(keccak256(_name), repo);
                                                    ^--------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1497:53: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        bytes32 node = registrar.createNameAndPoint(keccak256(_name), repo);
                                                    ^--------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1499:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewRepo(node, _name, repo);
        ^------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1509:48: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return keccak256(registrar.rootNode(), keccak256(REPO_APP_NAME));
                                               ^----------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1509:48: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        return keccak256(registrar.rootNode(), keccak256(REPO_APP_NAME));
                                               ^----------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1509:16: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return keccak256(registrar.rootNode(), keccak256(REPO_APP_NAME));
               ^-------------------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1609:14: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        id = keccak256(_namespace, _name);
             ^--------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1611:9: Warning: Invoking events without "emit" prefix is deprecated.
        SetApp(_namespace, _name, id, _app);
        ^---------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1615:14: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        id = keccak256(_namespace, _name);
             ^--------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1623:17: Warning: Invoking events without "emit" prefix is deprecated.
                SetApp(_namespace, _name, id, _app);
                ^---------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1663:14: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        apps[keccak256(CORE_NAMESPACE, KERNEL_APP_ID)] = _kernelImpl;
             ^--------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1758:13: Warning: Invoking events without "emit" prefix is deprecated.
            LogScriptCall(msg.sender, address(this), contractAddress);
            ^-------------------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1780:5: Warning: Functions in interfaces should be declared external.
    function exec() public;
    ^---------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1979:13: Warning: Invoking events without "emit" prefix is deprecated.
            DeployEVMScriptRegistry(address(reg));
            ^-----------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:1988:9: Warning: Invoking events without "emit" prefix is deprecated.
        DeployDAO(dao);
        ^------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2020:17: Warning: Decimal literal assigned to bytesXX variable will be left-aligned. Use an explicit conversion to silence this warning.
        records[0].owner = msg.sender;
                ^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2051:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(node, owner);
        ^-------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2063:23: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        var subnode = keccak256(node, label);
                      ^--------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2064:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewOwner(node, label, owner);
        ^--------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2074:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewResolver(node, resolver);
        ^-------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2084:9: Warning: Invoking events without "emit" prefix is deprecated.
        NewTTL(node, ttl);
        ^---------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2116:9: Warning: Invoking events without "emit" prefix is deprecated.
        DeployENS(ens);
        ^------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2163:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 node = keccak256(_tld, _label);
                       ^---------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2179:97: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(ENS_SUB_APP_NAME) ... 
     ^-------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2179:97: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
 ... keccak256(ENS_SUB_APP_NAME) ... 
     ^-------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2179:81: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
 ... keccak256(node, keccak256(ENS_SUB_APP_NAME)) ... 
     ^------------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2180:74: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        APMRegistry apm = APMRegistry(dao.newAppInstance(keccak256(node, keccak256(APM_APP_NAME)), registryBase));
                                                                         ^---------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2180:74: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        APMRegistry apm = APMRegistry(dao.newAppInstance(keccak256(node, keccak256(APM_APP_NAME)), registryBase));
                                                                         ^---------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2180:58: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        APMRegistry apm = APMRegistry(dao.newAppInstance(keccak256(node, keccak256(APM_APP_NAME)), registryBase));
                                                         ^--------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2183:47: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        dao.setApp(namespace, keccak256(node, keccak256(REPO_APP_NAME)), repoBase);
                                              ^----------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2183:47: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
        dao.setApp(namespace, keccak256(node, keccak256(REPO_APP_NAME)), repoBase);
                                              ^----------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2183:31: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        dao.setApp(namespace, keccak256(node, keccak256(REPO_APP_NAME)), repoBase);
                              ^---------------------------------------^
/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol:2185:9: Warning: Invoking events without "emit" prefix is deprecated.
        DeployAPM(node, apm);
        ^------------------^

INFO:SlitherSolcParsing:No contract were found in /sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol, check the correct compilation
WARNING:Slither:[91mNo contract was analyzed[0m
INFO:Slither:/sb/0x8f64c5e21c4c5b5aedb102e7cacd07ef101bdc7d.sol analyzed (0 contracts), 0 result(s) found
