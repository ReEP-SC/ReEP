INFO:Slither:Compilation warnings/errors on /sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol:
/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol:6:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol:45:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function TokenERC20(
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol:203:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function TESTAhihi() TokenERC20(initialSupply, tokenName, tokenSymbol, tokenDecimals) public {}
    ^---------------------------------------------------------------------------------------------^
/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol:20:28: Warning: Functions in interfaces should be declared external.
interface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) public; }
                           ^-----------------------------------------------------------------------------------------------^
/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol:77:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol:155:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol:173:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(_from, _value);
        ^-----------------^
/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol:212:31: Warning: "sha3" has been deprecated in favour of "keccak256"
            bytes8 n = bytes8(sha3(nonce, currentChallenge));    // Generate a random hash based on input
                              ^---------------------------^
/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol:212:31: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            bytes8 n = bytes8(sha3(nonce, currentChallenge));    // Generate a random hash based on input
                              ^---------------------------^
/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol:222:32: Warning: "sha3" has been deprecated in favour of "keccak256"
            currentChallenge = sha3(nonce, currentChallenge, block.blockhash(block.number - 1));  // Save a hash that will be used as the next proof
                               ^--------------------------------------------------------------^
/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol:222:32: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
            currentChallenge = sha3(nonce, currentChallenge, block.blockhash(block.number - 1));  // Save a hash that will be used as the next proof
                               ^--------------------------------------------------------------^
/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol:246:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol:258:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, this, mintedAmount);
        ^-----------------------------^
/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol:259:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, target, mintedAmount);
        ^----------------------------------^
/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol:267:9: Warning: Invoking events without "emit" prefix is deprecated.
        FrozenFunds(target, freeze);
        ^-------------------------^
/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol:287:17: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        require(this.balance >= amount * sellPrice);      // checks if the contract has enough ether to buy
                ^----------^
/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol:307:21: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
 ... this.balance ... 
     ^----------^
/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol:192:5: Warning: No visibility specified. Defaulting to "public". 
    function setAllowMining(bool allowMining) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol:210:5: Warning: No visibility specified. Defaulting to "public". 
    function proofOfWork(uint nonce){
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol:222:62: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
            currentChallenge = sha3(nonce, currentChallenge, block.blockhash(block.number - 1));  // Save a hash that will be used as the next proof
                                                             ^-------------^
/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol:230:5: Warning: No visibility specified. Defaulting to "public". 
    function setMinBalance(uint minimumBalanceInFinney) onlyOwner {
    ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[93m
TokenERC20 (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#22-182) has incorrect ERC20 function interface(s):
	-transfer (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#92-98)
TESTAhihi (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#185-313) has incorrect ERC20 function interface(s):
	-transfer (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#305-313)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-erc20-interface[0m
INFO:Detectors:[92m
Deprecated standard detected @ /sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#215:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#230-231:
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
owned.transferOwnership (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#15-20) should be declared external
tokenRecipient.receiveApproval (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#20-22) should be declared external
TESTAhihi.transfer (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#305-313) should be declared external
TokenERC20.transfer (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#92-98) should be declared external
TokenERC20.transferFrom (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#105-114) should be declared external
TokenERC20.approveAndCall (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#137-149) should be declared external
TokenERC20.burn (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#153-164) should be declared external
TokenERC20.burnFrom (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#168-182) should be declared external
TESTAhihi.setAllowMining (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#199-202) should be declared external
TESTAhihi.proofOfWork (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#213-236) should be declared external
TESTAhihi.setMinBalance (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#237-239) should be declared external
TESTAhihi.mintToken (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#262-266) should be declared external
TESTAhihi.freezeAccount (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#271-273) should be declared external
TESTAhihi.setPrices (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#280-284) should be declared external
TESTAhihi.buy (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#285-288) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol:
	- pragma solidity^0.4.16 (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Contract 'owned' (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#3-20) is not in CapWords
Contract 'tokenRecipient' (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#20-22) is not in CapWords
Function 'TokenERC20.TokenERC20' (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#46-62) is not in mixedCase
Function 'TokenERC20._transfer' (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#64-85) is not in mixedCase
Parameter '_from' of TokenERC20._transfer (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#65) is not in mixedCase
Parameter '_to' of TokenERC20._transfer (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#65) is not in mixedCase
Parameter '_value' of TokenERC20._transfer (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#65) is not in mixedCase
Parameter '_to' of TokenERC20.transfer (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#94-96) is not in mixedCase
Parameter '_value' of TokenERC20.transfer (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#96) is not in mixedCase
Parameter '_from' of TokenERC20.transferFrom (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#105) is not in mixedCase
Parameter '_to' of TokenERC20.transferFrom (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#105) is not in mixedCase
Parameter '_value' of TokenERC20.transferFrom (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#105) is not in mixedCase
Parameter '_spender' of TokenERC20.approve (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#121-122) is not in mixedCase
Parameter '_value' of TokenERC20.approve (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#122-123) is not in mixedCase
Parameter '_spender' of TokenERC20.approveAndCall (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#137) is not in mixedCase
Parameter '_value' of TokenERC20.approveAndCall (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#137-138) is not in mixedCase
Parameter '_extraData' of TokenERC20.approveAndCall (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#138) is not in mixedCase
Parameter '_value' of TokenERC20.burn (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#153) is not in mixedCase
Parameter '_from' of TokenERC20.burnFrom (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#169) is not in mixedCase
Parameter '_value' of TokenERC20.burnFrom (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#169) is not in mixedCase
Function 'TESTAhihi._transfer' (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#240-255) is not in mixedCase
Parameter '_from' of TESTAhihi._transfer (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#240) is not in mixedCase
Parameter '_to' of TESTAhihi._transfer (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#240) is not in mixedCase
Parameter '_value' of TESTAhihi._transfer (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#240-241) is not in mixedCase
Parameter '_to' of TESTAhihi.transfer (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#307) is not in mixedCase
Parameter '_value' of TESTAhihi.transfer (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#307) is not in mixedCase
Function 'TESTAhihi.TESTAhihi' (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#206-207) is not in mixedCase
Constant 'TESTAhihi.initialSupply' (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#186-188) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TESTAhihi.tokenName' (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#189-190) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TESTAhihi.tokenSymbol' (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#190-192) is not in UPPER_CASE_WITH_UNDERSCORES
Constant 'TESTAhihi.tokenDecimals' (/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol#192-193) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0x9fc54a05f1870e61e00bb6d05f71b614e4e1a68a.sol analyzed (4 contracts), 51 result(s) found
