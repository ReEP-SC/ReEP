INFO:Detectors:[92m
ChefsTable.add (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#14-18) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)((z = x + y) >= x) (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#15-18)
ChefsTable.sub (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#18-22) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)((z = x - y) <= x) (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#19-22)
ChefsTable.free (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#65-72) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(voteLock[msg.sender] < block.timestamp,still votelocked) (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#65-66)
ChefsTable.propose (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#72-89) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp >= govLock,No governance for 2 weeks) (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#73-74)
ChefsTable.voteFor (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#89-99) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(proposals[id].start < block.timestamp,<start) (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#90-91)
	- require(bool,string)(proposals[id].end > block.timestamp,>end) (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#91-92)
ChefsTable.voteAgainst (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#99-109) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(proposals[id].start < block.timestamp,<start) (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#100-101)
	- require(bool,string)(proposals[id].end > block.timestamp,>end) (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#101-102)
ChefsTable.execute (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#109-120) uses timestamp for comparisons
	Dangerous comparisons:
	- (proposals[id].end + lock) < block.timestamp && proposals[id].totalForVotes > proposals[id].totalAgainstVotes (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#110-120)
	- proposals[id].newGov != address(0) (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#116-120)
	- proposals[id].newFood != address(0) (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#113-115)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
ChefsTable.lock should be constant (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#48)
ChefsTable.minimum should be constant (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#49-50)
ChefsTable.period should be constant (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#47)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
ChefsTable.join (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#59-65) should be declared external
ChefsTable.free (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#65-72) should be declared external
ChefsTable.propose (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#72-89) should be declared external
ChefsTable.voteFor (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#89-99) should be declared external
ChefsTable.voteAgainst (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#99-109) should be declared external
ChefsTable.execute (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#109-120) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol:
	- pragma solidity^0.5.12 (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '' of PASTA.balanceOf (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#4) is not in mixedCase
Parameter '' of PASTA.transfer (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#5) is not in mixedCase
Parameter '_scope_0' of PASTA.transfer (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#5) is not in mixedCase
Parameter '' of PASTA.transferFrom (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#6) is not in mixedCase
Parameter '_scope_0' of PASTA.transferFrom (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#6) is not in mixedCase
Parameter '_scope_1' of PASTA.transferFrom (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#6) is not in mixedCase
Parameter '_spaghetti' of ChefsTable. (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#54-55) is not in mixedCase
Parameter '_newFood' of ChefsTable.propose (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#72) is not in mixedCase
Parameter '_newGov' of ChefsTable.propose (/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol#72) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0xbf30b14abde6d31a3ff033a895ca27826dc18efa.sol analyzed (2 contracts), 24 result(s) found
