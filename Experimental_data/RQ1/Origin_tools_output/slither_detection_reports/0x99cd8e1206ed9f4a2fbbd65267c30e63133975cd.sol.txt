INFO:Slither:Compilation warnings/errors on /sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:315:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function SeedDex(address admin_, address manager_, address feeAccount_, uint feeTakeMaker_, uint feeTakeSender_,  uint feeTakeMakerFic_, uint feeTakeSenderFic_,  address predecessor_) public {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:241:40: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xF589ACbe618B10A2ffc850948cB43EbC438ad066'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
  address constant public FicAddress = 0xf589acbe618b10a2ffc850948cb43ebc438ad066;  // Florafic token address
                                       ^----------------------------------------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:463:5: Warning: Invoking events without "emit" prefix is deprecated.
    Deposit(0, msg.sender, msg.value, tokens[0][msg.sender]);
    ^------------------------------------------------------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:489:5: Warning: Invoking events without "emit" prefix is deprecated.
    Withdraw(0, msg.sender, amount, tokens[0][msg.sender]);
    ^----------------------------------------------------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:525:5: Warning: Invoking events without "emit" prefix is deprecated.
    Deposit(token, msg.sender, amount, tokens[token][msg.sender]);
    ^-----------------------------------------------------------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:595:5: Warning: Invoking events without "emit" prefix is deprecated.
    Withdraw(token, msg.sender, amount, tokens[token][msg.sender]);
    ^------------------------------------------------------------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:657:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = keccak256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^-------------------------------------------------------------------------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:663:5: Warning: Invoking events without "emit" prefix is deprecated.
    Order(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, msg.sender, hash, amount);
    ^-----------------------------------------------------------------------------------------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:711:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = keccak256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^-------------------------------------------------------------------------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:715:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      (orders[user][hash] || ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) == user) &&
                                       ^-------------------------------------------------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:727:5: Warning: Invoking events without "emit" prefix is deprecated.
    Trade(tokenGet, amount, tokenGive, amountGive.mul(amount) / amountGet, user, msg.sender,now);
    ^------------------------------------------------------------------------------------------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:917:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = keccak256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^-------------------------------------------------------------------------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:921:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      (orders[user][hash] || ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) == user) &&
                                       ^-------------------------------------------------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:983:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = keccak256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^-------------------------------------------------------------------------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:1027:20: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    bytes32 hash = keccak256(this, tokenGet, amountGet, tokenGive, amountGive, expires, nonce);
                   ^-------------------------------------------------------------------------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:1029:53: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    require ((orders[msg.sender][hash] || ecrecover(keccak256("\x19Ethereum Signed Message:\n32", hash), v, r, s) == msg.sender));
                                                    ^-------------------------------------------------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:1033:5: Warning: Invoking events without "emit" prefix is deprecated.
    Cancel(tokenGet, amountGet, tokenGive, amountGive, expires, nonce, msg.sender, v, r, s);
    ^-------------------------------------------------------------------------------------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:1115:5: Warning: Invoking events without "emit" prefix is deprecated.
    FundsMigrated(msg.sender, newContract);
    ^------------------------------------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:1181:22: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
      bytes32 hash = keccak256(tokenGet);
                     ^-----------------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:1181:22: Warning: The provided argument of type address is not implicitly convertible to expected type bytes memory.
      bytes32 hash = keccak256(tokenGet);
                     ^-----------------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:1183:7: Warning: Invoking events without "emit" prefix is deprecated.
      LogEvent('hash',hash);
      ^-------------------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:547:27: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function tokenFallback( address sender, uint amount, bytes data) public returns (bool ok) {
                          ^------------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:547:43: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function tokenFallback( address sender, uint amount, bytes data) public returns (bool ok) {
                                          ^---------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:547:56: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function tokenFallback( address sender, uint amount, bytes data) public returns (bool ok) {
                                                       ^--------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:981:135: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
 ... uint8 v ... 
     ^-----^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:981:144: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
 ... bytes32 r ... 
     ^-------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:981:155: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
 ... bytes32 s ... 
     ^-------^
/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol:547:3: Warning: Function state mutability can be restricted to view
  function tokenFallback( address sender, uint amount, bytes data) public returns (bool ok) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Reentrancy in SeedDex.migrateFunds (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#1125-1165):
	External calls:
	- newExchange.depositForUser.value(etherAmount)(msg.sender) (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#1145)
	- require(bool)(IERC20(token).approve(newExchange,tokenAmount)) (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#1155-1157)
	External calls sending eth:
	- newExchange.depositForUser.value(etherAmount)(msg.sender) (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#1145)
	State variables written after the call(s):
	- tokens (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#1157)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities[0m
INFO:Detectors:[93m
amount in SeedDex.order (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#687) is a local variable never initialiazed
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-local-variables[0m
INFO:Detectors:[92m
SeedDex.migrateFunds has external calls inside a loop:
	- require(bool)(IERC20(token).approve(newExchange,tokenAmount)) (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#1155-1157)
SeedDex.migrateFunds has external calls inside a loop:
	- newExchange.depositTokenForUser(token,tokenAmount,msg.sender) (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#1157-1161)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in SeedDex.depositToken (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#535-547):
	External calls:
	- require(bool)(IERC20(token).transferFrom(msg.sender,this,amount)) (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#539-541)
	State variables written after the call(s):
	- depositingTokenFlag (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#541-543)
	- tokens (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#543-547)
Reentrancy in SeedDex.depositTokenForUser (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol):
	External calls:
	- require(bool)(IERC20(token).transferFrom(msg.sender,this,amount)) (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol)
	State variables written after the call(s):
	- depositingTokenFlag (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol)
	- tokens (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
SeedDex.fallback (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#375-377) should be declared external
SeedDex.changeAdmin (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#385-389) should be declared external
SeedDex.changeManager (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#395-399) should be declared external
SeedDex.changeFeeAccount (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#407-413) should be declared external
SeedDex.changeFeeTakeMaker (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#421-429) should be declared external
SeedDex.changeFeeTakeSender (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#429-433) should be declared external
SeedDex.changeFeeTakeMakerFic (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#433-441) should be declared external
SeedDex.changeFeeTakeSenderFic (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#443-451) should be declared external
SeedDex.setSuccessor (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#453-461) should be declared external
SeedDex.deposit (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#481-489) should be declared external
SeedDex.withdraw (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#505-509) should be declared external
SeedDex.depositToken (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#535-547) should be declared external
SeedDex.tokenFallback (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#573-591) should be declared external
SeedDex.withdrawToken (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#609-626) should be declared external
SeedDex.balanceOf (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#645-649) should be declared external
SeedDex.order (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#679-691) should be declared external
SeedDex.trade (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#727-757) should be declared external
SeedDex.testTrade (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#897-911) should be declared external
SeedDex.amountFilled (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#1013-1025) should be declared external
SeedDex.cancelOrder (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#1059-1093) should be declared external
SeedDex.migrateFunds (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#1125-1165) should be declared external
SeedDex.depositForUser (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#1179-1187) should be declared external
SeedDex.depositTokenForUser (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol) should be declared external
SeedDex.checkshash (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Function 'SeedDex.SeedDex' (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#325-373) is not in mixedCase
Constant 'SeedDex.FicAddress' (/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol#247-249) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0x99cd8e1206ed9f4a2fbbd65267c30e63133975cd.sol analyzed (3 contracts), 32 result(s) found
