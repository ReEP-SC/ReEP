INFO:Slither:Compilation warnings/errors on /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:67:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Forwarder() {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:85:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:105:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:127:5: Warning: Use of the "var" keyword is deprecated.
    var forwarderAddress = address(this);
    ^------------------^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:129:5: Warning: Use of the "var" keyword is deprecated.
    var forwarderBalance = instance.balanceOf(forwarderAddress);
    ^------------------^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:139:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:161:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:245:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:271:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function WalletSimple(address[] allowedSigners) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:277:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:293:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:367:5: Warning: Use of the "var" keyword is deprecated.
    var operationHash = sha3("ETHER", toAddress, value, data, expireTime, sequenceId);
    ^---------------^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:371:5: Warning: Use of the "var" keyword is deprecated.
    var otherSigner = verifyMultiSig(toAddress, operationHash, signature, expireTime, sequenceId);
    ^-------------^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:381:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:419:5: Warning: Use of the "var" keyword is deprecated.
    var operationHash = sha3("ERC20", toAddress, value, tokenContractAddress, expireTime, sequenceId);
    ^---------------^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:423:5: Warning: Use of the "var" keyword is deprecated.
    var otherSigner = verifyMultiSig(toAddress, operationHash, signature, expireTime, sequenceId);
    ^-------------^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:431:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:487:5: Warning: Use of the "var" keyword is deprecated.
    var otherSigner = recoverAddressFromSignature(operationHash, signature);
    ^-------------^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:497:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:507:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:523:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:531:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:605:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:663:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:681:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:691:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:109:5: Warning: Invoking events without "emit" prefix is deprecated.
    ForwarderDeposited(msg.sender, msg.value, msg.data);
    ^-------------------------------------------------^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:143:5: Warning: Invoking events without "emit" prefix is deprecated.
    TokensFlushed(tokenContractAddress, forwarderBalance);
    ^---------------------------------------------------^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:159:35: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    if (!parentAddress.call.value(this.balance)())
                                  ^----------^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:315:7: Warning: Invoking events without "emit" prefix is deprecated.
      Deposited(msg.sender, msg.value, msg.data);
      ^----------------------------------------^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:367:25: Warning: "sha3" has been deprecated in favour of "keccak256"
    var operationHash = sha3("ETHER", toAddress, value, data, expireTime, sequenceId);
                        ^-----------------------------------------------------------^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:367:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    var operationHash = sha3("ETHER", toAddress, value, data, expireTime, sequenceId);
                        ^-----------------------------------------------------------^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:385:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transacted(msg.sender, otherSigner, operationHash, toAddress, value, data);
    ^------------------------------------------------------------------------^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:419:25: Warning: "sha3" has been deprecated in favour of "keccak256"
    var operationHash = sha3("ERC20", toAddress, value, tokenContractAddress, expireTime, sequenceId);
                        ^---------------------------------------------------------------------------^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:419:25: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    var operationHash = sha3("ERC20", toAddress, value, tokenContractAddress, expireTime, sequenceId);
                        ^---------------------------------------------------------------------------^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:435:5: Warning: Invoking events without "emit" prefix is deprecated.
    TokenTransacted(msg.sender, otherSigner, operationHash, toAddress, value, tokenContractAddress);
    ^---------------------------------------------------------------------------------------------^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:553:5: Warning: Invoking events without "emit" prefix is deprecated.
    SafeModeActivated(msg.sender);
    ^---------------------------^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:25:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint256 _value) returns (bool success);
  ^--------------------------------------------------------------------^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:29:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint256 balance);
  ^--------------------------------------------------------------------^
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:67:3: Warning: No visibility specified. Defaulting to "public". 
  function Forwarder() {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:101:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:123:3: Warning: No visibility specified. Defaulting to "public". 
  function flushTokens(address tokenContractAddress) onlyParent {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:157:3: Warning: No visibility specified. Defaulting to "public". 
  function flush() {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:271:3: Warning: No visibility specified. Defaulting to "public". 
  function WalletSimple(address[] allowedSigners) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:287:5: Warning: No visibility specified. Defaulting to "public". 
    function init(address[] allowedSigners) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:309:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:331:3: Warning: No visibility specified. Defaulting to "public". 
  function createForwarder() onlysigner returns (address) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:363:3: Warning: No visibility specified. Defaulting to "public". 
  function sendMultiSig(address toAddress, uint value, bytes data, uint expireTime, uint sequenceId, bytes signature) onlysigner {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:415:3: Warning: No visibility specified. Defaulting to "public". 
  function sendMultiSigToken(address toAddress, uint value, address tokenContractAddress, uint expireTime, uint sequenceId, bytes signature) onlysigner {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:453:3: Warning: No visibility specified. Defaulting to "public". 
  function flushForwarderTokens(address forwarderAddress, address tokenContractAddress) onlysigner {    
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:549:3: Warning: No visibility specified. Defaulting to "public". 
  function activateSafeMode() onlysigner {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:569:3: Warning: No visibility specified. Defaulting to "public". 
  function isSigner(address signer) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:709:3: Warning: No visibility specified. Defaulting to "public". 
  function getNextSequenceId() returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:569:3: Warning: Function state mutability can be restricted to view
  function isSigner(address signer) returns (bool) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:601:3: Warning: Function state mutability can be restricted to pure
  function recoverAddressFromSignature(bytes32 operationHash, bytes signature) private returns (address) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:709:3: Warning: Function state mutability can be restricted to view
  function getNextSequenceId() returns (uint) {
  ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
Forwarder.flush (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#171-173) sends eth to arbitrary user
	Dangerous calls:
	- ! parentAddress.call.value(this.balance)() (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#171-173)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
Forwarder.flushTokens (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#125-153) uses a dangerous strict equality:
	- forwarderBalance == 0
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#dangerous-strict-equalities[0m
INFO:Detectors:[92m
WalletSimple.verifyMultiSig (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#501-573) uses timestamp for comparisons
	Dangerous comparisons:
	- expireTime < block.timestamp (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#545)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
WalletSimple.recoverAddressFromSignature uses assembly (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#633-659)
	- /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#645-653
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
Deprecated standard detected @ /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#109:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#151:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#173:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#97:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#305:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#315:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#385-393:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#396-397:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#435-443:
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected @ /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#449:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#530-531:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#545:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#565:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#571:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#641:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#695:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#715:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected @ /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#261:
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#deprecated-standards[0m
INFO:Detectors:[92m
ERC20Interface.transfer (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#25-27) should be declared external
ERC20Interface.balanceOf (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#29-37) should be declared external
Forwarder.fallback (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#107-117) should be declared external
Forwarder.flushTokens (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#125-153) should be declared external
Forwarder.flush (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#171-173) should be declared external
WalletSimple.init (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#309-325) should be declared external
WalletSimple.fallback (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#327-341) should be declared external
WalletSimple.createForwarder (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#343-345) should be declared external
WalletSimple.sendMultiSig (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#375-397) should be declared external
WalletSimple.sendMultiSigToken (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#427-455) should be declared external
WalletSimple.flushForwarderTokens (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#471-475) should be declared external
WalletSimple.activateSafeMode (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#591-593) should be declared external
WalletSimple.getNextSequenceId (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol:
	- pragma solidity^0.4.14 (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#9-14): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Low level call in Forwarder.fallback (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#107-117):
	-! parentAddress.call.value(msg.value)(msg.data) /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#107-109
Low level call in Forwarder.flush (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#171-173):
	-! parentAddress.call.value(this.balance)() /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#171-173
Low level call in WalletSimple.sendMultiSig (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#375-397):
	-! (toAddress.call.value(value)(data)) /sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#395-397
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#low-level-calls[0m
INFO:Detectors:[92m
Function 'Forwarder.Forwarder' (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#75-77) is not in mixedCase
Function 'WalletSimple.WalletSimple' (/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol#289-309) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0x6630f77801e3d8ee4c624a628d0979ab9e7d111b.sol analyzed (3 contracts), 42 result(s) found
