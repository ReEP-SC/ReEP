INFO:Slither:Compilation warnings/errors on /sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol:
/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol:161:5: Warning: Functions in interfaces should be declared external.
    function addVersion(string _contractName, string version, address implementation) public;
    ^---------------------------------------------------------------------------------------^
/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol:169:5: Warning: Functions in interfaces should be declared external.
    function getVersion(string _contractName, string version) public view returns (address);
    ^--------------------------------------------------------------------------------------^
/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol:601:44: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 keyHashUserNameToAddress = keccak256("username2currentAddress", usernameBytes32);
                                           ^---------------------------------------------------^
/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol:602:44: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 keyHashAddressToUserName = keccak256("address2username", _userAddress);
                                           ^-----------------------------------------^
/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol:662:43: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 keyHashPlasmaToEthereum = keccak256("plasma2ethereum", plasmaAddress);
                                          ^-----------------------------------------^
/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol:663:43: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 keyHashEthereumToPlasma = keccak256("ethereum2plasma", ethereumAddress);
                                          ^-------------------------------------------^
/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol:711:43: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        PROXY_STORAGE_CONTRACT.setAddress(keccak256("username2currentAddress", stringToBytes32(currentUsername)), address(0));
                                          ^--------------------------------------------------------------------^
/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol:737:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return PROXY_STORAGE_CONTRACT.getAddress(keccak256("username2currentAddress", usernameBytes));
                                                 ^-------------------------------------------------^
/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol:752:43: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 keyHashPlasmaToEthereum = keccak256("plasma2ethereum", plasmaAddress);
                                          ^-----------------------------------------^
/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol:772:43: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 keyHashEthereumToPlasma = keccak256("ethereum2plasma", ethereumAddress);
                                          ^-------------------------------------------^
/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol:793:67: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        string memory username = PROXY_STORAGE_CONTRACT.getString(keccak256("address2username", _userAddress));
                                                                  ^-----------------------------------------^
/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol:795:43: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes32 keyHashEthereumToPlasma = keccak256("ethereum2plasma", _userAddress);
                                          ^----------------------------------------^
/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol:833:49: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return PROXY_STORAGE_CONTRACT.getString(keccak256("address2username", keyAddress));
                                                ^---------------------------------------^
/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol:849:50: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        return PROXY_STORAGE_CONTRACT.getAddress(keccak256("username2currentAddress", _username));
                                                 ^---------------------------------------------^
/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol:542:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function initialize(address sender) public payable {
                        ^------------^
/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol:187:27: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
            let result := call(  // use WARNING because this should be staticcall BUT geth crash!
                          ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol:217:27: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
            let result := call(  // use WARNING because this should be staticcall BUT geth crash!
                          ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol:248:27: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
            let result := call(  // use WARNING because this should be staticcall BUT geth crash!
                          ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[91m
UpgradeabilityStorage.registry (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#523-525) is never initialized. It is used in:
	- initialize (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#542-547)
UpgradeabilityStorage._implementation (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#526-528) is never initialized. It is used in:
	- implementation (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#532-537)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#uninitialized-state-variables[0m
INFO:Detectors:[93m
Call.params0 (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#177-205) is declared view but contains assembly code
Call.params1 (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#205-235) is declared view but contains assembly code
Call.params2 (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#235-262) is declared view but contains assembly code
Call.loadAddress (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#262-272) is declared view but contains assembly code
Call.loadUint8 (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#272-283) is declared view but contains assembly code
Call.recoverHash (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#283-322) is declared view but contains assembly code
Utils.stringToBytes32 (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#438-454) is declared view but contains assembly code
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#constant-functions-changing-the-state[0m
INFO:Detectors:[93m
Contract locking ether found in /sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol:
	Contract TwoKeyRegistry has payable functions:
	 - initialize (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#542-547)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[92m
Call.params0 uses assembly (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#177-205)
	- /sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#181-205
Call.params1 uses assembly (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#205-235)
	- /sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#209-235
Call.params2 uses assembly (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#235-262)
	- /sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#239-262
Call.loadAddress uses assembly (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#262-272)
	- /sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#265-269
Call.loadUint8 uses assembly (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#272-283)
	- /sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#275-279
Call.recoverHash uses assembly (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#283-322)
	- /sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#291-296
	- /sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#298-303
	- /sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#305-309
Utils.stringToBytes32 uses assembly (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#438-454)
	- /sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#449-454
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#assembly-usage[0m
INFO:Detectors:[92m
UpgradeabilityStorage._implementation should be constant (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#526-528)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
ITwoKeyEventSourceEvents.ethereumOf (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#56-57) should be declared external
ITwoKeyEventSourceEvents.plasmaOf (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#57-59) should be declared external
ITwoKeyEventSourceEvents.emitHandleChangedEvent (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#114-121) should be declared external
ITwoKeyMaintainersRegistry.checkIsAddressMaintainer (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#124-125) should be declared external
ITwoKeyMaintainersRegistry.checkIsAddressCoreDev (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#125-127) should be declared external
ITwoKeyMaintainersRegistry.addMaintainers (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#127-128) should be declared external
ITwoKeyMaintainersRegistry.addCoreDevs (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#128-129) should be declared external
ITwoKeyMaintainersRegistry.removeMaintainers (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#129-130) should be declared external
ITwoKeyMaintainersRegistry.removeCoreDevs (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#130-133) should be declared external
ITwoKeySingletoneRegistryFetchAddress.getContractProxyAddress (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#134-135) should be declared external
ITwoKeySingletoneRegistryFetchAddress.getNonUpgradableContractAddress (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#135-136) should be declared external
ITwoKeySingletoneRegistryFetchAddress.getLatestCampaignApprovedVersion (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#136-139) should be declared external
ITwoKeySingletonesRegistry.addVersion (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#161-163) should be declared external
ITwoKeySingletonesRegistry.getVersion (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#169-172) should be declared external
Call.params0 (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#177-205) should be declared external
Call.params1 (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#205-235) should be declared external
Call.params2 (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#235-262) should be declared external
Call.recoverSig (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#404-432) should be declared external
UpgradeabilityStorage.implementation (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#532-537) should be declared external
Upgradeable.initialize (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#542-547) should be declared external
TwoKeyRegistry.setInitialParams (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#567-582) should be declared external
TwoKeyRegistry.registerUserByMaintainer (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#679-694) should be declared external
TwoKeyRegistry.changeUsername (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#700-724) should be declared external
TwoKeyRegistry.getUserName2UserAddress (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#729-740) should be declared external
TwoKeyRegistry.getPlasmaToEthereum (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#745-758) should be declared external
TwoKeyRegistry.checkIfUserExists (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#786-804) should be declared external
TwoKeyRegistry.getUserData (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#809-821) should be declared external
TwoKeyRegistry.username2currentAddress (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#842-852) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol:
	- pragma solidity^0.4.13 (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#5-7): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Parameter '_username_walletName' of ITwoKeyEventSourceEvents.userRegistered (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#103-104) is not in mixedCase
Parameter '_method' of Call.params0 (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#177) is not in mixedCase
Parameter '_method' of Call.params1 (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#205) is not in mixedCase
Parameter '_method' of Call.params2 (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#235) is not in mixedCase
Parameter 'last_address' of Call.recoverSigParts (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#337) is not in mixedCase
Parameter 'old_key' of Call.recoverSig (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#404) is not in mixedCase
Parameter 'last_address' of Call.recoverSig (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#404) is not in mixedCase
Parameter '_a' of Utils.strConcat (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#460-461) is not in mixedCase
Parameter '_b' of Utils.strConcat (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#461-462) is not in mixedCase
Parameter '_c' of Utils.strConcat (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#462-463) is not in mixedCase
Variable 'ITwoKeySingletonUtils.TWO_KEY_SINGLETON_REGISTRY' (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#485-487) is not in mixedCase
Variable 'UpgradeabilityStorage._implementation' (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#526-528) is not in mixedCase
Parameter '_twoKeySingletonesRegistry' of TwoKeyRegistry.setInitialParams (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#568-569) is not in mixedCase
Parameter '_proxyStorage' of TwoKeyRegistry.setInitialParams (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#569-570) is not in mixedCase
Parameter '_username' of TwoKeyRegistry.addOrChangeUsernameInternal (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#592-593) is not in mixedCase
Parameter '_userAddress' of TwoKeyRegistry.addOrChangeUsernameInternal (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#593-594) is not in mixedCase
Parameter '_username' of TwoKeyRegistry.addName (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#622-623) is not in mixedCase
Parameter '_userEthereumAddress' of TwoKeyRegistry.addName (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#623-624) is not in mixedCase
Parameter '_username' of TwoKeyRegistry.getUserName2UserAddress (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#730-731) is not in mixedCase
Parameter '_userAddress' of TwoKeyRegistry.checkIfUserExists (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#787-788) is not in mixedCase
Parameter '_userAddress' of TwoKeyRegistry.getUserData (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#810-811) is not in mixedCase
Parameter '_username' of TwoKeyRegistry.username2currentAddress (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#843-844) is not in mixedCase
Constant 'TwoKeyRegistry._twoKeyMaintainersRegistry' (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#553-555) is not in UPPER_CASE_WITH_UNDERSCORES
Variable 'TwoKeyRegistry.PROXY_STORAGE_CONTRACT' (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#555-558) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Detectors:[92m
TwoKeyRegistry._twoKeyMaintainersRegistry (/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol#553-555) is never used in TwoKeyRegistry
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-state-variables[0m
INFO:Slither:/sb/0xa791ae83974af17ce4207a5f86d44a0356abe97b.sol analyzed (12 contracts), 72 result(s) found
