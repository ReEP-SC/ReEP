INFO:Slither:Compilation warnings/errors on /sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:119:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:469:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ComplexExchanger(
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:743:1: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
function LibertyToken() public {
^ (Relevant source part starts here and spans across multiple lines).
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:771:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function LBRSMultitransfer(address LBRS, address _sender) public {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:87:5: Warning: Functions in interfaces should be declared external.
    function buyTokens(address _recipient) payable public;
    ^----------------------------------------------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:88:5: Warning: Functions in interfaces should be declared external.
    function sellTokens(address _recipient, uint256 tokensCount) public;
    ^------------------------------------------------------------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:91:5: Warning: Functions in interfaces should be declared external.
    function requestRates() payable public;
    ^-------------------------------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:92:5: Warning: Functions in interfaces should be declared external.
    function calcRates() public;
    ^--------------------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:95:5: Warning: Functions in interfaces should be declared external.
    function tokenBalance() public view returns(uint256);
    ^---------------------------------------------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:96:5: Warning: Functions in interfaces should be declared external.
    function getOracleData(uint number) public view returns (address, bytes32, bytes16, bool, uint256, uint256, uint256);
    ^-------------------------------------------------------------------------------------------------------------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:99:5: Warning: Functions in interfaces should be declared external.
    function refillBalance() payable public;
    ^--------------------------------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:100:5: Warning: Functions in interfaces should be declared external.
    function withdrawReserve() public;
    ^--------------------------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:137:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:198:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:239:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:255:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:281:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:302:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    ^-----------------------------------------------------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:328:5: Warning: Invoking events without "emit" prefix is deprecated.
    Burn(burner, _value);
    ^------------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:359:5: Warning: Invoking events without "emit" prefix is deprecated.
    Mint(_to, _amount);
    ^----------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:360:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(address(0), _to, _amount);
    ^--------------------------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:370:5: Warning: Invoking events without "emit" prefix is deprecated.
    MintFinished();
    ^------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:404:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, pendingOwner);
    ^---------------------------------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:536:9: Warning: Invoking events without "emit" prefix is deprecated.
        Buy(msg.sender, recipient, tokensAmount, buyRate);
        ^-----------------------------------------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:553:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        if (cryptoAmount > this.balance) {
                           ^----------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:554:51: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            uint256 extraTokens = (cryptoAmount - this.balance).mul(sellRate) / RATE_MULTIPLIER;
                                                  ^----------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:555:28: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
            cryptoAmount = this.balance;
                           ^----------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:562:9: Warning: Invoking events without "emit" prefix is deprecated.
        Sell(msg.sender, recipient, cryptoAmount, sellRate);
        ^-------------------------------------------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:587:17: Warning: Invoking events without "emit" prefix is deprecated.
                OracleRequest(oracles[i]);
                ^-----------------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:627:17: Warning: Invoking events without "emit" prefix is deprecated.
                InvalidRate(rate, oracles[i]);
                ^---------------------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:711:25: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        ReserveWithdraw(this.balance);
                        ^----------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:711:9: Warning: Invoking events without "emit" prefix is deprecated.
        ReserveWithdraw(this.balance);
        ^---------------------------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:712:33: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        withdrawWallet.transfer(this.balance);
                                ^----------^
/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:720:9: Warning: Invoking events without "emit" prefix is deprecated.
        ReserveRefill(msg.value);
        ^----------------------^

INFO:Detectors:[91m
ComplexExchanger.requestRates (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#582-613) sends eth to arbitrary user
	Dangerous calls:
	- oracles[i].transfer(callPrice) (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#607)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#functions-that-send-ether-to-arbitrary-destinations[0m
INFO:Detectors:[93m
Reentrancy in ComplexExchanger.calcRates (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#626-661):
	External calls:
	- require(bool)(getState() == State.CALC_RATES) (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#627-629)
	State variables written after the call(s):
	- calcTime (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#661)
Reentrancy in ComplexExchanger.requestRates (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#582-613):
	External calls:
	- require(bool)(getState() == State.REQUEST_RATES) (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#583-586)
	State variables written after the call(s):
	- requestTime (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#610-612)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-1[0m
INFO:Detectors:[93m
ComplexExchanger.buyTokens (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#530-554) does not use the value returned by external calls:
	-token.transfer(recipient,tokensAmount) (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#548-550)
ComplexExchanger.sellTokens (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#557-580) does not use the value returned by external calls:
	-token.transferFrom(msg.sender,this,tokensCount) (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#573-576)
LBRSMultitransfer.multiTransfer (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#787-796) does not use the value returned by external calls:
	-token.transfer(recipient[i],balance[i]) (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#795-796)
LBRSMultitransfer.withdrawTokens (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol) does not use the value returned by external calls:
	-token.transfer(owner,tokenBalance()) (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
ComplexExchanger.requestRates has external calls inside a loop:
	- callPrice = oracle.getPrice() (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#599-600)
ComplexExchanger.requestRates has external calls inside a loop:
	- oracles[i].transfer(callPrice) (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#607)
ComplexExchanger.requestRates has external calls inside a loop:
	- oracle.updateRate() (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#607-610)
ComplexExchanger.calcRates has external calls inside a loop:
	- rate = oracle.rate() (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#634-635)
ComplexExchanger.calcRates has external calls inside a loop:
	- oracle.waitQuery() (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#635)
ComplexExchanger.requestPrice has external calls inside a loop:
	- requestCost = requestCost.add(OracleI(oracles[i]).getPrice()) (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#620-622)
ComplexExchanger.readyOracles has external calls inside a loop:
	- (oracle.rate() != 0) && ! oracle.waitQuery() && (now - oracle.updateTime()) < ORACLE_ACTUAL (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#709-712)
ComplexExchanger.waitingOracles has external calls inside a loop:
	- OracleI(oracles[i]).waitQuery() && (now - requestTime) < ORACLE_TIMEOUT (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#723-727)
LBRSMultitransfer.multiTransfer has external calls inside a loop:
	- token.transfer(recipient[i],balance[i]) (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#795-796)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation/_edit#calls-inside-a-loop[0m
INFO:Detectors:[92m
Reentrancy in ComplexExchanger.calcRates (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#626-661):
	External calls:
	- require(bool)(getState() == State.CALC_RATES) (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#627-629)
	State variables written after the call(s):
	- buyRate (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#654-658)
	- sellRate (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#659-661)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#reentrancy-vulnerabilities-2[0m
INFO:Detectors:[92m
LibertyToken.decimals should be constant (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#763)
LibertyToken.name should be constant (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#762)
LibertyToken.symbol should be constant (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#762-763)
OracleI.callbackTime should be constant (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#78-79)
OracleI.oracleName should be constant (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#74-75)
OracleI.oracleType should be constant (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#75-76)
OracleI.rate should be constant (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#76-77)
OracleI.updateTime should be constant (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#78)
OracleI.waitQuery should be constant (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#77-78)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
OracleI.getPrice (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#79-80) should be declared external
OracleI.setBank (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#80-81) should be declared external
OracleI.setGasPrice (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#81-82) should be declared external
OracleI.setGasLimit (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#82-86) should be declared external
ExchangerI.sellTokens (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#90-92) should be declared external
ComplexExchanger.sellTokens (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#557-580) should be declared external
ExchangerI.requestRates (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#94-95) should be declared external
ComplexExchanger.requestRates (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#582-613) should be declared external
ComplexExchanger.calcRates (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#626-661) should be declared external
ExchangerI.calcRates (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#95-96) should be declared external
ComplexExchanger.getOracleData (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#679-697) should be declared external
ExchangerI.getOracleData (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#96-100) should be declared external
ComplexExchanger.refillBalance (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#749-752) should be declared external
ExchangerI.refillBalance (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#104-105) should be declared external
ExchangerI.withdrawReserve (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#105) should be declared external
ComplexExchanger.withdrawReserve (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#731-744) should be declared external
Ownable.transferOwnership (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#137-149) should be declared external
Claimable.transferOwnership (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#414-417) should be declared external
BasicToken.totalSupply (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#188-191) should be declared external
ERC20Basic.totalSupply (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#152-153) should be declared external
BasicToken.balanceOf (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#217-218) should be declared external
ERC20Basic.balanceOf (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#153-156) should be declared external
ERC20Basic.transfer (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#157-158) should be declared external
BasicToken.transfer (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#195-206) should be declared external
StandardToken.allowance (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#272-274) should be declared external
ERC20.allowance (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#162-163) should be declared external
ERC20.transferFrom (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#164-168) should be declared external
StandardToken.transferFrom (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#236-247) should be declared external
StandardToken.approve (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#260-263) should be declared external
ERC20.approve (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#169-170) should be declared external
StandardToken.increaseApproval (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#286-291) should be declared external
StandardToken.decreaseApproval (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#300-320) should be declared external
BurnableToken.burn (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#326-338) should be declared external
MintableToken.mint (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#366-378) should be declared external
MintableToken.finishMinting (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#382-388) should be declared external
Claimable.claimOwnership (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#419-427) should be declared external
ComplexExchanger.fallback (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#483-486) should be declared external
ComplexExchanger.requestPrice (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#616-623) should be declared external
ComplexExchanger.oracleCount (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#665-668) should be declared external
ComplexExchanger.setDeadline (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#759-760) should be declared external
LBRSMultitransfer.multiTransfer (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#787-796) should be declared external
LBRSMultitransfer.setSender (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol) should be declared external
LBRSMultitransfer.kill (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol:
	- pragma solidity^0.4.21 (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#124-127) is not in mixedCase
Parameter '_owner' of BasicToken.balanceOf (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#217) is not in mixedCase
Parameter '_to' of BasicToken.transfer (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#195-196) is not in mixedCase
Parameter '_value' of BasicToken.transfer (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#196) is not in mixedCase
Parameter '_owner' of StandardToken.allowance (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#272-273) is not in mixedCase
Parameter '_spender' of StandardToken.allowance (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#273) is not in mixedCase
Parameter '_from' of StandardToken.transferFrom (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#236-237) is not in mixedCase
Parameter '_to' of StandardToken.transferFrom (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#237) is not in mixedCase
Parameter '_value' of StandardToken.transferFrom (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#237) is not in mixedCase
Parameter '_spender' of StandardToken.approve (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#260-261) is not in mixedCase
Parameter '_value' of StandardToken.approve (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#261) is not in mixedCase
Parameter '_spender' of StandardToken.increaseApproval (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#286) is not in mixedCase
Parameter '_addedValue' of StandardToken.increaseApproval (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#286) is not in mixedCase
Parameter '_spender' of StandardToken.decreaseApproval (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#302) is not in mixedCase
Parameter '_subtractedValue' of StandardToken.decreaseApproval (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#302) is not in mixedCase
Parameter '_value' of BurnableToken.burn (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#326-327) is not in mixedCase
Parameter '_to' of MintableToken.mint (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#366-368) is not in mixedCase
Parameter '_amount' of MintableToken.mint (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#368) is not in mixedCase
Parameter '_recipient' of ComplexExchanger.buyTokens (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#531) is not in mixedCase
Parameter '_recipient' of ComplexExchanger.sellTokens (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#559) is not in mixedCase
Function 'ComplexExchanger.ComplexExchanger' (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#486-514) is not in mixedCase
Parameter '_token' of ComplexExchanger.ComplexExchanger (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#488) is not in mixedCase
Parameter '_buyFee' of ComplexExchanger.ComplexExchanger (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#489) is not in mixedCase
Parameter '_sellFee' of ComplexExchanger.ComplexExchanger (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#489-490) is not in mixedCase
Parameter '_oracles' of ComplexExchanger.ComplexExchanger (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#490-491) is not in mixedCase
Parameter '_deadline' of ComplexExchanger.ComplexExchanger (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#491-492) is not in mixedCase
Parameter '_withdrawWallet' of ComplexExchanger.ComplexExchanger (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#494-495) is not in mixedCase
Parameter '_deadline' of ComplexExchanger.setDeadline (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#759) is not in mixedCase
Function 'LibertyToken.LibertyToken' (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#764-771) is not in mixedCase
Function 'LBRSMultitransfer.LBRSMultitransfer' (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#802-806) is not in mixedCase
Parameter 'LBRS' of LBRSMultitransfer.LBRSMultitransfer (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#803-804) is not in mixedCase
Parameter '_sender' of LBRSMultitransfer.LBRSMultitransfer (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol#804) is not in mixedCase
Parameter '_sender' of LBRSMultitransfer.setSender (/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0xba45e9994643704ac0055aa983fd0ed3b107396d.sol analyzed (16 contracts), 95 result(s) found
