INFO:Slither:Compilation warnings/errors on /sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol:
/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol:456:9: Warning: Uninitialized storage pointer.
        uint256[2] storage karmaDiff;
        ^--------------------------^
/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol:475:39: Warning: Unused local variable
    function applyAuditorsCheckUpdate(address from, address to, uint fraudCountDelta) onlyChannelContract {
                                      ^----------^
/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol:475:53: Warning: Unused local variable
    function applyAuditorsCheckUpdate(address from, address to, uint fraudCountDelta) onlyChannelContract {
                                                    ^--------^
/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol:475:65: Warning: Unused local variable
    function applyAuditorsCheckUpdate(address from, address to, uint fraudCountDelta) onlyChannelContract {
                                                                ^------------------^

INFO:Detectors:[93m
DepositAware.returnDeposit (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#215-230) does not use the value returned by external calls:
	-token.transfer(depositOwner,amount) (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#226-228)
SecurityDepositAware.receiveSecurityDeposit (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#233-241) does not use the value returned by external calls:
	-token.transferFrom(msg.sender,this,SECURITY_DEPOSIT_SIZE) (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#235-236)
PapyrusDAO.transferDepositsToNewDao (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol) does not use the value returned by external calls:
	-token.transfer(newDao,depositSum) (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#unused-return[0m
INFO:Detectors:[92m
ERC20.totalSupply should be constant (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#63-66)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#state-variables-that-could-be-declared-constant[0m
INFO:Detectors:[92m
Ownable.transferOwnership (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#21-29) should be declared external
ERC20.transfer (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#51-52) should be declared external
ERC20.transferFrom (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#52-53) should be declared external
ERC20.approve (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#53-54) should be declared external
ERC20.balanceOf (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#54-55) should be declared external
ERC20.allowance (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#55-62) should be declared external
SSPRegistry.register (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#72-75) should be declared external
SSPRegistry.updatePublisherFee (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#77-79) should be declared external
SSPRegistry.applyKarmaDiff (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#79-80) should be declared external
SSPRegistry.unregister (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#82-83) should be declared external
SSPRegistry.transfer (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#85-87) should be declared external
SSPRegistry.getOwner (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#87-88) should be declared external
SSPRegistry.isRegistered (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#90) should be declared external
SSPRegistry.getSSP (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#90-92) should be declared external
SSPRegistry.getAllSSP (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#92-98) should be declared external
SSPRegistry.kill (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#98-99) should be declared external
PublisherRegistry.register (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#101-102) should be declared external
PublisherRegistry.updateUrl (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#104-107) should be declared external
PublisherRegistry.applyKarmaDiff (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#107-109) should be declared external
PublisherRegistry.unregister (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#110) should be declared external
PublisherRegistry.transfer (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#112-114) should be declared external
PublisherRegistry.getOwner (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#115) should be declared external
PublisherRegistry.isRegistered (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#117) should be declared external
PublisherRegistry.getPublisher (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#117-120) should be declared external
PublisherRegistry.getAllPublishers (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#121-130) should be declared external
PublisherRegistry.kill (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#131) should be declared external
DSPRegistry.register (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#134-137) should be declared external
DSPRegistry.updateUrl (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#139-140) should be declared external
DSPRegistry.applyKarmaDiff (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#140-143) should be declared external
DSPRegistry.unregister (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#143-145) should be declared external
DSPRegistry.transfer (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#147-148) should be declared external
DSPRegistry.getOwner (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#148-150) should be declared external
DSPRegistry.isRegistered (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#150-152) should be declared external
DSPRegistry.getDSP (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#152-154) should be declared external
DSPRegistry.getAllDSP (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#156-161) should be declared external
DSPRegistry.kill (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#161) should be declared external
DepositRegistry.register (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#166-168) should be declared external
DepositRegistry.unregister (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#170) should be declared external
DepositRegistry.transfer (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#170-173) should be declared external
DepositRegistry.spend (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#173-175) should be declared external
DepositRegistry.refill (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#175) should be declared external
DepositRegistry.isRegistered (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#177-179) should be declared external
DepositRegistry.getDepositOwner (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#179) should be declared external
DepositRegistry.getDeposit (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#179-181) should be declared external
DepositRegistry.getDepositRecord (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#181-187) should be declared external
DepositRegistry.hasEnough (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#187-190) should be declared external
DepositRegistry.kill (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#190) should be declared external
AuditorRegistry.register (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#193-196) should be declared external
AuditorRegistry.applyKarmaDiff (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#196) should be declared external
AuditorRegistry.unregister (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#198-200) should be declared external
AuditorRegistry.transfer (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#201-203) should be declared external
AuditorRegistry.getOwner (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#203) should be declared external
AuditorRegistry.isRegistered (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#205-206) should be declared external
AuditorRegistry.getAuditor (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#206-207) should be declared external
AuditorRegistry.getAllAuditors (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#213-214) should be declared external
AuditorRegistry.kill (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#214-215) should be declared external
SecurityDepositAware.transferSecurityDeposit (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#241-246) should be declared external
AuditorRegistrar.findAuditor (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#253-258) should be declared external
AuditorRegistrar.isAuditorRegistered (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#259-261) should be declared external
AuditorRegistrar.registerAuditor (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#265-269) should be declared external
AuditorRegistrar.unregisterAuditor (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#273-281) should be declared external
AuditorRegistrar.transferAuditorRecord (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#284-288) should be declared external
DSPRegistrar.findDsp (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#296-299) should be declared external
DSPRegistrar.registerDsp (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#303-309) should be declared external
DSPRegistrar.isDspRegistered (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#310-313) should be declared external
DSPRegistrar.unregisterDsp (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#318-324) should be declared external
DSPRegistrar.updateUrl (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#326-332) should be declared external
DSPRegistrar.transferDSPRecord (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#335-338) should be declared external
PublisherRegistrar.findPublisher (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#348-351) should be declared external
PublisherRegistrar.isPublisherRegistered (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#351-353) should be declared external
PublisherRegistrar.registerPublisher (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#357-361) should be declared external
PublisherRegistrar.unregisterPublisher (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#366-373) should be declared external
PublisherRegistrar.transferPublisherRecord (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#377-381) should be declared external
SSPRegistrar.findSsp (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#388-394) should be declared external
SSPRegistrar.registerSsp (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#395-402) should be declared external
SSPRegistrar.isSspRegistered (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#403-408) should be declared external
SSPRegistrar.unregisterSsp (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#410-417) should be declared external
SSPRegistrar.updatePublisherFee (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#422-425) should be declared external
SSPRegistrar.transferSSPRecord (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#429-433) should be declared external
StateChannelListener.applyRuntimeUpdate (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#463-490) should be declared external
ChannelApi.applyRuntimeUpdate (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#435-437) should be declared external
StateChannelListener.applyAuditorsCheckUpdate (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#490-495) should be declared external
ChannelApi.applyAuditorsCheckUpdate (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#437-439) should be declared external
RegistryProvider.replaceSSPRegistry (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#441-443) should be declared external
PapyrusDAO.replaceSSPRegistry (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#530-535) should be declared external
RegistryProvider.replaceDSPRegistry (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#443) should be declared external
PapyrusDAO.replaceDSPRegistry (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#535-540) should be declared external
RegistryProvider.replacePublisherRegistry (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#443-445) should be declared external
PapyrusDAO.replacePublisherRegistry (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#541-546) should be declared external
RegistryProvider.replaceAuditorRegistry (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#445-447) should be declared external
PapyrusDAO.replaceAuditorRegistry (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#546-550) should be declared external
RegistryProvider.replaceSecurityDepositRegistry (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#447-450) should be declared external
PapyrusDAO.replaceSecurityDepositRegistry (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#552-560) should be declared external
PapyrusDAO.replaceChannelContractAddress (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#560-569) should be declared external
PapyrusDAO.transferDepositsToNewDao (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol) should be declared external
PapyrusDAO.kill (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol:
	- pragma solidity0.4.15 (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Ownable.Ownable' (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#15-19) is not in mixedCase
Function 'PapyrusDAO.PapyrusDAO' (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#505-518) is not in mixedCase
Parameter '_sspRegistry' of PapyrusDAO.PapyrusDAO (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#506) is not in mixedCase
Parameter '_dspRegistry' of PapyrusDAO.PapyrusDAO (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#509) is not in mixedCase
Parameter '_publisherRegistry' of PapyrusDAO.PapyrusDAO (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#510) is not in mixedCase
Parameter '_auditorRegistry' of PapyrusDAO.PapyrusDAO (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#511) is not in mixedCase
Parameter '_securityDepositRegistry' of PapyrusDAO.PapyrusDAO (/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol#512) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0xbb2ac7e354c2b95ffa58ede51832a443129bb51f.sol analyzed (20 contracts), 108 result(s) found
