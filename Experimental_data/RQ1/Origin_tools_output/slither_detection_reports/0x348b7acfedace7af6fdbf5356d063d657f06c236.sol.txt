INFO:Slither:Compilation warnings/errors on /sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol:
/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol:69:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Owned() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol:107:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function MYDLToken() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol:83:9: Warning: Invoking events without "emit" prefix is deprecated.
        OwnershipTransferred(owner, newOwner);
        ^-----------------------------------^
/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol:113:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(address(0), 0x3D66Cd9687ea3c7C77C093E0526DA0aC65f3da32, _totalSupply);
        ^----------------------------------------------------------------------------^
/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol:141:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, to, tokens);
        ^------------------------------^
/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol:156:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, spender, tokens);
        ^-----------------------------------^
/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol:174:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(from, to, tokens);
        ^------------------------^
/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol:195:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, spender, tokens);
        ^-----------------------------------^

INFO:Detectors:[93m
Contract locking ether found in /sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol:
	Contract MYDLToken has payable functions:
	 - fallback (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#211)
	But does not have a function to withdraw the ether
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#contracts-that-lock-ether[0m
INFO:Detectors:[92m
SafeMath.safeMul (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#26-30) should be declared external
SafeMath.safeDiv (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#30-36) should be declared external
ERC20Interface.totalSupply (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#40-41) should be declared external
MYDLToken.totalSupply (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#125-126) should be declared external
ERC20Interface.balanceOf (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#41-42) should be declared external
MYDLToken.balanceOf (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#133-134) should be declared external
ERC20Interface.allowance (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#42-43) should be declared external
MYDLToken.allowance (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#188-190) should be declared external
MYDLToken.transfer (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#139-147) should be declared external
ERC20Interface.transfer (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#43-44) should be declared external
ERC20Interface.approve (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#44-45) should be declared external
MYDLToken.approve (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#156-164) should be declared external
MYDLToken.transferFrom (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#172-181) should be declared external
ERC20Interface.transferFrom (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#45-47) should be declared external
ApproveAndCallFallBack.receiveApproval (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#56-60) should be declared external
Owned.transferOwnership (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#79-82) should be declared external
Owned.acceptOwnership (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#83-91) should be declared external
MYDLToken.approveAndCall (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#196-204) should be declared external
MYDLToken.fallback (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#211) should be declared external
MYDLToken.transferAnyERC20Token (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol:
	- pragma solidity^0.4.18 (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#1): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Owned.Owned' (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#73-75) is not in mixedCase
Parameter '_newOwner' of Owned.transferOwnership (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#81) is not in mixedCase
Function 'MYDLToken.MYDLToken' (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#110-119) is not in mixedCase
Variable 'MYDLToken._totalSupply' (/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol#101) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/0x348b7acfedace7af6fdbf5356d063d657f06c236.sol analyzed (5 contracts), 26 result(s) found
